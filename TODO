get all chaos sql files parsing
identify the biggest missing bits and create table of supported and
   unsupported elements
work on error reporting, add tests for malformed sql
lex things properly?

make the parse tree nodes more parse tree like
add source locations for tokens in the parse tree

?write a separate ast which the pretty printer uses, better for code
   generation and more typesafe than the parse tree, plus a convertor
   from the parse tree to the ast.

?add type checking and facility to add other static checks

?add a macro system for code generation, etc.

find a parser that supports better error messages, particularly
something which can report multiple errors

rough idea for new design:
parse using parsec -> parse tree with a few suspect bits
run one or more passes over this parse tree to catch missed syntax
   errors -> good parse tree
type check, etc. -> ast
ast -> pretty printer

improve tests:
identify each bit of syntax and make sure there is a test for it
add some bigger tests: lots of sql statements, big functions
look for possible corner cases and add tests

get some big bits of sql, parse them, pretty print them,
load them into pg then do a dump. Run the original sql
through pg and dump and diff the dumps. if they look the same
then use the sql and parse tree produced as a test

get property checker working again