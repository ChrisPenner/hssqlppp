A parser, pretty printer, and type checker for SQL written in
Haskell. Supports PostgreSQL SQL and PL/pgSQL syntax. BSD licensed.

Purpose
=======

Possible uses of this library include:

* parsing SQL
* lint checking SQL code
* type-checker can help with SQL development
* generating SQL code programmatically/ generating SQL from some other
  source
* transforming SQL code using quasiquoting
* viewing the catalog produced by some SQL code
* helping with typesafe database access from haskell
* generating documentation for SQL

Status
======

Pre-alpha. Support for parsing SQL is patchy, but not too
bad. Supports queries/DML and DDL. Here is an extract from the parsing
tests which gives some examples of what can currently be parsed:

* [Parsing examples](ParserTests.html)

The type checker is currently still being fixed after some reworking
of parsing and ast types. It should handle a lot of queries and dml
fine though.

Extract from the type checking tests:

* [Type-checking examples](TypeCheckTests.html)

Currently limited support for quasiquoting, here are the extracts from
the tests:

* [Quasiquotation examples](QuasiQuoteTests.html)

Installation
============

This project is currently developed on GHC 7.0.4. I think it should
work with any 7.0.x.

To install use

~~~~~{.sh}
cabal install hssqlppp
~~~~~

Documentation
=============

[Haddock docs](haddock/index.html)

[Examples](examples.txt.html)

[Some notes on hacking on hssqlppp itself](devel.txt.html)

Useful links
============

Homepage: <http://jakewheat.github.com/hssqlppp/>

Hackage: <http://hackage.haskell.org/package/hssqlppp>

Repository: <https://github.com/JakeWheat/hssqlppp>

Changes: <https://github.com/JakeWheat/hssqlppp/blob/master/CHANGES>

Reporting issues and feature requests
=====================================

Use the github issue tracker. Please supply an example of SQL which
doesn't parse/typecheck correctly where relevant.

<https://github.com/JakeWheat/hssqlppp/issues>


Provisional future plans
========================

* parameterized statements/typesafe haskell access
* some simple syntax extension support for SQL
* a 'compiler' command to help developing SQL
* parse most PostgreSQL syntax, possibly other SQL dialects as well
* improve the typechecker
* improve the catalog
* improve the quasi-quoting
* documentation generator for SQL codebases

Contact
=======

Let me know if you're using/ interested in using the library, if you
have any problems, bug reports, or suggestions, etc.. All
contributions, comments and criticism welcome:

jakewheatmail@gmail.com
