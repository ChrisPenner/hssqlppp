{-
================================================================================

= create view

-}

SEM Statement
    | CreateView
        loc.tpe = chainTypeCheckFailed [getTypeAnnotation @expr.annotatedTree] $ Right $ Pseudo Void
        loc.backTree = CreateView @ann @name @expr.annotatedTree
        loc.statementInfo = []
        loc.attrs = case getTypeAnnotation @expr.annotatedTree of
                      SetOfType (UnnamedCompositeType c) -> c
                      _ -> []
        loc.envUpdates = [EnvCreateView @name @loc.attrs]



{-
================================================================================

= create type

-}
ATTR TypeAttributeDef [||attrName : String
                            namedType : Type]

SEM TypeAttributeDef
    | TypeAttDef
        lhs.attrName = @name
        lhs.namedType = @typ.namedType

ATTR TypeAttributeDefList [||attrs : {[(String, Type)]}]

SEM TypeAttributeDefList
    | Cons lhs.attrs = (@hd.attrName, @hd.namedType) : @tl.attrs
    | Nil lhs.attrs = []

SEM Statement
    | CreateType
        loc.tpe = Right $ Pseudo Void
        loc.backTree = CreateType @ann @name @atts.annotatedTree
        loc.statementInfo = []
        loc.envUpdates = [EnvCreateComposite @name @atts.attrs]

{-

================================================================================

= create domain

-}

SEM Statement
    | CreateDomain
        loc.tpe = Right $ Pseudo Void
        loc.backTree = CreateDomain @ann @name @typ.annotatedTree @check.annotatedTree
        loc.statementInfo = []
        loc.envUpdates = [EnvCreateDomain (ScalarType @name) @typ.namedType]
