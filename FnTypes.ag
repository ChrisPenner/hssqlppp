{
binaryOperatorTypes = [
    ("!~",[ScalarType "character",ScalarType "text"],ScalarType "boolean"),
    ("!~",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("!~",[ScalarType "name",ScalarType "text"],ScalarType "boolean"),
    ("!~*",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("!~*",[ScalarType "name",ScalarType "text"],ScalarType "boolean"),
    ("!~*",[ScalarType "character",ScalarType "text"],ScalarType "boolean"),
    ("!~~",[ScalarType "character",ScalarType "text"],ScalarType "boolean"),
    ("!~~",[ScalarType "bytea",ScalarType "bytea"],ScalarType "boolean"),
    ("!~~",[ScalarType "name",ScalarType "text"],ScalarType "boolean"),
    ("!~~",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("!~~*",[ScalarType "name",ScalarType "text"],ScalarType "boolean"),
    ("!~~*",[ScalarType "character",ScalarType "text"],ScalarType "boolean"),
    ("!~~*",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("#",[ScalarType "bigint",ScalarType "bigint"],ScalarType "bigint"),
    ("#",[ScalarType "bit",ScalarType "bit"],ScalarType "bit"),
    ("#",[ScalarType "line",ScalarType "line"],ScalarType "point"),
    ("#",[ScalarType "box",ScalarType "box"],ScalarType "box"),
    ("#",[ScalarType "smallint",ScalarType "smallint"],ScalarType "smallint"),
    ("#",[ScalarType "lseg",ScalarType "lseg"],ScalarType "point"),
    ("#",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("##",[ScalarType "lseg",ScalarType "box"],ScalarType "point"),
    ("##",[ScalarType "point",ScalarType "lseg"],ScalarType "point"),
    ("##",[ScalarType "point",ScalarType "box"],ScalarType "point"),
    ("##",[ScalarType "lseg",ScalarType "lseg"],ScalarType "point"),
    ("##",[ScalarType "point",ScalarType "line"],ScalarType "point"),
    ("##",[ScalarType "lseg",ScalarType "line"],ScalarType "point"),
    ("##",[ScalarType "line",ScalarType "box"],ScalarType "point"),
    ("##",[ScalarType "line",ScalarType "lseg"],ScalarType "point"),
    ("#<",[ScalarType "tinterval",ScalarType "reltime"],ScalarType "boolean"),
    ("#<=",[ScalarType "tinterval",ScalarType "reltime"],ScalarType "boolean"),
    ("#<>",[ScalarType "tinterval",ScalarType "reltime"],ScalarType "boolean"),
    ("#=",[ScalarType "tinterval",ScalarType "reltime"],ScalarType "boolean"),
    ("#>",[ScalarType "tinterval",ScalarType "reltime"],ScalarType "boolean"),
    ("#>=",[ScalarType "tinterval",ScalarType "reltime"],ScalarType "boolean"),
    ("%",[ScalarType "bigint",ScalarType "bigint"],ScalarType "bigint"),
    ("%",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("%",[ScalarType "smallint",ScalarType "smallint"],ScalarType "smallint"),
    ("%",[ScalarType "numeric",ScalarType "numeric"],ScalarType "numeric"),
    ("&",[ScalarType "smallint",ScalarType "smallint"],ScalarType "smallint"),
    ("&",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("&",[ScalarType "bigint",ScalarType "bigint"],ScalarType "bigint"),
    ("&",[ScalarType "bit",ScalarType "bit"],ScalarType "bit"),
    ("&",[ScalarType "inet",ScalarType "inet"],ScalarType "inet"),
    ("&&",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("&&",[ScalarType "tinterval",ScalarType "tinterval"],ScalarType "boolean"),
    ("&&",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("&&",[ScalarType "tsquery",ScalarType "tsquery"],ScalarType "tsquery"),
    ("&&",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("&&",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "boolean"),
    ("&<",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("&<",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("&<",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("&<|",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("&<|",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("&<|",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("&>",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("&>",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("&>",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("*",[ScalarType "integer",ScalarType "smallint"],ScalarType "integer"),
    ("*",[ScalarType "bigint",ScalarType "bigint"],ScalarType "bigint"),
    ("*",[ScalarType "money",ScalarType "real"],ScalarType "money"),
    ("*",[ScalarType "smallint",ScalarType "bigint"],ScalarType "bigint"),
    ("*",[ScalarType "integer",ScalarType "money"],ScalarType "money"),
    ("*",[ScalarType "double precision",ScalarType "real"],ScalarType "double precision"),
    ("*",[ScalarType "path",ScalarType "point"],ScalarType "path"),
    ("*",[ScalarType "money",ScalarType "integer"],ScalarType "money"),
    ("*",[ScalarType "double precision",ScalarType "money"],ScalarType "money"),
    ("*",[ScalarType "double precision",ScalarType "interval"],ScalarType "interval"),
    ("*",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("*",[ScalarType "real",ScalarType "double precision"],ScalarType "double precision"),
    ("*",[ScalarType "real",ScalarType "real"],ScalarType "real"),
    ("*",[ScalarType "bigint",ScalarType "integer"],ScalarType "bigint"),
    ("*",[ScalarType "smallint",ScalarType "money"],ScalarType "money"),
    ("*",[ScalarType "money",ScalarType "smallint"],ScalarType "money"),
    ("*",[ScalarType "point",ScalarType "point"],ScalarType "point"),
    ("*",[ScalarType "circle",ScalarType "point"],ScalarType "circle"),
    ("*",[ScalarType "integer",ScalarType "bigint"],ScalarType "bigint"),
    ("*",[ScalarType "smallint",ScalarType "smallint"],ScalarType "smallint"),
    ("*",[ScalarType "interval",ScalarType "double precision"],ScalarType "interval"),
    ("*",[ScalarType "real",ScalarType "money"],ScalarType "money"),
    ("*",[ScalarType "box",ScalarType "point"],ScalarType "box"),
    ("*",[ScalarType "smallint",ScalarType "integer"],ScalarType "integer"),
    ("*",[ScalarType "double precision",ScalarType "double precision"],ScalarType "double precision"),
    ("*",[ScalarType "numeric",ScalarType "numeric"],ScalarType "numeric"),
    ("*",[ScalarType "bigint",ScalarType "smallint"],ScalarType "bigint"),
    ("*",[ScalarType "money",ScalarType "double precision"],ScalarType "money"),
    ("+",[ScalarType "real",ScalarType "real"],ScalarType "real"),
    ("+",[ScalarType "path",ScalarType "point"],ScalarType "path"),
    ("+",[ScalarType "path",ScalarType "path"],ScalarType "path"),
    ("+",[ScalarType "point",ScalarType "point"],ScalarType "point"),
    ("+",[ScalarType "bigint",ScalarType "bigint"],ScalarType "bigint"),
    ("+",[ScalarType "bigint",ScalarType "integer"],ScalarType "bigint"),
    ("+",[ScalarType "integer",ScalarType "bigint"],ScalarType "bigint"),
    ("+",[ScalarType "bigint",ScalarType "smallint"],ScalarType "bigint"),
    ("+",[ScalarType "smallint",ScalarType "bigint"],ScalarType "bigint"),
    ("+",[ScalarType "date",ScalarType "time with time zone"],ScalarType "timestamp with time zone"),
    ("+",[ScalarType "date",ScalarType "time without time zone"],ScalarType "timestamp without time zone"),
    ("+",[ScalarType "inet",ScalarType "bigint"],ScalarType "inet"),
    ("+",[ScalarType "interval",ScalarType "interval"],ScalarType "interval"),
    ("+",[ScalarType "timestamp with time zone",ScalarType "interval"],ScalarType "timestamp with time zone"),
    ("+",[ScalarType "bigint",ScalarType "inet"],ScalarType "inet"),
    ("+",[ScalarType "numeric",ScalarType "numeric"],ScalarType "numeric"),
    ("+",[ScalarType "double precision",ScalarType "real"],ScalarType "double precision"),
    ("+",[ScalarType "integer",ScalarType "date"],ScalarType "date"),
    ("+",[ScalarType "interval",ScalarType "timestamp with time zone"],ScalarType "timestamp with time zone"),
    ("+",[ScalarType "real",ScalarType "double precision"],ScalarType "double precision"),
    ("+",[ScalarType "interval",ScalarType "timestamp without time zone"],ScalarType "timestamp without time zone"),
    ("+",[ScalarType "interval",ScalarType "time with time zone"],ScalarType "time with time zone"),
    ("+",[ScalarType "time without time zone",ScalarType "interval"],ScalarType "time without time zone"),
    ("+",[ScalarType "interval",ScalarType "date"],ScalarType "timestamp without time zone"),
    ("+",[ScalarType "time with time zone",ScalarType "interval"],ScalarType "time with time zone"),
    ("+",[ScalarType "date",ScalarType "integer"],ScalarType "date"),
    ("+",[ScalarType "smallint",ScalarType "smallint"],ScalarType "smallint"),
    ("+",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("+",[ScalarType "smallint",ScalarType "integer"],ScalarType "integer"),
    ("+",[ScalarType "integer",ScalarType "smallint"],ScalarType "integer"),
    ("+",[ScalarType "date",ScalarType "interval"],ScalarType "timestamp without time zone"),
    ("+",[ScalarType "circle",ScalarType "point"],ScalarType "circle"),
    ("+",[ScalarType "interval",ScalarType "time without time zone"],ScalarType "time without time zone"),
    ("+",[ScalarType "time with time zone",ScalarType "date"],ScalarType "timestamp with time zone"),
    ("+",[ScalarType "aclitem[]",ScalarType "aclitem"],ScalarType "aclitem[]"),
    ("+",[ScalarType "abstime",ScalarType "reltime"],ScalarType "abstime"),
    ("+",[ScalarType "timestamp without time zone",ScalarType "interval"],ScalarType "timestamp without time zone"),
    ("+",[ScalarType "double precision",ScalarType "double precision"],ScalarType "double precision"),
    ("+",[ScalarType "time without time zone",ScalarType "date"],ScalarType "timestamp without time zone"),
    ("+",[ScalarType "money",ScalarType "money"],ScalarType "money"),
    ("+",[ScalarType "box",ScalarType "point"],ScalarType "box"),
    ("-",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("-",[ScalarType "double precision",ScalarType "double precision"],ScalarType "double precision"),
    ("-",[ScalarType "real",ScalarType "double precision"],ScalarType "double precision"),
    ("-",[ScalarType "double precision",ScalarType "real"],ScalarType "double precision"),
    ("-",[ScalarType "money",ScalarType "money"],ScalarType "money"),
    ("-",[ScalarType "inet",ScalarType "bigint"],ScalarType "inet"),
    ("-",[ScalarType "path",ScalarType "point"],ScalarType "path"),
    ("-",[ScalarType "numeric",ScalarType "numeric"],ScalarType "numeric"),
    ("-",[ScalarType "timestamp with time zone",ScalarType "timestamp with time zone"],ScalarType "interval"),
    ("-",[ScalarType "timestamp with time zone",ScalarType "interval"],ScalarType "timestamp with time zone"),
    ("-",[ScalarType "interval",ScalarType "interval"],ScalarType "interval"),
    ("-",[ScalarType "smallint",ScalarType "bigint"],ScalarType "bigint"),
    ("-",[ScalarType "box",ScalarType "point"],ScalarType "box"),
    ("-",[ScalarType "timestamp without time zone",ScalarType "timestamp without time zone"],ScalarType "interval"),
    ("-",[ScalarType "bigint",ScalarType "smallint"],ScalarType "bigint"),
    ("-",[ScalarType "integer",ScalarType "bigint"],ScalarType "bigint"),
    ("-",[ScalarType "bigint",ScalarType "integer"],ScalarType "bigint"),
    ("-",[ScalarType "date",ScalarType "interval"],ScalarType "timestamp without time zone"),
    ("-",[ScalarType "integer",ScalarType "smallint"],ScalarType "integer"),
    ("-",[ScalarType "time without time zone",ScalarType "time without time zone"],ScalarType "interval"),
    ("-",[ScalarType "aclitem[]",ScalarType "aclitem"],ScalarType "aclitem[]"),
    ("-",[ScalarType "bigint",ScalarType "bigint"],ScalarType "bigint"),
    ("-",[ScalarType "smallint",ScalarType "integer"],ScalarType "integer"),
    ("-",[ScalarType "smallint",ScalarType "smallint"],ScalarType "smallint"),
    ("-",[ScalarType "time with time zone",ScalarType "interval"],ScalarType "time with time zone"),
    ("-",[ScalarType "date",ScalarType "date"],ScalarType "integer"),
    ("-",[ScalarType "date",ScalarType "integer"],ScalarType "date"),
    ("-",[ScalarType "time without time zone",ScalarType "interval"],ScalarType "time without time zone"),
    ("-",[ScalarType "point",ScalarType "point"],ScalarType "point"),
    ("-",[ScalarType "abstime",ScalarType "reltime"],ScalarType "abstime"),
    ("-",[ScalarType "circle",ScalarType "point"],ScalarType "circle"),
    ("-",[ScalarType "real",ScalarType "real"],ScalarType "real"),
    ("-",[ScalarType "inet",ScalarType "inet"],ScalarType "bigint"),
    ("-",[ScalarType "timestamp without time zone",ScalarType "interval"],ScalarType "timestamp without time zone"),
    ("/",[ScalarType "integer",ScalarType "smallint"],ScalarType "integer"),
    ("/",[ScalarType "smallint",ScalarType "integer"],ScalarType "integer"),
    ("/",[ScalarType "circle",ScalarType "point"],ScalarType "circle"),
    ("/",[ScalarType "money",ScalarType "double precision"],ScalarType "money"),
    ("/",[ScalarType "double precision",ScalarType "real"],ScalarType "double precision"),
    ("/",[ScalarType "numeric",ScalarType "numeric"],ScalarType "numeric"),
    ("/",[ScalarType "box",ScalarType "point"],ScalarType "box"),
    ("/",[ScalarType "smallint",ScalarType "bigint"],ScalarType "bigint"),
    ("/",[ScalarType "integer",ScalarType "bigint"],ScalarType "bigint"),
    ("/",[ScalarType "interval",ScalarType "double precision"],ScalarType "interval"),
    ("/",[ScalarType "path",ScalarType "point"],ScalarType "path"),
    ("/",[ScalarType "real",ScalarType "real"],ScalarType "real"),
    ("/",[ScalarType "money",ScalarType "real"],ScalarType "money"),
    ("/",[ScalarType "bigint",ScalarType "integer"],ScalarType "bigint"),
    ("/",[ScalarType "bigint",ScalarType "smallint"],ScalarType "bigint"),
    ("/",[ScalarType "double precision",ScalarType "double precision"],ScalarType "double precision"),
    ("/",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("/",[ScalarType "money",ScalarType "smallint"],ScalarType "money"),
    ("/",[ScalarType "smallint",ScalarType "smallint"],ScalarType "smallint"),
    ("/",[ScalarType "bigint",ScalarType "bigint"],ScalarType "bigint"),
    ("/",[ScalarType "point",ScalarType "point"],ScalarType "point"),
    ("/",[ScalarType "real",ScalarType "double precision"],ScalarType "double precision"),
    ("/",[ScalarType "money",ScalarType "integer"],ScalarType "money"),
    ("<",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "boolean"),
    ("<",[ScalarType "tsvector",ScalarType "tsvector"],ScalarType "boolean"),
    ("<",[ScalarType "inet",ScalarType "inet"],ScalarType "boolean"),
    ("<",[ScalarType "lseg",ScalarType "lseg"],ScalarType "boolean"),
    ("<",[ScalarType "macaddr",ScalarType "macaddr"],ScalarType "boolean"),
    ("<",[ScalarType "bigint",ScalarType "integer"],ScalarType "boolean"),
    ("<",[ScalarType "anyenum",ScalarType "anyenum"],ScalarType "boolean"),
    ("<",[ScalarType "uuid",ScalarType "uuid"],ScalarType "boolean"),
    ("<",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("<",[ScalarType "smallint",ScalarType "smallint"],ScalarType "boolean"),
    ("<",[ScalarType "record",ScalarType "record"],ScalarType "boolean"),
    ("<",[ScalarType "smallint",ScalarType "integer"],ScalarType "boolean"),
    ("<",[ScalarType "integer",ScalarType "smallint"],ScalarType "boolean"),
    ("<",[ScalarType "timestamp with time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("<",[ScalarType "integer",ScalarType "integer"],ScalarType "boolean"),
    ("<",[ScalarType "abstime",ScalarType "abstime"],ScalarType "boolean"),
    ("<",[ScalarType "boolean",ScalarType "boolean"],ScalarType "boolean"),
    ("<",[ScalarType "reltime",ScalarType "reltime"],ScalarType "boolean"),
    ("<",[ScalarType "timestamp without time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("<",[ScalarType "oid",ScalarType "oid"],ScalarType "boolean"),
    ("<",[ScalarType "timestamp with time zone",ScalarType "date"],ScalarType "boolean"),
    ("<",[ScalarType "oidvector",ScalarType "oidvector"],ScalarType "boolean"),
    ("<",[ScalarType "timestamp without time zone",ScalarType "date"],ScalarType "boolean"),
    ("<",[ScalarType "real",ScalarType "real"],ScalarType "boolean"),
    ("<",[ScalarType "\"char\"",ScalarType "\"char\""],ScalarType "boolean"),
    ("<",[ScalarType "date",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("<",[ScalarType "date",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("<",[ScalarType "name",ScalarType "name"],ScalarType "boolean"),
    ("<",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("<",[ScalarType "timestamp without time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("<",[ScalarType "double precision",ScalarType "double precision"],ScalarType "boolean"),
    ("<",[ScalarType "bytea",ScalarType "bytea"],ScalarType "boolean"),
    ("<",[ScalarType "path",ScalarType "path"],ScalarType "boolean"),
    ("<",[ScalarType "tinterval",ScalarType "tinterval"],ScalarType "boolean"),
    ("<",[ScalarType "money",ScalarType "money"],ScalarType "boolean"),
    ("<",[ScalarType "bigint",ScalarType "smallint"],ScalarType "boolean"),
    ("<",[ScalarType "smallint",ScalarType "bigint"],ScalarType "boolean"),
    ("<",[ScalarType "character",ScalarType "character"],ScalarType "boolean"),
    ("<",[ScalarType "tid",ScalarType "tid"],ScalarType "boolean"),
    ("<",[ScalarType "bit varying",ScalarType "bit varying"],ScalarType "boolean"),
    ("<",[ScalarType "tsquery",ScalarType "tsquery"],ScalarType "boolean"),
    ("<",[ScalarType "date",ScalarType "date"],ScalarType "boolean"),
    ("<",[ScalarType "time without time zone",ScalarType "time without time zone"],ScalarType "boolean"),
    ("<",[ScalarType "time with time zone",ScalarType "time with time zone"],ScalarType "boolean"),
    ("<",[ScalarType "integer",ScalarType "bigint"],ScalarType "boolean"),
    ("<",[ScalarType "real",ScalarType "double precision"],ScalarType "boolean"),
    ("<",[ScalarType "double precision",ScalarType "real"],ScalarType "boolean"),
    ("<",[ScalarType "bit",ScalarType "bit"],ScalarType "boolean"),
    ("<",[ScalarType "bigint",ScalarType "bigint"],ScalarType "boolean"),
    ("<",[ScalarType "timestamp with time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("<",[ScalarType "numeric",ScalarType "numeric"],ScalarType "boolean"),
    ("<",[ScalarType "interval",ScalarType "interval"],ScalarType "boolean"),
    ("<",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("<#>",[ScalarType "abstime",ScalarType "abstime"],ScalarType "tinterval"),
    ("<->",[ScalarType "point",ScalarType "box"],ScalarType "double precision"),
    ("<->",[ScalarType "lseg",ScalarType "line"],ScalarType "double precision"),
    ("<->",[ScalarType "line",ScalarType "line"],ScalarType "double precision"),
    ("<->",[ScalarType "polygon",ScalarType "polygon"],ScalarType "double precision"),
    ("<->",[ScalarType "path",ScalarType "path"],ScalarType "double precision"),
    ("<->",[ScalarType "box",ScalarType "box"],ScalarType "double precision"),
    ("<->",[ScalarType "circle",ScalarType "circle"],ScalarType "double precision"),
    ("<->",[ScalarType "point",ScalarType "circle"],ScalarType "double precision"),
    ("<->",[ScalarType "circle",ScalarType "polygon"],ScalarType "double precision"),
    ("<->",[ScalarType "line",ScalarType "box"],ScalarType "double precision"),
    ("<->",[ScalarType "point",ScalarType "point"],ScalarType "double precision"),
    ("<->",[ScalarType "point",ScalarType "path"],ScalarType "double precision"),
    ("<->",[ScalarType "lseg",ScalarType "lseg"],ScalarType "double precision"),
    ("<->",[ScalarType "point",ScalarType "line"],ScalarType "double precision"),
    ("<->",[ScalarType "lseg",ScalarType "box"],ScalarType "double precision"),
    ("<->",[ScalarType "point",ScalarType "lseg"],ScalarType "double precision"),
    ("<<",[ScalarType "tinterval",ScalarType "tinterval"],ScalarType "boolean"),
    ("<<",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("<<",[ScalarType "smallint",ScalarType "integer"],ScalarType "smallint"),
    ("<<",[ScalarType "bigint",ScalarType "integer"],ScalarType "bigint"),
    ("<<",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("<<",[ScalarType "bit",ScalarType "integer"],ScalarType "bit"),
    ("<<",[ScalarType "inet",ScalarType "inet"],ScalarType "boolean"),
    ("<<",[ScalarType "point",ScalarType "point"],ScalarType "boolean"),
    ("<<",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("<<",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("<<=",[ScalarType "inet",ScalarType "inet"],ScalarType "boolean"),
    ("<<|",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("<<|",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("<<|",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("<=",[ScalarType "anyenum",ScalarType "anyenum"],ScalarType "boolean"),
    ("<=",[ScalarType "oidvector",ScalarType "oidvector"],ScalarType "boolean"),
    ("<=",[ScalarType "timestamp without time zone",ScalarType "date"],ScalarType "boolean"),
    ("<=",[ScalarType "oid",ScalarType "oid"],ScalarType "boolean"),
    ("<=",[ScalarType "bytea",ScalarType "bytea"],ScalarType "boolean"),
    ("<=",[ScalarType "timestamp with time zone",ScalarType "date"],ScalarType "boolean"),
    ("<=",[ScalarType "reltime",ScalarType "reltime"],ScalarType "boolean"),
    ("<=",[ScalarType "smallint",ScalarType "bigint"],ScalarType "boolean"),
    ("<=",[ScalarType "bigint",ScalarType "bigint"],ScalarType "boolean"),
    ("<=",[ScalarType "character",ScalarType "character"],ScalarType "boolean"),
    ("<=",[ScalarType "timestamp without time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("<=",[ScalarType "abstime",ScalarType "abstime"],ScalarType "boolean"),
    ("<=",[ScalarType "bit varying",ScalarType "bit varying"],ScalarType "boolean"),
    ("<=",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "boolean"),
    ("<=",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("<=",[ScalarType "date",ScalarType "date"],ScalarType "boolean"),
    ("<=",[ScalarType "timestamp with time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("<=",[ScalarType "integer",ScalarType "smallint"],ScalarType "boolean"),
    ("<=",[ScalarType "smallint",ScalarType "integer"],ScalarType "boolean"),
    ("<=",[ScalarType "tid",ScalarType "tid"],ScalarType "boolean"),
    ("<=",[ScalarType "time without time zone",ScalarType "time without time zone"],ScalarType "boolean"),
    ("<=",[ScalarType "time with time zone",ScalarType "time with time zone"],ScalarType "boolean"),
    ("<=",[ScalarType "macaddr",ScalarType "macaddr"],ScalarType "boolean"),
    ("<=",[ScalarType "integer",ScalarType "integer"],ScalarType "boolean"),
    ("<=",[ScalarType "smallint",ScalarType "smallint"],ScalarType "boolean"),
    ("<=",[ScalarType "inet",ScalarType "inet"],ScalarType "boolean"),
    ("<=",[ScalarType "tsquery",ScalarType "tsquery"],ScalarType "boolean"),
    ("<=",[ScalarType "real",ScalarType "double precision"],ScalarType "boolean"),
    ("<=",[ScalarType "bit",ScalarType "bit"],ScalarType "boolean"),
    ("<=",[ScalarType "double precision",ScalarType "real"],ScalarType "boolean"),
    ("<=",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("<=",[ScalarType "integer",ScalarType "bigint"],ScalarType "boolean"),
    ("<=",[ScalarType "uuid",ScalarType "uuid"],ScalarType "boolean"),
    ("<=",[ScalarType "lseg",ScalarType "lseg"],ScalarType "boolean"),
    ("<=",[ScalarType "timestamp with time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("<=",[ScalarType "numeric",ScalarType "numeric"],ScalarType "boolean"),
    ("<=",[ScalarType "real",ScalarType "real"],ScalarType "boolean"),
    ("<=",[ScalarType "bigint",ScalarType "integer"],ScalarType "boolean"),
    ("<=",[ScalarType "money",ScalarType "money"],ScalarType "boolean"),
    ("<=",[ScalarType "tsvector",ScalarType "tsvector"],ScalarType "boolean"),
    ("<=",[ScalarType "date",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("<=",[ScalarType "interval",ScalarType "interval"],ScalarType "boolean"),
    ("<=",[ScalarType "record",ScalarType "record"],ScalarType "boolean"),
    ("<=",[ScalarType "\"char\"",ScalarType "\"char\""],ScalarType "boolean"),
    ("<=",[ScalarType "path",ScalarType "path"],ScalarType "boolean"),
    ("<=",[ScalarType "double precision",ScalarType "double precision"],ScalarType "boolean"),
    ("<=",[ScalarType "timestamp without time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("<=",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("<=",[ScalarType "name",ScalarType "name"],ScalarType "boolean"),
    ("<=",[ScalarType "date",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("<=",[ScalarType "tinterval",ScalarType "tinterval"],ScalarType "boolean"),
    ("<=",[ScalarType "boolean",ScalarType "boolean"],ScalarType "boolean"),
    ("<=",[ScalarType "bigint",ScalarType "smallint"],ScalarType "boolean"),
    ("<>",[ScalarType "double precision",ScalarType "double precision"],ScalarType "boolean"),
    ("<>",[ScalarType "integer",ScalarType "integer"],ScalarType "boolean"),
    ("<>",[ScalarType "interval",ScalarType "interval"],ScalarType "boolean"),
    ("<>",[ScalarType "real",ScalarType "double precision"],ScalarType "boolean"),
    ("<>",[ScalarType "timestamp with time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("<>",[ScalarType "date",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("<>",[ScalarType "date",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("<>",[ScalarType "integer",ScalarType "smallint"],ScalarType "boolean"),
    ("<>",[ScalarType "name",ScalarType "name"],ScalarType "boolean"),
    ("<>",[ScalarType "time without time zone",ScalarType "time without time zone"],ScalarType "boolean"),
    ("<>",[ScalarType "inet",ScalarType "inet"],ScalarType "boolean"),
    ("<>",[ScalarType "point",ScalarType "point"],ScalarType "boolean"),
    ("<>",[ScalarType "smallint",ScalarType "integer"],ScalarType "boolean"),
    ("<>",[ScalarType "timestamp with time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("<>",[ScalarType "tsvector",ScalarType "tsvector"],ScalarType "boolean"),
    ("<>",[ScalarType "time with time zone",ScalarType "time with time zone"],ScalarType "boolean"),
    ("<>",[ScalarType "timestamp without time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("<>",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("<>",[ScalarType "bigint",ScalarType "integer"],ScalarType "boolean"),
    ("<>",[ScalarType "smallint",ScalarType "smallint"],ScalarType "boolean"),
    ("<>",[ScalarType "record",ScalarType "record"],ScalarType "boolean"),
    ("<>",[ScalarType "money",ScalarType "money"],ScalarType "boolean"),
    ("<>",[ScalarType "oidvector",ScalarType "oidvector"],ScalarType "boolean"),
    ("<>",[ScalarType "bytea",ScalarType "bytea"],ScalarType "boolean"),
    ("<>",[ScalarType "bigint",ScalarType "bigint"],ScalarType "boolean"),
    ("<>",[ScalarType "double precision",ScalarType "real"],ScalarType "boolean"),
    ("<>",[ScalarType "tsquery",ScalarType "tsquery"],ScalarType "boolean"),
    ("<>",[ScalarType "numeric",ScalarType "numeric"],ScalarType "boolean"),
    ("<>",[ScalarType "lseg",ScalarType "lseg"],ScalarType "boolean"),
    ("<>",[ScalarType "bit",ScalarType "bit"],ScalarType "boolean"),
    ("<>",[ScalarType "oid",ScalarType "oid"],ScalarType "boolean"),
    ("<>",[ScalarType "integer",ScalarType "bigint"],ScalarType "boolean"),
    ("<>",[ScalarType "macaddr",ScalarType "macaddr"],ScalarType "boolean"),
    ("<>",[ScalarType "bigint",ScalarType "smallint"],ScalarType "boolean"),
    ("<>",[ScalarType "timestamp with time zone",ScalarType "date"],ScalarType "boolean"),
    ("<>",[ScalarType "\"char\"",ScalarType "\"char\""],ScalarType "boolean"),
    ("<>",[ScalarType "tid",ScalarType "tid"],ScalarType "boolean"),
    ("<>",[ScalarType "reltime",ScalarType "reltime"],ScalarType "boolean"),
    ("<>",[ScalarType "character",ScalarType "character"],ScalarType "boolean"),
    ("<>",[ScalarType "uuid",ScalarType "uuid"],ScalarType "boolean"),
    ("<>",[ScalarType "smallint",ScalarType "bigint"],ScalarType "boolean"),
    ("<>",[ScalarType "boolean",ScalarType "boolean"],ScalarType "boolean"),
    ("<>",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("<>",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "boolean"),
    ("<>",[ScalarType "anyenum",ScalarType "anyenum"],ScalarType "boolean"),
    ("<>",[ScalarType "timestamp without time zone",ScalarType "date"],ScalarType "boolean"),
    ("<>",[ScalarType "timestamp without time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("<>",[ScalarType "abstime",ScalarType "abstime"],ScalarType "boolean"),
    ("<>",[ScalarType "date",ScalarType "date"],ScalarType "boolean"),
    ("<>",[ScalarType "tinterval",ScalarType "tinterval"],ScalarType "boolean"),
    ("<>",[ScalarType "real",ScalarType "real"],ScalarType "boolean"),
    ("<>",[ScalarType "bit varying",ScalarType "bit varying"],ScalarType "boolean"),
    ("<?>",[ScalarType "abstime",ScalarType "tinterval"],ScalarType "boolean"),
    ("<@",[ScalarType "point",ScalarType "line"],ScalarType "boolean"),
    ("<@",[ScalarType "point",ScalarType "path"],ScalarType "boolean"),
    ("<@",[ScalarType "point",ScalarType "box"],ScalarType "boolean"),
    ("<@",[ScalarType "lseg",ScalarType "line"],ScalarType "boolean"),
    ("<@",[ScalarType "point",ScalarType "lseg"],ScalarType "boolean"),
    ("<@",[ScalarType "lseg",ScalarType "box"],ScalarType "boolean"),
    ("<@",[ScalarType "point",ScalarType "circle"],ScalarType "boolean"),
    ("<@",[ScalarType "point",ScalarType "polygon"],ScalarType "boolean"),
    ("<@",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("<@",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("<@",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "boolean"),
    ("<@",[ScalarType "tsquery",ScalarType "tsquery"],ScalarType "boolean"),
    ("<@",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("<^",[ScalarType "point",ScalarType "point"],ScalarType "boolean"),
    ("<^",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("=",[ScalarType "integer",ScalarType "bigint"],ScalarType "boolean"),
    ("=",[ScalarType "boolean",ScalarType "boolean"],ScalarType "boolean"),
    ("=",[ScalarType "\"char\"",ScalarType "\"char\""],ScalarType "boolean"),
    ("=",[ScalarType "name",ScalarType "name"],ScalarType "boolean"),
    ("=",[ScalarType "smallint",ScalarType "smallint"],ScalarType "boolean"),
    ("=",[ScalarType "integer",ScalarType "integer"],ScalarType "boolean"),
    ("=",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("=",[ScalarType "xid",ScalarType "xid"],ScalarType "boolean"),
    ("=",[ScalarType "xid",ScalarType "integer"],ScalarType "boolean"),
    ("=",[ScalarType "cid",ScalarType "cid"],ScalarType "boolean"),
    ("=",[ScalarType "int2vector",ScalarType "int2vector"],ScalarType "boolean"),
    ("=",[ScalarType "tid",ScalarType "tid"],ScalarType "boolean"),
    ("=",[ScalarType "bigint",ScalarType "bigint"],ScalarType "boolean"),
    ("=",[ScalarType "bigint",ScalarType "integer"],ScalarType "boolean"),
    ("=",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("=",[ScalarType "smallint",ScalarType "integer"],ScalarType "boolean"),
    ("=",[ScalarType "integer",ScalarType "smallint"],ScalarType "boolean"),
    ("=",[ScalarType "abstime",ScalarType "abstime"],ScalarType "boolean"),
    ("=",[ScalarType "reltime",ScalarType "reltime"],ScalarType "boolean"),
    ("=",[ScalarType "oid",ScalarType "oid"],ScalarType "boolean"),
    ("=",[ScalarType "oidvector",ScalarType "oidvector"],ScalarType "boolean"),
    ("=",[ScalarType "real",ScalarType "real"],ScalarType "boolean"),
    ("=",[ScalarType "double precision",ScalarType "double precision"],ScalarType "boolean"),
    ("=",[ScalarType "path",ScalarType "path"],ScalarType "boolean"),
    ("=",[ScalarType "tinterval",ScalarType "tinterval"],ScalarType "boolean"),
    ("=",[ScalarType "money",ScalarType "money"],ScalarType "boolean"),
    ("=",[ScalarType "aclitem",ScalarType "aclitem"],ScalarType "boolean"),
    ("=",[ScalarType "character",ScalarType "character"],ScalarType "boolean"),
    ("=",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "boolean"),
    ("=",[ScalarType "date",ScalarType "date"],ScalarType "boolean"),
    ("=",[ScalarType "time without time zone",ScalarType "time without time zone"],ScalarType "boolean"),
    ("=",[ScalarType "time with time zone",ScalarType "time with time zone"],ScalarType "boolean"),
    ("=",[ScalarType "real",ScalarType "double precision"],ScalarType "boolean"),
    ("=",[ScalarType "double precision",ScalarType "real"],ScalarType "boolean"),
    ("=",[ScalarType "timestamp with time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("=",[ScalarType "interval",ScalarType "interval"],ScalarType "boolean"),
    ("=",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("=",[ScalarType "lseg",ScalarType "lseg"],ScalarType "boolean"),
    ("=",[ScalarType "line",ScalarType "line"],ScalarType "boolean"),
    ("=",[ScalarType "macaddr",ScalarType "macaddr"],ScalarType "boolean"),
    ("=",[ScalarType "inet",ScalarType "inet"],ScalarType "boolean"),
    ("=",[ScalarType "numeric",ScalarType "numeric"],ScalarType "boolean"),
    ("=",[ScalarType "bit",ScalarType "bit"],ScalarType "boolean"),
    ("=",[ScalarType "bit varying",ScalarType "bit varying"],ScalarType "boolean"),
    ("=",[ScalarType "smallint",ScalarType "bigint"],ScalarType "boolean"),
    ("=",[ScalarType "bigint",ScalarType "smallint"],ScalarType "boolean"),
    ("=",[ScalarType "bytea",ScalarType "bytea"],ScalarType "boolean"),
    ("=",[ScalarType "timestamp without time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("=",[ScalarType "date",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("=",[ScalarType "date",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("=",[ScalarType "timestamp without time zone",ScalarType "date"],ScalarType "boolean"),
    ("=",[ScalarType "timestamp with time zone",ScalarType "date"],ScalarType "boolean"),
    ("=",[ScalarType "timestamp without time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("=",[ScalarType "timestamp with time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("=",[ScalarType "uuid",ScalarType "uuid"],ScalarType "boolean"),
    ("=",[ScalarType "anyenum",ScalarType "anyenum"],ScalarType "boolean"),
    ("=",[ScalarType "tsvector",ScalarType "tsvector"],ScalarType "boolean"),
    ("=",[ScalarType "tsquery",ScalarType "tsquery"],ScalarType "boolean"),
    ("=",[ScalarType "record",ScalarType "record"],ScalarType "boolean"),
    (">",[ScalarType "inet",ScalarType "inet"],ScalarType "boolean"),
    (">",[ScalarType "bigint",ScalarType "smallint"],ScalarType "boolean"),
    (">",[ScalarType "money",ScalarType "money"],ScalarType "boolean"),
    (">",[ScalarType "reltime",ScalarType "reltime"],ScalarType "boolean"),
    (">",[ScalarType "timestamp with time zone",ScalarType "date"],ScalarType "boolean"),
    (">",[ScalarType "tsvector",ScalarType "tsvector"],ScalarType "boolean"),
    (">",[ScalarType "tinterval",ScalarType "tinterval"],ScalarType "boolean"),
    (">",[ScalarType "date",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    (">",[ScalarType "boolean",ScalarType "boolean"],ScalarType "boolean"),
    (">",[ScalarType "uuid",ScalarType "uuid"],ScalarType "boolean"),
    (">",[ScalarType "oid",ScalarType "oid"],ScalarType "boolean"),
    (">",[ScalarType "anyenum",ScalarType "anyenum"],ScalarType "boolean"),
    (">",[ScalarType "bigint",ScalarType "integer"],ScalarType "boolean"),
    (">",[ScalarType "name",ScalarType "name"],ScalarType "boolean"),
    (">",[ScalarType "timestamp without time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    (">",[ScalarType "smallint",ScalarType "smallint"],ScalarType "boolean"),
    (">",[ScalarType "macaddr",ScalarType "macaddr"],ScalarType "boolean"),
    (">",[ScalarType "path",ScalarType "path"],ScalarType "boolean"),
    (">",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    (">",[ScalarType "tsquery",ScalarType "tsquery"],ScalarType "boolean"),
    (">",[ScalarType "double precision",ScalarType "double precision"],ScalarType "boolean"),
    (">",[ScalarType "bigint",ScalarType "bigint"],ScalarType "boolean"),
    (">",[ScalarType "integer",ScalarType "smallint"],ScalarType "boolean"),
    (">",[ScalarType "bytea",ScalarType "bytea"],ScalarType "boolean"),
    (">",[ScalarType "bit",ScalarType "bit"],ScalarType "boolean"),
    (">",[ScalarType "record",ScalarType "record"],ScalarType "boolean"),
    (">",[ScalarType "double precision",ScalarType "real"],ScalarType "boolean"),
    (">",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    (">",[ScalarType "timestamp with time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    (">",[ScalarType "lseg",ScalarType "lseg"],ScalarType "boolean"),
    (">",[ScalarType "real",ScalarType "double precision"],ScalarType "boolean"),
    (">",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    (">",[ScalarType "timestamp without time zone",ScalarType "date"],ScalarType "boolean"),
    (">",[ScalarType "tid",ScalarType "tid"],ScalarType "boolean"),
    (">",[ScalarType "time with time zone",ScalarType "time with time zone"],ScalarType "boolean"),
    (">",[ScalarType "interval",ScalarType "interval"],ScalarType "boolean"),
    (">",[ScalarType "time without time zone",ScalarType "time without time zone"],ScalarType "boolean"),
    (">",[ScalarType "integer",ScalarType "integer"],ScalarType "boolean"),
    (">",[ScalarType "integer",ScalarType "bigint"],ScalarType "boolean"),
    (">",[ScalarType "date",ScalarType "date"],ScalarType "boolean"),
    (">",[ScalarType "timestamp with time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    (">",[ScalarType "bit varying",ScalarType "bit varying"],ScalarType "boolean"),
    (">",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "boolean"),
    (">",[ScalarType "numeric",ScalarType "numeric"],ScalarType "boolean"),
    (">",[ScalarType "smallint",ScalarType "integer"],ScalarType "boolean"),
    (">",[ScalarType "oidvector",ScalarType "oidvector"],ScalarType "boolean"),
    (">",[ScalarType "character",ScalarType "character"],ScalarType "boolean"),
    (">",[ScalarType "real",ScalarType "real"],ScalarType "boolean"),
    (">",[ScalarType "smallint",ScalarType "bigint"],ScalarType "boolean"),
    (">",[ScalarType "date",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    (">",[ScalarType "abstime",ScalarType "abstime"],ScalarType "boolean"),
    (">",[ScalarType "timestamp without time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    (">",[ScalarType "\"char\"",ScalarType "\"char\""],ScalarType "boolean"),
    (">=",[ScalarType "inet",ScalarType "inet"],ScalarType "boolean"),
    (">=",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    (">=",[ScalarType "interval",ScalarType "interval"],ScalarType "boolean"),
    (">=",[ScalarType "timestamp with time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    (">=",[ScalarType "numeric",ScalarType "numeric"],ScalarType "boolean"),
    (">=",[ScalarType "macaddr",ScalarType "macaddr"],ScalarType "boolean"),
    (">=",[ScalarType "double precision",ScalarType "real"],ScalarType "boolean"),
    (">=",[ScalarType "bit",ScalarType "bit"],ScalarType "boolean"),
    (">=",[ScalarType "real",ScalarType "double precision"],ScalarType "boolean"),
    (">=",[ScalarType "time with time zone",ScalarType "time with time zone"],ScalarType "boolean"),
    (">=",[ScalarType "lseg",ScalarType "lseg"],ScalarType "boolean"),
    (">=",[ScalarType "time without time zone",ScalarType "time without time zone"],ScalarType "boolean"),
    (">=",[ScalarType "date",ScalarType "date"],ScalarType "boolean"),
    (">=",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "boolean"),
    (">=",[ScalarType "bit varying",ScalarType "bit varying"],ScalarType "boolean"),
    (">=",[ScalarType "character",ScalarType "character"],ScalarType "boolean"),
    (">=",[ScalarType "smallint",ScalarType "bigint"],ScalarType "boolean"),
    (">=",[ScalarType "tsquery",ScalarType "tsquery"],ScalarType "boolean"),
    (">=",[ScalarType "money",ScalarType "money"],ScalarType "boolean"),
    (">=",[ScalarType "bigint",ScalarType "smallint"],ScalarType "boolean"),
    (">=",[ScalarType "tinterval",ScalarType "tinterval"],ScalarType "boolean"),
    (">=",[ScalarType "tsvector",ScalarType "tsvector"],ScalarType "boolean"),
    (">=",[ScalarType "tid",ScalarType "tid"],ScalarType "boolean"),
    (">=",[ScalarType "path",ScalarType "path"],ScalarType "boolean"),
    (">=",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    (">=",[ScalarType "bytea",ScalarType "bytea"],ScalarType "boolean"),
    (">=",[ScalarType "double precision",ScalarType "double precision"],ScalarType "boolean"),
    (">=",[ScalarType "bigint",ScalarType "bigint"],ScalarType "boolean"),
    (">=",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    (">=",[ScalarType "timestamp without time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    (">=",[ScalarType "name",ScalarType "name"],ScalarType "boolean"),
    (">=",[ScalarType "anyenum",ScalarType "anyenum"],ScalarType "boolean"),
    (">=",[ScalarType "bigint",ScalarType "integer"],ScalarType "boolean"),
    (">=",[ScalarType "integer",ScalarType "bigint"],ScalarType "boolean"),
    (">=",[ScalarType "uuid",ScalarType "uuid"],ScalarType "boolean"),
    (">=",[ScalarType "date",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    (">=",[ScalarType "\"char\"",ScalarType "\"char\""],ScalarType "boolean"),
    (">=",[ScalarType "real",ScalarType "real"],ScalarType "boolean"),
    (">=",[ScalarType "date",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    (">=",[ScalarType "oidvector",ScalarType "oidvector"],ScalarType "boolean"),
    (">=",[ScalarType "boolean",ScalarType "boolean"],ScalarType "boolean"),
    (">=",[ScalarType "timestamp without time zone",ScalarType "date"],ScalarType "boolean"),
    (">=",[ScalarType "oid",ScalarType "oid"],ScalarType "boolean"),
    (">=",[ScalarType "timestamp with time zone",ScalarType "date"],ScalarType "boolean"),
    (">=",[ScalarType "reltime",ScalarType "reltime"],ScalarType "boolean"),
    (">=",[ScalarType "abstime",ScalarType "abstime"],ScalarType "boolean"),
    (">=",[ScalarType "timestamp without time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    (">=",[ScalarType "integer",ScalarType "smallint"],ScalarType "boolean"),
    (">=",[ScalarType "smallint",ScalarType "integer"],ScalarType "boolean"),
    (">=",[ScalarType "record",ScalarType "record"],ScalarType "boolean"),
    (">=",[ScalarType "timestamp with time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    (">=",[ScalarType "integer",ScalarType "integer"],ScalarType "boolean"),
    (">=",[ScalarType "smallint",ScalarType "smallint"],ScalarType "boolean"),
    (">>",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    (">>",[ScalarType "bigint",ScalarType "integer"],ScalarType "bigint"),
    (">>",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    (">>",[ScalarType "smallint",ScalarType "integer"],ScalarType "smallint"),
    (">>",[ScalarType "point",ScalarType "point"],ScalarType "boolean"),
    (">>",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    (">>",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    (">>",[ScalarType "bit",ScalarType "integer"],ScalarType "bit"),
    (">>",[ScalarType "inet",ScalarType "inet"],ScalarType "boolean"),
    (">>=",[ScalarType "inet",ScalarType "inet"],ScalarType "boolean"),
    (">^",[ScalarType "point",ScalarType "point"],ScalarType "boolean"),
    (">^",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("?#",[ScalarType "lseg",ScalarType "line"],ScalarType "boolean"),
    ("?#",[ScalarType "line",ScalarType "box"],ScalarType "boolean"),
    ("?#",[ScalarType "path",ScalarType "path"],ScalarType "boolean"),
    ("?#",[ScalarType "line",ScalarType "line"],ScalarType "boolean"),
    ("?#",[ScalarType "lseg",ScalarType "box"],ScalarType "boolean"),
    ("?#",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("?#",[ScalarType "lseg",ScalarType "lseg"],ScalarType "boolean"),
    ("?-",[ScalarType "point",ScalarType "point"],ScalarType "boolean"),
    ("?-|",[ScalarType "lseg",ScalarType "lseg"],ScalarType "boolean"),
    ("?-|",[ScalarType "line",ScalarType "line"],ScalarType "boolean"),
    ("?|",[ScalarType "point",ScalarType "point"],ScalarType "boolean"),
    ("?||",[ScalarType "line",ScalarType "line"],ScalarType "boolean"),
    ("?||",[ScalarType "lseg",ScalarType "lseg"],ScalarType "boolean"),
    -- ("@",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    -- ("@",[ScalarType "point",ScalarType "box"],ScalarType "boolean"),
    -- ("@",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    -- ("@",[ScalarType "point",ScalarType "path"],ScalarType "boolean"),
    -- ("@",[ScalarType "point",ScalarType "line"],ScalarType "boolean"),
    -- ("@",[ScalarType "point",ScalarType "circle"],ScalarType "boolean"),
    -- ("@",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    -- ("@",[ScalarType "lseg",ScalarType "box"],ScalarType "boolean"),
    -- ("@",[ScalarType "lseg",ScalarType "line"],ScalarType "boolean"),
    -- ("@",[ScalarType "point",ScalarType "polygon"],ScalarType "boolean"),
    -- ("@",[ScalarType "point",ScalarType "lseg"],ScalarType "boolean"),
    ("@>",[ScalarType "tsquery",ScalarType "tsquery"],ScalarType "boolean"),
    ("@>",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("@>",[ScalarType "aclitem[]",ScalarType "aclitem"],ScalarType "boolean"),
    ("@>",[ScalarType "circle",ScalarType "point"],ScalarType "boolean"),
    ("@>",[ScalarType "polygon",ScalarType "point"],ScalarType "boolean"),
    ("@>",[ScalarType "path",ScalarType "point"],ScalarType "boolean"),
    ("@>",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "boolean"),
    ("@>",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("@>",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("@@",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("@@",[ScalarType "tsquery",ScalarType "tsvector"],ScalarType "boolean"),
    ("@@",[ScalarType "text",ScalarType "tsquery"],ScalarType "boolean"),
    ("@@",[ScalarType "tsvector",ScalarType "tsquery"],ScalarType "boolean"),
    ("@@@",[ScalarType "tsvector",ScalarType "tsquery"],ScalarType "boolean"),
    ("@@@",[ScalarType "tsquery",ScalarType "tsvector"],ScalarType "boolean"),
    ("^",[ScalarType "double precision",ScalarType "double precision"],ScalarType "double precision"),
    ("^",[ScalarType "numeric",ScalarType "numeric"],ScalarType "numeric"),
    ("|",[ScalarType "bigint",ScalarType "bigint"],ScalarType "bigint"),
    ("|",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("|",[ScalarType "bit",ScalarType "bit"],ScalarType "bit"),
    ("|",[ScalarType "inet",ScalarType "inet"],ScalarType "inet"),
    ("|",[ScalarType "smallint",ScalarType "smallint"],ScalarType "smallint"),
    ("|&>",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("|&>",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("|&>",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("|>>",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("|>>",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("|>>",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("||",[ScalarType "tsvector",ScalarType "tsvector"],ScalarType "tsvector"),
    ("||",[ScalarType "text",ScalarType "anynonarray"],ScalarType "text"),
    ("||",[ScalarType "anynonarray",ScalarType "text"],ScalarType "text"),
    ("||",[ScalarType "tsquery",ScalarType "tsquery"],ScalarType "tsquery"),
    ("||",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "anyarray"),
    ("||",[ScalarType "bit varying",ScalarType "bit varying"],ScalarType "bit varying"),
    ("||",[ScalarType "anyelement",ScalarType "anyarray"],ScalarType "anyarray"),
    ("||",[ScalarType "text",ScalarType "text"],ScalarType "text"),
    ("||",[ScalarType "anyarray",ScalarType "anyelement"],ScalarType "anyarray"),
    ("||",[ScalarType "bytea",ScalarType "bytea"],ScalarType "bytea"),
    ("~",[ScalarType "character",ScalarType "text"],ScalarType "boolean"),
    ("~",[ScalarType "circle",ScalarType "point"],ScalarType "boolean"),
    ("~",[ScalarType "polygon",ScalarType "point"],ScalarType "boolean"),
    ("~",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("~",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("~",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("~",[ScalarType "aclitem[]",ScalarType "aclitem"],ScalarType "boolean"),
    ("~",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("~",[ScalarType "path",ScalarType "point"],ScalarType "boolean"),
    ("~",[ScalarType "name",ScalarType "text"],ScalarType "boolean"),
    ("~*",[ScalarType "name",ScalarType "text"],ScalarType "boolean"),
    ("~*",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("~*",[ScalarType "character",ScalarType "text"],ScalarType "boolean"),
    ("~<=~",[ScalarType "character",ScalarType "character"],ScalarType "boolean"),
    ("~<=~",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("~<~",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("~<~",[ScalarType "character",ScalarType "character"],ScalarType "boolean"),
    ("~=",[ScalarType "tinterval",ScalarType "tinterval"],ScalarType "boolean"),
    ("~=",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("~=",[ScalarType "point",ScalarType "point"],ScalarType "boolean"),
    ("~=",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("~=",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("~>=~",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("~>=~",[ScalarType "character",ScalarType "character"],ScalarType "boolean"),
    ("~>~",[ScalarType "character",ScalarType "character"],ScalarType "boolean"),
    ("~>~",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("~~",[ScalarType "character",ScalarType "text"],ScalarType "boolean"),
    ("~~",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("~~",[ScalarType "name",ScalarType "text"],ScalarType "boolean"),
    ("~~",[ScalarType "bytea",ScalarType "bytea"],ScalarType "boolean"),
    ("~~*",[ScalarType "name",ScalarType "text"],ScalarType "boolean"),
    ("~~*",[ScalarType "character",ScalarType "text"],ScalarType "boolean"),
    ("~~*",[ScalarType "text",ScalarType "text"],ScalarType "boolean")
    ]
prefixOperatorTypes = [
    ("!!",[ScalarType "tsquery"],ScalarType "tsquery"),
    ("!!",[ScalarType "bigint"],ScalarType "numeric"),
    ("#",[ScalarType "polygon"],ScalarType "integer"),
    ("#",[ScalarType "path"],ScalarType "integer"),
    ("+",[ScalarType "double precision"],ScalarType "double precision"),
    ("+",[ScalarType "integer"],ScalarType "integer"),
    ("+",[ScalarType "real"],ScalarType "real"),
    ("+",[ScalarType "smallint"],ScalarType "smallint"),
    ("+",[ScalarType "bigint"],ScalarType "bigint"),
    ("+",[ScalarType "numeric"],ScalarType "numeric"),
    ("-",[ScalarType "smallint"],ScalarType "smallint"),
    ("-",[ScalarType "bigint"],ScalarType "bigint"),
    ("-",[ScalarType "integer"],ScalarType "integer"),
    ("-",[ScalarType "real"],ScalarType "real"),
    ("-",[ScalarType "double precision"],ScalarType "double precision"),
    ("-",[ScalarType "interval"],ScalarType "interval"),
    ("-",[ScalarType "numeric"],ScalarType "numeric"),
    ("?-",[ScalarType "lseg"],ScalarType "boolean"),
    ("?-",[ScalarType "line"],ScalarType "boolean"),
    ("?|",[ScalarType "line"],ScalarType "boolean"),
    ("?|",[ScalarType "lseg"],ScalarType "boolean"),
    ("@",[ScalarType "numeric"],ScalarType "numeric"),
    ("@",[ScalarType "smallint"],ScalarType "smallint"),
    ("@",[ScalarType "real"],ScalarType "real"),
    ("@",[ScalarType "bigint"],ScalarType "bigint"),
    ("@",[ScalarType "integer"],ScalarType "integer"),
    ("@",[ScalarType "double precision"],ScalarType "double precision"),
    ("@-@",[ScalarType "path"],ScalarType "double precision"),
    ("@-@",[ScalarType "lseg"],ScalarType "double precision"),
    ("@@",[ScalarType "box"],ScalarType "point"),
    ("@@",[ScalarType "circle"],ScalarType "point"),
    ("@@",[ScalarType "lseg"],ScalarType "point"),
    ("@@",[ScalarType "path"],ScalarType "point"),
    ("@@",[ScalarType "polygon"],ScalarType "point"),
    ("|",[ScalarType "tinterval"],ScalarType "abstime"),
    ("|/",[ScalarType "double precision"],ScalarType "double precision"),
    ("||/",[ScalarType "double precision"],ScalarType "double precision"),
    ("~",[ScalarType "integer"],ScalarType "integer"),
    ("~",[ScalarType "smallint"],ScalarType "smallint"),
    ("~",[ScalarType "bit"],ScalarType "bit"),
    ("~",[ScalarType "bigint"],ScalarType "bigint"),
    ("~",[ScalarType "inet"],ScalarType "inet")
    ]
postfixOperatorTypes = [
    ("!",[ScalarType "bigint"],ScalarType "numeric")
    ]
functionTypes = [
    ("abbrev",[ScalarType "cidr"],ScalarType "text"),
    ("abbrev",[ScalarType "inet"],ScalarType "text"),
    ("abs",[ScalarType "numeric"],ScalarType "numeric"),
    ("abs",[ScalarType "double precision"],ScalarType "double precision"),
    ("abs",[ScalarType "integer"],ScalarType "integer"),
    ("abs",[ScalarType "smallint"],ScalarType "smallint"),
    ("abs",[ScalarType "real"],ScalarType "real"),
    ("abs",[ScalarType "bigint"],ScalarType "bigint"),
    ("abstime",[ScalarType "timestamp without time zone"],ScalarType "abstime"),
    ("abstime",[ScalarType "timestamp with time zone"],ScalarType "abstime"),
    ("abstimeeq",[ScalarType "abstime",ScalarType "abstime"],ScalarType "boolean"),
    ("abstimege",[ScalarType "abstime",ScalarType "abstime"],ScalarType "boolean"),
    ("abstimegt",[ScalarType "abstime",ScalarType "abstime"],ScalarType "boolean"),
    ("abstimein",[ScalarType "cstring"],ScalarType "abstime"),
    ("abstimele",[ScalarType "abstime",ScalarType "abstime"],ScalarType "boolean"),
    ("abstimelt",[ScalarType "abstime",ScalarType "abstime"],ScalarType "boolean"),
    ("abstimene",[ScalarType "abstime",ScalarType "abstime"],ScalarType "boolean"),
    ("abstimeout",[ScalarType "abstime"],ScalarType "cstring"),
    ("abstimerecv",[ScalarType "internal"],ScalarType "abstime"),
    ("abstimesend",[ScalarType "abstime"],ScalarType "bytea"),
    ("aclcontains",[ScalarType "aclitem[]",ScalarType "aclitem"],ScalarType "boolean"),
    ("aclinsert",[ScalarType "aclitem[]",ScalarType "aclitem"],ScalarType "aclitem[]"),
    ("aclitemeq",[ScalarType "aclitem",ScalarType "aclitem"],ScalarType "boolean"),
    ("aclitemin",[ScalarType "cstring"],ScalarType "aclitem"),
    ("aclitemout",[ScalarType "aclitem"],ScalarType "cstring"),
    ("aclremove",[ScalarType "aclitem[]",ScalarType "aclitem"],ScalarType "aclitem[]"),
    ("acos",[ScalarType "double precision"],ScalarType "double precision"),
    ("age",[ScalarType "timestamp with time zone",ScalarType "timestamp with time zone"],ScalarType "interval"),
    ("age",[ScalarType "timestamp with time zone"],ScalarType "interval"),
    ("age",[ScalarType "timestamp without time zone",ScalarType "timestamp without time zone"],ScalarType "interval"),
    ("age",[ScalarType "timestamp without time zone"],ScalarType "interval"),
    ("age",[ScalarType "xid"],ScalarType "integer"),
    ("any_in",[ScalarType "cstring"],ScalarType "\"any\""),
    ("any_out",[ScalarType "\"any\""],ScalarType "cstring"),
    ("anyarray_in",[ScalarType "cstring"],ScalarType "anyarray"),
    ("anyarray_out",[ScalarType "anyarray"],ScalarType "cstring"),
    ("anyarray_recv",[ScalarType "internal"],ScalarType "anyarray"),
    ("anyarray_send",[ScalarType "anyarray"],ScalarType "bytea"),
    ("anyelement_in",[ScalarType "cstring"],ScalarType "anyelement"),
    ("anyelement_out",[ScalarType "anyelement"],ScalarType "cstring"),
    ("anyenum_in",[ScalarType "cstring"],ScalarType "anyenum"),
    ("anyenum_out",[ScalarType "anyenum"],ScalarType "cstring"),
    ("anynonarray_in",[ScalarType "cstring"],ScalarType "anynonarray"),
    ("anynonarray_out",[ScalarType "anynonarray"],ScalarType "cstring"),
    ("anytextcat",[ScalarType "anynonarray",ScalarType "text"],ScalarType "text"),
    ("area",[ScalarType "path"],ScalarType "double precision"),
    ("area",[ScalarType "box"],ScalarType "double precision"),
    ("area",[ScalarType "circle"],ScalarType "double precision"),
    ("areajoinsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "smallint",ScalarType "internal"],ScalarType "double precision"),
    ("areasel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "integer"],ScalarType "double precision"),
    ("array_agg_finalfn",[ScalarType "internal"],ScalarType "anyarray"),
    ("array_agg_transfn",[ScalarType "internal",ScalarType "anyelement"],ScalarType "internal"),
    ("array_append",[ScalarType "anyarray",ScalarType "anyelement"],ScalarType "anyarray"),
    ("array_cat",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "anyarray"),
    ("array_dims",[ScalarType "anyarray"],ScalarType "text"),
    ("array_eq",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "boolean"),
    ("array_fill",[ScalarType "anyelement",ScalarType "integer[]"],ScalarType "anyarray"),
    ("array_fill",[ScalarType "anyelement",ScalarType "integer[]",ScalarType "integer[]"],ScalarType "anyarray"),
    ("array_ge",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "boolean"),
    ("array_gt",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "boolean"),
    ("array_in",[ScalarType "cstring",ScalarType "oid",ScalarType "integer"],ScalarType "anyarray"),
    ("array_larger",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "anyarray"),
    ("array_le",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "boolean"),
    ("array_length",[ScalarType "anyarray",ScalarType "integer"],ScalarType "integer"),
    ("array_lower",[ScalarType "anyarray",ScalarType "integer"],ScalarType "integer"),
    ("array_lt",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "boolean"),
    ("array_ndims",[ScalarType "anyarray"],ScalarType "integer"),
    ("array_ne",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "boolean"),
    ("array_out",[ScalarType "anyarray"],ScalarType "cstring"),
    ("array_prepend",[ScalarType "anyelement",ScalarType "anyarray"],ScalarType "anyarray"),
    ("array_recv",[ScalarType "internal",ScalarType "oid",ScalarType "integer"],ScalarType "anyarray"),
    ("array_send",[ScalarType "anyarray"],ScalarType "bytea"),
    ("array_smaller",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "anyarray"),
    ("array_to_string",[ScalarType "anyarray",ScalarType "text"],ScalarType "text"),
    ("array_upper",[ScalarType "anyarray",ScalarType "integer"],ScalarType "integer"),
    ("arraycontained",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "boolean"),
    ("arraycontains",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "boolean"),
    ("arrayoverlap",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "boolean"),
    ("ascii",[ScalarType "text"],ScalarType "integer"),
    ("ascii_to_mic",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("ascii_to_utf8",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("asin",[ScalarType "double precision"],ScalarType "double precision"),
    ("atan",[ScalarType "double precision"],ScalarType "double precision"),
    ("atan2",[ScalarType "double precision",ScalarType "double precision"],ScalarType "double precision"),
    ("big5_to_euc_tw",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("big5_to_mic",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("big5_to_utf8",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("bit",[ScalarType "bit",ScalarType "integer",ScalarType "boolean"],ScalarType "bit"),
    ("bit",[ScalarType "bigint",ScalarType "integer"],ScalarType "bit"),
    ("bit",[ScalarType "integer",ScalarType "integer"],ScalarType "bit"),
    ("bit_in",[ScalarType "cstring",ScalarType "oid",ScalarType "integer"],ScalarType "bit"),
    ("bit_length",[ScalarType "bytea"],ScalarType "integer"),
    ("bit_length",[ScalarType "bit"],ScalarType "integer"),
    ("bit_length",[ScalarType "text"],ScalarType "integer"),
    ("bit_out",[ScalarType "bit"],ScalarType "cstring"),
    ("bit_recv",[ScalarType "internal",ScalarType "oid",ScalarType "integer"],ScalarType "bit"),
    ("bit_send",[ScalarType "bit"],ScalarType "bytea"),
    ("bitand",[ScalarType "bit",ScalarType "bit"],ScalarType "bit"),
    ("bitcat",[ScalarType "bit varying",ScalarType "bit varying"],ScalarType "bit varying"),
    ("bitcmp",[ScalarType "bit",ScalarType "bit"],ScalarType "integer"),
    ("biteq",[ScalarType "bit",ScalarType "bit"],ScalarType "boolean"),
    ("bitge",[ScalarType "bit",ScalarType "bit"],ScalarType "boolean"),
    ("bitgt",[ScalarType "bit",ScalarType "bit"],ScalarType "boolean"),
    ("bitle",[ScalarType "bit",ScalarType "bit"],ScalarType "boolean"),
    ("bitlt",[ScalarType "bit",ScalarType "bit"],ScalarType "boolean"),
    ("bitne",[ScalarType "bit",ScalarType "bit"],ScalarType "boolean"),
    ("bitnot",[ScalarType "bit"],ScalarType "bit"),
    ("bitor",[ScalarType "bit",ScalarType "bit"],ScalarType "bit"),
    ("bitshiftleft",[ScalarType "bit",ScalarType "integer"],ScalarType "bit"),
    ("bitshiftright",[ScalarType "bit",ScalarType "integer"],ScalarType "bit"),
    ("bittypmodin",[ScalarType "cstring[]"],ScalarType "integer"),
    ("bittypmodout",[ScalarType "integer"],ScalarType "cstring"),
    ("bitxor",[ScalarType "bit",ScalarType "bit"],ScalarType "bit"),
    ("bool",[ScalarType "integer"],ScalarType "boolean"),
    ("booland_statefunc",[ScalarType "boolean",ScalarType "boolean"],ScalarType "boolean"),
    ("booleq",[ScalarType "boolean",ScalarType "boolean"],ScalarType "boolean"),
    ("boolge",[ScalarType "boolean",ScalarType "boolean"],ScalarType "boolean"),
    ("boolgt",[ScalarType "boolean",ScalarType "boolean"],ScalarType "boolean"),
    ("boolin",[ScalarType "cstring"],ScalarType "boolean"),
    ("boolle",[ScalarType "boolean",ScalarType "boolean"],ScalarType "boolean"),
    ("boollt",[ScalarType "boolean",ScalarType "boolean"],ScalarType "boolean"),
    ("boolne",[ScalarType "boolean",ScalarType "boolean"],ScalarType "boolean"),
    ("boolor_statefunc",[ScalarType "boolean",ScalarType "boolean"],ScalarType "boolean"),
    ("boolout",[ScalarType "boolean"],ScalarType "cstring"),
    ("boolrecv",[ScalarType "internal"],ScalarType "boolean"),
    ("boolsend",[ScalarType "boolean"],ScalarType "bytea"),
    ("box",[ScalarType "circle"],ScalarType "box"),
    ("box",[ScalarType "point",ScalarType "point"],ScalarType "box"),
    ("box",[ScalarType "polygon"],ScalarType "box"),
    ("box_above",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("box_above_eq",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("box_add",[ScalarType "box",ScalarType "point"],ScalarType "box"),
    ("box_below",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("box_below_eq",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("box_center",[ScalarType "box"],ScalarType "point"),
    ("box_contain",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("box_contained",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("box_distance",[ScalarType "box",ScalarType "box"],ScalarType "double precision"),
    ("box_div",[ScalarType "box",ScalarType "point"],ScalarType "box"),
    ("box_eq",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("box_ge",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("box_gt",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("box_in",[ScalarType "cstring"],ScalarType "box"),
    ("box_intersect",[ScalarType "box",ScalarType "box"],ScalarType "box"),
    ("box_le",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("box_left",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("box_lt",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("box_mul",[ScalarType "box",ScalarType "point"],ScalarType "box"),
    ("box_out",[ScalarType "box"],ScalarType "cstring"),
    ("box_overabove",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("box_overbelow",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("box_overlap",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("box_overleft",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("box_overright",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("box_recv",[ScalarType "internal"],ScalarType "box"),
    ("box_right",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("box_same",[ScalarType "box",ScalarType "box"],ScalarType "boolean"),
    ("box_send",[ScalarType "box"],ScalarType "bytea"),
    ("box_sub",[ScalarType "box",ScalarType "point"],ScalarType "box"),
    ("bpchar",[ScalarType "\"char\""],ScalarType "character"),
    ("bpchar",[ScalarType "character",ScalarType "integer",ScalarType "boolean"],ScalarType "character"),
    ("bpchar",[ScalarType "name"],ScalarType "character"),
    ("bpchar_larger",[ScalarType "character",ScalarType "character"],ScalarType "character"),
    ("bpchar_pattern_ge",[ScalarType "character",ScalarType "character"],ScalarType "boolean"),
    ("bpchar_pattern_gt",[ScalarType "character",ScalarType "character"],ScalarType "boolean"),
    ("bpchar_pattern_le",[ScalarType "character",ScalarType "character"],ScalarType "boolean"),
    ("bpchar_pattern_lt",[ScalarType "character",ScalarType "character"],ScalarType "boolean"),
    ("bpchar_smaller",[ScalarType "character",ScalarType "character"],ScalarType "character"),
    ("bpcharcmp",[ScalarType "character",ScalarType "character"],ScalarType "integer"),
    ("bpchareq",[ScalarType "character",ScalarType "character"],ScalarType "boolean"),
    ("bpcharge",[ScalarType "character",ScalarType "character"],ScalarType "boolean"),
    ("bpchargt",[ScalarType "character",ScalarType "character"],ScalarType "boolean"),
    ("bpchariclike",[ScalarType "character",ScalarType "text"],ScalarType "boolean"),
    ("bpcharicnlike",[ScalarType "character",ScalarType "text"],ScalarType "boolean"),
    ("bpcharicregexeq",[ScalarType "character",ScalarType "text"],ScalarType "boolean"),
    ("bpcharicregexne",[ScalarType "character",ScalarType "text"],ScalarType "boolean"),
    ("bpcharin",[ScalarType "cstring",ScalarType "oid",ScalarType "integer"],ScalarType "character"),
    ("bpcharle",[ScalarType "character",ScalarType "character"],ScalarType "boolean"),
    ("bpcharlike",[ScalarType "character",ScalarType "text"],ScalarType "boolean"),
    ("bpcharlt",[ScalarType "character",ScalarType "character"],ScalarType "boolean"),
    ("bpcharne",[ScalarType "character",ScalarType "character"],ScalarType "boolean"),
    ("bpcharnlike",[ScalarType "character",ScalarType "text"],ScalarType "boolean"),
    ("bpcharout",[ScalarType "character"],ScalarType "cstring"),
    ("bpcharrecv",[ScalarType "internal",ScalarType "oid",ScalarType "integer"],ScalarType "character"),
    ("bpcharregexeq",[ScalarType "character",ScalarType "text"],ScalarType "boolean"),
    ("bpcharregexne",[ScalarType "character",ScalarType "text"],ScalarType "boolean"),
    ("bpcharsend",[ScalarType "character"],ScalarType "bytea"),
    ("bpchartypmodin",[ScalarType "cstring[]"],ScalarType "integer"),
    ("bpchartypmodout",[ScalarType "integer"],ScalarType "cstring"),
    ("broadcast",[ScalarType "inet"],ScalarType "inet"),
    ("btabstimecmp",[ScalarType "abstime",ScalarType "abstime"],ScalarType "integer"),
    ("btarraycmp",[ScalarType "anyarray",ScalarType "anyarray"],ScalarType "integer"),
    ("btbeginscan",[ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("btboolcmp",[ScalarType "boolean",ScalarType "boolean"],ScalarType "integer"),
    ("btbpchar_pattern_cmp",[ScalarType "character",ScalarType "character"],ScalarType "integer"),
    ("btbuild",[ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("btbulkdelete",[ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("btcharcmp",[ScalarType "\"char\"",ScalarType "\"char\""],ScalarType "integer"),
    ("btcostestimate",[ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "void"),
    ("btendscan",[ScalarType "internal"],ScalarType "void"),
    ("btfloat48cmp",[ScalarType "real",ScalarType "double precision"],ScalarType "integer"),
    ("btfloat4cmp",[ScalarType "real",ScalarType "real"],ScalarType "integer"),
    ("btfloat84cmp",[ScalarType "double precision",ScalarType "real"],ScalarType "integer"),
    ("btfloat8cmp",[ScalarType "double precision",ScalarType "double precision"],ScalarType "integer"),
    ("btgetbitmap",[ScalarType "internal",ScalarType "internal"],ScalarType "bigint"),
    ("btgettuple",[ScalarType "internal",ScalarType "internal"],ScalarType "boolean"),
    ("btinsert",[ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "boolean"),
    ("btint24cmp",[ScalarType "smallint",ScalarType "integer"],ScalarType "integer"),
    ("btint28cmp",[ScalarType "smallint",ScalarType "bigint"],ScalarType "integer"),
    ("btint2cmp",[ScalarType "smallint",ScalarType "smallint"],ScalarType "integer"),
    ("btint42cmp",[ScalarType "integer",ScalarType "smallint"],ScalarType "integer"),
    ("btint48cmp",[ScalarType "integer",ScalarType "bigint"],ScalarType "integer"),
    ("btint4cmp",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("btint82cmp",[ScalarType "bigint",ScalarType "smallint"],ScalarType "integer"),
    ("btint84cmp",[ScalarType "bigint",ScalarType "integer"],ScalarType "integer"),
    ("btint8cmp",[ScalarType "bigint",ScalarType "bigint"],ScalarType "integer"),
    ("btmarkpos",[ScalarType "internal"],ScalarType "void"),
    ("btnamecmp",[ScalarType "name",ScalarType "name"],ScalarType "integer"),
    ("btoidcmp",[ScalarType "oid",ScalarType "oid"],ScalarType "integer"),
    ("btoidvectorcmp",[ScalarType "oidvector",ScalarType "oidvector"],ScalarType "integer"),
    ("btoptions",[ScalarType "text[]",ScalarType "boolean"],ScalarType "bytea"),
    ("btrecordcmp",[ScalarType "record",ScalarType "record"],ScalarType "integer"),
    ("btreltimecmp",[ScalarType "reltime",ScalarType "reltime"],ScalarType "integer"),
    ("btrescan",[ScalarType "internal",ScalarType "internal"],ScalarType "void"),
    ("btrestrpos",[ScalarType "internal"],ScalarType "void"),
    ("btrim",[ScalarType "text"],ScalarType "text"),
    ("btrim",[ScalarType "bytea",ScalarType "bytea"],ScalarType "bytea"),
    ("btrim",[ScalarType "text",ScalarType "text"],ScalarType "text"),
    ("bttext_pattern_cmp",[ScalarType "text",ScalarType "text"],ScalarType "integer"),
    ("bttextcmp",[ScalarType "text",ScalarType "text"],ScalarType "integer"),
    ("bttidcmp",[ScalarType "tid",ScalarType "tid"],ScalarType "integer"),
    ("bttintervalcmp",[ScalarType "tinterval",ScalarType "tinterval"],ScalarType "integer"),
    ("btvacuumcleanup",[ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("byteacat",[ScalarType "bytea",ScalarType "bytea"],ScalarType "bytea"),
    ("byteacmp",[ScalarType "bytea",ScalarType "bytea"],ScalarType "integer"),
    ("byteaeq",[ScalarType "bytea",ScalarType "bytea"],ScalarType "boolean"),
    ("byteage",[ScalarType "bytea",ScalarType "bytea"],ScalarType "boolean"),
    ("byteagt",[ScalarType "bytea",ScalarType "bytea"],ScalarType "boolean"),
    ("byteain",[ScalarType "cstring"],ScalarType "bytea"),
    ("byteale",[ScalarType "bytea",ScalarType "bytea"],ScalarType "boolean"),
    ("bytealike",[ScalarType "bytea",ScalarType "bytea"],ScalarType "boolean"),
    ("bytealt",[ScalarType "bytea",ScalarType "bytea"],ScalarType "boolean"),
    ("byteane",[ScalarType "bytea",ScalarType "bytea"],ScalarType "boolean"),
    ("byteanlike",[ScalarType "bytea",ScalarType "bytea"],ScalarType "boolean"),
    ("byteaout",[ScalarType "bytea"],ScalarType "cstring"),
    ("bytearecv",[ScalarType "internal"],ScalarType "bytea"),
    ("byteasend",[ScalarType "bytea"],ScalarType "bytea"),
    ("cash_cmp",[ScalarType "money",ScalarType "money"],ScalarType "integer"),
    ("cash_div_flt4",[ScalarType "money",ScalarType "real"],ScalarType "money"),
    ("cash_div_flt8",[ScalarType "money",ScalarType "double precision"],ScalarType "money"),
    ("cash_div_int2",[ScalarType "money",ScalarType "smallint"],ScalarType "money"),
    ("cash_div_int4",[ScalarType "money",ScalarType "integer"],ScalarType "money"),
    ("cash_eq",[ScalarType "money",ScalarType "money"],ScalarType "boolean"),
    ("cash_ge",[ScalarType "money",ScalarType "money"],ScalarType "boolean"),
    ("cash_gt",[ScalarType "money",ScalarType "money"],ScalarType "boolean"),
    ("cash_in",[ScalarType "cstring"],ScalarType "money"),
    ("cash_le",[ScalarType "money",ScalarType "money"],ScalarType "boolean"),
    ("cash_lt",[ScalarType "money",ScalarType "money"],ScalarType "boolean"),
    ("cash_mi",[ScalarType "money",ScalarType "money"],ScalarType "money"),
    ("cash_mul_flt4",[ScalarType "money",ScalarType "real"],ScalarType "money"),
    ("cash_mul_flt8",[ScalarType "money",ScalarType "double precision"],ScalarType "money"),
    ("cash_mul_int2",[ScalarType "money",ScalarType "smallint"],ScalarType "money"),
    ("cash_mul_int4",[ScalarType "money",ScalarType "integer"],ScalarType "money"),
    ("cash_ne",[ScalarType "money",ScalarType "money"],ScalarType "boolean"),
    ("cash_out",[ScalarType "money"],ScalarType "cstring"),
    ("cash_pl",[ScalarType "money",ScalarType "money"],ScalarType "money"),
    ("cash_recv",[ScalarType "internal"],ScalarType "money"),
    ("cash_send",[ScalarType "money"],ScalarType "bytea"),
    ("cash_words",[ScalarType "money"],ScalarType "text"),
    ("cashlarger",[ScalarType "money",ScalarType "money"],ScalarType "money"),
    ("cashsmaller",[ScalarType "money",ScalarType "money"],ScalarType "money"),
    ("cbrt",[ScalarType "double precision"],ScalarType "double precision"),
    ("ceil",[ScalarType "double precision"],ScalarType "double precision"),
    ("ceil",[ScalarType "numeric"],ScalarType "numeric"),
    ("ceiling",[ScalarType "double precision"],ScalarType "double precision"),
    ("ceiling",[ScalarType "numeric"],ScalarType "numeric"),
    ("center",[ScalarType "circle"],ScalarType "point"),
    ("center",[ScalarType "box"],ScalarType "point"),
    ("char",[ScalarType "integer"],ScalarType "\"char\""),
    ("char",[ScalarType "text"],ScalarType "\"char\""),
    ("char_length",[ScalarType "text"],ScalarType "integer"),
    ("char_length",[ScalarType "character"],ScalarType "integer"),
    ("character_length",[ScalarType "character"],ScalarType "integer"),
    ("character_length",[ScalarType "text"],ScalarType "integer"),
    ("chareq",[ScalarType "\"char\"",ScalarType "\"char\""],ScalarType "boolean"),
    ("charge",[ScalarType "\"char\"",ScalarType "\"char\""],ScalarType "boolean"),
    ("chargt",[ScalarType "\"char\"",ScalarType "\"char\""],ScalarType "boolean"),
    ("charin",[ScalarType "cstring"],ScalarType "\"char\""),
    ("charle",[ScalarType "\"char\"",ScalarType "\"char\""],ScalarType "boolean"),
    ("charlt",[ScalarType "\"char\"",ScalarType "\"char\""],ScalarType "boolean"),
    ("charne",[ScalarType "\"char\"",ScalarType "\"char\""],ScalarType "boolean"),
    ("charout",[ScalarType "\"char\""],ScalarType "cstring"),
    ("charrecv",[ScalarType "internal"],ScalarType "\"char\""),
    ("charsend",[ScalarType "\"char\""],ScalarType "bytea"),
    ("chr",[ScalarType "integer"],ScalarType "text"),
    ("cideq",[ScalarType "cid",ScalarType "cid"],ScalarType "boolean"),
    ("cidin",[ScalarType "cstring"],ScalarType "cid"),
    ("cidout",[ScalarType "cid"],ScalarType "cstring"),
    ("cidr",[ScalarType "inet"],ScalarType "cidr"),
    ("cidr_in",[ScalarType "cstring"],ScalarType "cidr"),
    ("cidr_out",[ScalarType "cidr"],ScalarType "cstring"),
    ("cidr_recv",[ScalarType "internal"],ScalarType "cidr"),
    ("cidr_send",[ScalarType "cidr"],ScalarType "bytea"),
    ("cidrecv",[ScalarType "internal"],ScalarType "cid"),
    ("cidsend",[ScalarType "cid"],ScalarType "bytea"),
    ("circle",[ScalarType "polygon"],ScalarType "circle"),
    ("circle",[ScalarType "point",ScalarType "double precision"],ScalarType "circle"),
    ("circle",[ScalarType "box"],ScalarType "circle"),
    ("circle_above",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("circle_add_pt",[ScalarType "circle",ScalarType "point"],ScalarType "circle"),
    ("circle_below",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("circle_center",[ScalarType "circle"],ScalarType "point"),
    ("circle_contain",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("circle_contain_pt",[ScalarType "circle",ScalarType "point"],ScalarType "boolean"),
    ("circle_contained",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("circle_distance",[ScalarType "circle",ScalarType "circle"],ScalarType "double precision"),
    ("circle_div_pt",[ScalarType "circle",ScalarType "point"],ScalarType "circle"),
    ("circle_eq",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("circle_ge",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("circle_gt",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("circle_in",[ScalarType "cstring"],ScalarType "circle"),
    ("circle_le",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("circle_left",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("circle_lt",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("circle_mul_pt",[ScalarType "circle",ScalarType "point"],ScalarType "circle"),
    ("circle_ne",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("circle_out",[ScalarType "circle"],ScalarType "cstring"),
    ("circle_overabove",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("circle_overbelow",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("circle_overlap",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("circle_overleft",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("circle_overright",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("circle_recv",[ScalarType "internal"],ScalarType "circle"),
    ("circle_right",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("circle_same",[ScalarType "circle",ScalarType "circle"],ScalarType "boolean"),
    ("circle_send",[ScalarType "circle"],ScalarType "bytea"),
    ("circle_sub_pt",[ScalarType "circle",ScalarType "point"],ScalarType "circle"),
    ("clock_timestamp",[],ScalarType "timestamp with time zone"),
    ("close_lb",[ScalarType "line",ScalarType "box"],ScalarType "point"),
    ("close_ls",[ScalarType "line",ScalarType "lseg"],ScalarType "point"),
    ("close_lseg",[ScalarType "lseg",ScalarType "lseg"],ScalarType "point"),
    ("close_pb",[ScalarType "point",ScalarType "box"],ScalarType "point"),
    ("close_pl",[ScalarType "point",ScalarType "line"],ScalarType "point"),
    ("close_ps",[ScalarType "point",ScalarType "lseg"],ScalarType "point"),
    ("close_sb",[ScalarType "lseg",ScalarType "box"],ScalarType "point"),
    ("close_sl",[ScalarType "lseg",ScalarType "line"],ScalarType "point"),
    ("col_description",[ScalarType "oid",ScalarType "integer"],ScalarType "text"),
    ("contjoinsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "smallint",ScalarType "internal"],ScalarType "double precision"),
    ("contsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "integer"],ScalarType "double precision"),
    ("convert",[ScalarType "bytea",ScalarType "name",ScalarType "name"],ScalarType "bytea"),
    ("convert_from",[ScalarType "bytea",ScalarType "name"],ScalarType "text"),
    ("convert_to",[ScalarType "text",ScalarType "name"],ScalarType "bytea"),
    ("cos",[ScalarType "double precision"],ScalarType "double precision"),
    ("cot",[ScalarType "double precision"],ScalarType "double precision"),
    ("cstring_in",[ScalarType "cstring"],ScalarType "cstring"),
    ("cstring_out",[ScalarType "cstring"],ScalarType "cstring"),
    ("cstring_recv",[ScalarType "internal"],ScalarType "cstring"),
    ("cstring_send",[ScalarType "cstring"],ScalarType "bytea"),
    ("current_database",[],ScalarType "name"),
    ("current_query",[],ScalarType "text"),
    ("current_schema",[],ScalarType "name"),
    ("current_schemas",[ScalarType "boolean"],ScalarType "name[]"),
    ("current_setting",[ScalarType "text"],ScalarType "text"),
    ("current_user",[],ScalarType "name"),
    ("currtid",[ScalarType "oid",ScalarType "tid"],ScalarType "tid"),
    ("currtid2",[ScalarType "text",ScalarType "tid"],ScalarType "tid"),
    ("currval",[ScalarType "regclass"],ScalarType "bigint"),
    ("cursor_to_xml",[ScalarType "cursor refcursor",ScalarType "count integer",ScalarType "nulls boolean",ScalarType "tableforest boolean",ScalarType "targetns text"],ScalarType "xml"),
    ("cursor_to_xmlschema",[ScalarType "cursor refcursor",ScalarType "nulls boolean",ScalarType "tableforest boolean",ScalarType "targetns text"],ScalarType "xml"),
    ("database_to_xml",[ScalarType "nulls boolean",ScalarType "tableforest boolean",ScalarType "targetns text"],ScalarType "xml"),
    ("database_to_xml_and_xmlschema",[ScalarType "nulls boolean",ScalarType "tableforest boolean",ScalarType "targetns text"],ScalarType "xml"),
    ("database_to_xmlschema",[ScalarType "nulls boolean",ScalarType "tableforest boolean",ScalarType "targetns text"],ScalarType "xml"),
    ("date",[ScalarType "timestamp without time zone"],ScalarType "date"),
    ("date",[ScalarType "abstime"],ScalarType "date"),
    ("date",[ScalarType "timestamp with time zone"],ScalarType "date"),
    ("date_cmp",[ScalarType "date",ScalarType "date"],ScalarType "integer"),
    ("date_cmp_timestamp",[ScalarType "date",ScalarType "timestamp without time zone"],ScalarType "integer"),
    ("date_cmp_timestamptz",[ScalarType "date",ScalarType "timestamp with time zone"],ScalarType "integer"),
    ("date_eq",[ScalarType "date",ScalarType "date"],ScalarType "boolean"),
    ("date_eq_timestamp",[ScalarType "date",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("date_eq_timestamptz",[ScalarType "date",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("date_ge",[ScalarType "date",ScalarType "date"],ScalarType "boolean"),
    ("date_ge_timestamp",[ScalarType "date",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("date_ge_timestamptz",[ScalarType "date",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("date_gt",[ScalarType "date",ScalarType "date"],ScalarType "boolean"),
    ("date_gt_timestamp",[ScalarType "date",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("date_gt_timestamptz",[ScalarType "date",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("date_in",[ScalarType "cstring"],ScalarType "date"),
    ("date_larger",[ScalarType "date",ScalarType "date"],ScalarType "date"),
    ("date_le",[ScalarType "date",ScalarType "date"],ScalarType "boolean"),
    ("date_le_timestamp",[ScalarType "date",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("date_le_timestamptz",[ScalarType "date",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("date_lt",[ScalarType "date",ScalarType "date"],ScalarType "boolean"),
    ("date_lt_timestamp",[ScalarType "date",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("date_lt_timestamptz",[ScalarType "date",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("date_mi",[ScalarType "date",ScalarType "date"],ScalarType "integer"),
    ("date_mi_interval",[ScalarType "date",ScalarType "interval"],ScalarType "timestamp without time zone"),
    ("date_mii",[ScalarType "date",ScalarType "integer"],ScalarType "date"),
    ("date_ne",[ScalarType "date",ScalarType "date"],ScalarType "boolean"),
    ("date_ne_timestamp",[ScalarType "date",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("date_ne_timestamptz",[ScalarType "date",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("date_out",[ScalarType "date"],ScalarType "cstring"),
    ("date_part",[ScalarType "text",ScalarType "time without time zone"],ScalarType "double precision"),
    ("date_part",[ScalarType "text",ScalarType "timestamp without time zone"],ScalarType "double precision"),
    ("date_part",[ScalarType "text",ScalarType "date"],ScalarType "double precision"),
    ("date_part",[ScalarType "text",ScalarType "abstime"],ScalarType "double precision"),
    ("date_part",[ScalarType "text",ScalarType "timestamp with time zone"],ScalarType "double precision"),
    ("date_part",[ScalarType "text",ScalarType "reltime"],ScalarType "double precision"),
    ("date_part",[ScalarType "text",ScalarType "interval"],ScalarType "double precision"),
    ("date_part",[ScalarType "text",ScalarType "time with time zone"],ScalarType "double precision"),
    ("date_pl_interval",[ScalarType "date",ScalarType "interval"],ScalarType "timestamp without time zone"),
    ("date_pli",[ScalarType "date",ScalarType "integer"],ScalarType "date"),
    ("date_recv",[ScalarType "internal"],ScalarType "date"),
    ("date_send",[ScalarType "date"],ScalarType "bytea"),
    ("date_smaller",[ScalarType "date",ScalarType "date"],ScalarType "date"),
    ("date_trunc",[ScalarType "text",ScalarType "timestamp with time zone"],ScalarType "timestamp with time zone"),
    ("date_trunc",[ScalarType "text",ScalarType "timestamp without time zone"],ScalarType "timestamp without time zone"),
    ("date_trunc",[ScalarType "text",ScalarType "interval"],ScalarType "interval"),
    ("datetime_pl",[ScalarType "date",ScalarType "time without time zone"],ScalarType "timestamp without time zone"),
    ("datetimetz_pl",[ScalarType "date",ScalarType "time with time zone"],ScalarType "timestamp with time zone"),
    ("dcbrt",[ScalarType "double precision"],ScalarType "double precision"),
    ("decode",[ScalarType "text",ScalarType "text"],ScalarType "bytea"),
    ("degrees",[ScalarType "double precision"],ScalarType "double precision"),
    ("dexp",[ScalarType "double precision"],ScalarType "double precision"),
    ("diagonal",[ScalarType "box"],ScalarType "lseg"),
    ("diameter",[ScalarType "circle"],ScalarType "double precision"),
    ("dispell_init",[ScalarType "internal"],ScalarType "internal"),
    ("dispell_lexize",[ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("dist_cpoly",[ScalarType "circle",ScalarType "polygon"],ScalarType "double precision"),
    ("dist_lb",[ScalarType "line",ScalarType "box"],ScalarType "double precision"),
    ("dist_pb",[ScalarType "point",ScalarType "box"],ScalarType "double precision"),
    ("dist_pc",[ScalarType "point",ScalarType "circle"],ScalarType "double precision"),
    ("dist_pl",[ScalarType "point",ScalarType "line"],ScalarType "double precision"),
    ("dist_ppath",[ScalarType "point",ScalarType "path"],ScalarType "double precision"),
    ("dist_ps",[ScalarType "point",ScalarType "lseg"],ScalarType "double precision"),
    ("dist_sb",[ScalarType "lseg",ScalarType "box"],ScalarType "double precision"),
    ("dist_sl",[ScalarType "lseg",ScalarType "line"],ScalarType "double precision"),
    ("div",[ScalarType "numeric",ScalarType "numeric"],ScalarType "numeric"),
    ("dlog1",[ScalarType "double precision"],ScalarType "double precision"),
    ("dlog10",[ScalarType "double precision"],ScalarType "double precision"),
    ("domain_in",[ScalarType "cstring",ScalarType "oid",ScalarType "integer"],ScalarType "\"any\""),
    ("domain_recv",[ScalarType "internal",ScalarType "oid",ScalarType "integer"],ScalarType "\"any\""),
    ("dpow",[ScalarType "double precision",ScalarType "double precision"],ScalarType "double precision"),
    ("dround",[ScalarType "double precision"],ScalarType "double precision"),
    ("dsimple_init",[ScalarType "internal"],ScalarType "internal"),
    ("dsimple_lexize",[ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("dsnowball_init",[ScalarType "internal"],ScalarType "internal"),
    ("dsnowball_lexize",[ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("dsqrt",[ScalarType "double precision"],ScalarType "double precision"),
    ("dsynonym_init",[ScalarType "internal"],ScalarType "internal"),
    ("dsynonym_lexize",[ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("dtrunc",[ScalarType "double precision"],ScalarType "double precision"),
    ("encode",[ScalarType "bytea",ScalarType "text"],ScalarType "text"),
    ("enum_cmp",[ScalarType "anyenum",ScalarType "anyenum"],ScalarType "integer"),
    ("enum_eq",[ScalarType "anyenum",ScalarType "anyenum"],ScalarType "boolean"),
    ("enum_first",[ScalarType "anyenum"],ScalarType "anyenum"),
    ("enum_ge",[ScalarType "anyenum",ScalarType "anyenum"],ScalarType "boolean"),
    ("enum_gt",[ScalarType "anyenum",ScalarType "anyenum"],ScalarType "boolean"),
    ("enum_in",[ScalarType "cstring",ScalarType "oid"],ScalarType "anyenum"),
    ("enum_larger",[ScalarType "anyenum",ScalarType "anyenum"],ScalarType "anyenum"),
    ("enum_last",[ScalarType "anyenum"],ScalarType "anyenum"),
    ("enum_le",[ScalarType "anyenum",ScalarType "anyenum"],ScalarType "boolean"),
    ("enum_lt",[ScalarType "anyenum",ScalarType "anyenum"],ScalarType "boolean"),
    ("enum_ne",[ScalarType "anyenum",ScalarType "anyenum"],ScalarType "boolean"),
    ("enum_out",[ScalarType "anyenum"],ScalarType "cstring"),
    ("enum_range",[ScalarType "anyenum",ScalarType "anyenum"],ScalarType "anyarray"),
    ("enum_range",[ScalarType "anyenum"],ScalarType "anyarray"),
    ("enum_recv",[ScalarType "cstring",ScalarType "oid"],ScalarType "anyenum"),
    ("enum_send",[ScalarType "anyenum"],ScalarType "bytea"),
    ("enum_smaller",[ScalarType "anyenum",ScalarType "anyenum"],ScalarType "anyenum"),
    ("eqjoinsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "smallint",ScalarType "internal"],ScalarType "double precision"),
    ("eqsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "integer"],ScalarType "double precision"),
    ("euc_cn_to_mic",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("euc_cn_to_utf8",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("euc_jis_2004_to_shift_jis_2004",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("euc_jis_2004_to_utf8",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("euc_jp_to_mic",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("euc_jp_to_sjis",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("euc_jp_to_utf8",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("euc_kr_to_mic",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("euc_kr_to_utf8",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("euc_tw_to_big5",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("euc_tw_to_mic",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("euc_tw_to_utf8",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("exp",[ScalarType "double precision"],ScalarType "double precision"),
    ("exp",[ScalarType "numeric"],ScalarType "numeric"),
    ("factorial",[ScalarType "bigint"],ScalarType "numeric"),
    ("family",[ScalarType "inet"],ScalarType "integer"),
    ("float4",[ScalarType "double precision"],ScalarType "real"),
    ("float4",[ScalarType "integer"],ScalarType "real"),
    ("float4",[ScalarType "smallint"],ScalarType "real"),
    ("float4",[ScalarType "numeric"],ScalarType "real"),
    ("float4",[ScalarType "bigint"],ScalarType "real"),
    ("float48div",[ScalarType "real",ScalarType "double precision"],ScalarType "double precision"),
    ("float48eq",[ScalarType "real",ScalarType "double precision"],ScalarType "boolean"),
    ("float48ge",[ScalarType "real",ScalarType "double precision"],ScalarType "boolean"),
    ("float48gt",[ScalarType "real",ScalarType "double precision"],ScalarType "boolean"),
    ("float48le",[ScalarType "real",ScalarType "double precision"],ScalarType "boolean"),
    ("float48lt",[ScalarType "real",ScalarType "double precision"],ScalarType "boolean"),
    ("float48mi",[ScalarType "real",ScalarType "double precision"],ScalarType "double precision"),
    ("float48mul",[ScalarType "real",ScalarType "double precision"],ScalarType "double precision"),
    ("float48ne",[ScalarType "real",ScalarType "double precision"],ScalarType "boolean"),
    ("float48pl",[ScalarType "real",ScalarType "double precision"],ScalarType "double precision"),
    ("float4_accum",[ScalarType "double precision[]",ScalarType "real"],ScalarType "double precision[]"),
    ("float4abs",[ScalarType "real"],ScalarType "real"),
    ("float4div",[ScalarType "real",ScalarType "real"],ScalarType "real"),
    ("float4eq",[ScalarType "real",ScalarType "real"],ScalarType "boolean"),
    ("float4ge",[ScalarType "real",ScalarType "real"],ScalarType "boolean"),
    ("float4gt",[ScalarType "real",ScalarType "real"],ScalarType "boolean"),
    ("float4in",[ScalarType "cstring"],ScalarType "real"),
    ("float4larger",[ScalarType "real",ScalarType "real"],ScalarType "real"),
    ("float4le",[ScalarType "real",ScalarType "real"],ScalarType "boolean"),
    ("float4lt",[ScalarType "real",ScalarType "real"],ScalarType "boolean"),
    ("float4mi",[ScalarType "real",ScalarType "real"],ScalarType "real"),
    ("float4mul",[ScalarType "real",ScalarType "real"],ScalarType "real"),
    ("float4ne",[ScalarType "real",ScalarType "real"],ScalarType "boolean"),
    ("float4out",[ScalarType "real"],ScalarType "cstring"),
    ("float4pl",[ScalarType "real",ScalarType "real"],ScalarType "real"),
    ("float4recv",[ScalarType "internal"],ScalarType "real"),
    ("float4send",[ScalarType "real"],ScalarType "bytea"),
    ("float4smaller",[ScalarType "real",ScalarType "real"],ScalarType "real"),
    ("float4um",[ScalarType "real"],ScalarType "real"),
    ("float4up",[ScalarType "real"],ScalarType "real"),
    ("float8",[ScalarType "real"],ScalarType "double precision"),
    ("float8",[ScalarType "integer"],ScalarType "double precision"),
    ("float8",[ScalarType "bigint"],ScalarType "double precision"),
    ("float8",[ScalarType "smallint"],ScalarType "double precision"),
    ("float8",[ScalarType "numeric"],ScalarType "double precision"),
    ("float84div",[ScalarType "double precision",ScalarType "real"],ScalarType "double precision"),
    ("float84eq",[ScalarType "double precision",ScalarType "real"],ScalarType "boolean"),
    ("float84ge",[ScalarType "double precision",ScalarType "real"],ScalarType "boolean"),
    ("float84gt",[ScalarType "double precision",ScalarType "real"],ScalarType "boolean"),
    ("float84le",[ScalarType "double precision",ScalarType "real"],ScalarType "boolean"),
    ("float84lt",[ScalarType "double precision",ScalarType "real"],ScalarType "boolean"),
    ("float84mi",[ScalarType "double precision",ScalarType "real"],ScalarType "double precision"),
    ("float84mul",[ScalarType "double precision",ScalarType "real"],ScalarType "double precision"),
    ("float84ne",[ScalarType "double precision",ScalarType "real"],ScalarType "boolean"),
    ("float84pl",[ScalarType "double precision",ScalarType "real"],ScalarType "double precision"),
    ("float8_accum",[ScalarType "double precision[]",ScalarType "double precision"],ScalarType "double precision[]"),
    ("float8_avg",[ScalarType "double precision[]"],ScalarType "double precision"),
    ("float8_corr",[ScalarType "double precision[]"],ScalarType "double precision"),
    ("float8_covar_pop",[ScalarType "double precision[]"],ScalarType "double precision"),
    ("float8_covar_samp",[ScalarType "double precision[]"],ScalarType "double precision"),
    ("float8_regr_accum",[ScalarType "double precision[]",ScalarType "double precision",ScalarType "double precision"],ScalarType "double precision[]"),
    ("float8_regr_avgx",[ScalarType "double precision[]"],ScalarType "double precision"),
    ("float8_regr_avgy",[ScalarType "double precision[]"],ScalarType "double precision"),
    ("float8_regr_intercept",[ScalarType "double precision[]"],ScalarType "double precision"),
    ("float8_regr_r2",[ScalarType "double precision[]"],ScalarType "double precision"),
    ("float8_regr_slope",[ScalarType "double precision[]"],ScalarType "double precision"),
    ("float8_regr_sxx",[ScalarType "double precision[]"],ScalarType "double precision"),
    ("float8_regr_sxy",[ScalarType "double precision[]"],ScalarType "double precision"),
    ("float8_regr_syy",[ScalarType "double precision[]"],ScalarType "double precision"),
    ("float8_stddev_pop",[ScalarType "double precision[]"],ScalarType "double precision"),
    ("float8_stddev_samp",[ScalarType "double precision[]"],ScalarType "double precision"),
    ("float8_var_pop",[ScalarType "double precision[]"],ScalarType "double precision"),
    ("float8_var_samp",[ScalarType "double precision[]"],ScalarType "double precision"),
    ("float8abs",[ScalarType "double precision"],ScalarType "double precision"),
    ("float8div",[ScalarType "double precision",ScalarType "double precision"],ScalarType "double precision"),
    ("float8eq",[ScalarType "double precision",ScalarType "double precision"],ScalarType "boolean"),
    ("float8ge",[ScalarType "double precision",ScalarType "double precision"],ScalarType "boolean"),
    ("float8gt",[ScalarType "double precision",ScalarType "double precision"],ScalarType "boolean"),
    ("float8in",[ScalarType "cstring"],ScalarType "double precision"),
    ("float8larger",[ScalarType "double precision",ScalarType "double precision"],ScalarType "double precision"),
    ("float8le",[ScalarType "double precision",ScalarType "double precision"],ScalarType "boolean"),
    ("float8lt",[ScalarType "double precision",ScalarType "double precision"],ScalarType "boolean"),
    ("float8mi",[ScalarType "double precision",ScalarType "double precision"],ScalarType "double precision"),
    ("float8mul",[ScalarType "double precision",ScalarType "double precision"],ScalarType "double precision"),
    ("float8ne",[ScalarType "double precision",ScalarType "double precision"],ScalarType "boolean"),
    ("float8out",[ScalarType "double precision"],ScalarType "cstring"),
    ("float8pl",[ScalarType "double precision",ScalarType "double precision"],ScalarType "double precision"),
    ("float8recv",[ScalarType "internal"],ScalarType "double precision"),
    ("float8send",[ScalarType "double precision"],ScalarType "bytea"),
    ("float8smaller",[ScalarType "double precision",ScalarType "double precision"],ScalarType "double precision"),
    ("float8um",[ScalarType "double precision"],ScalarType "double precision"),
    ("float8up",[ScalarType "double precision"],ScalarType "double precision"),
    ("floor",[ScalarType "double precision"],ScalarType "double precision"),
    ("floor",[ScalarType "numeric"],ScalarType "numeric"),
    ("flt4_mul_cash",[ScalarType "real",ScalarType "money"],ScalarType "money"),
    ("flt8_mul_cash",[ScalarType "double precision",ScalarType "money"],ScalarType "money"),
    ("fmgr_c_validator",[ScalarType "oid"],ScalarType "void"),
    ("fmgr_internal_validator",[ScalarType "oid"],ScalarType "void"),
    ("fmgr_sql_validator",[ScalarType "oid"],ScalarType "void"),
    ("format_type",[ScalarType "oid",ScalarType "integer"],ScalarType "text"),
    ("gb18030_to_utf8",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("gbk_to_utf8",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("generate_series",[ScalarType "integer",ScalarType "integer"],ScalarType "SETOF integer"),
    ("generate_series",[ScalarType "integer",ScalarType "integer",ScalarType "integer"],ScalarType "SETOF integer"),
    ("generate_series",[ScalarType "timestamp without time zone",ScalarType "timestamp without time zone",ScalarType "interval"],ScalarType "SETOF timestamp without time zone"),
    ("generate_series",[ScalarType "bigint",ScalarType "bigint",ScalarType "bigint"],ScalarType "SETOF bigint"),
    ("generate_series",[ScalarType "timestamp with time zone",ScalarType "timestamp with time zone",ScalarType "interval"],ScalarType "SETOF timestamp with time zone"),
    ("generate_series",[ScalarType "bigint",ScalarType "bigint"],ScalarType "SETOF bigint"),
    ("generate_subscripts",[ScalarType "anyarray",ScalarType "integer"],ScalarType "SETOF integer"),
    ("generate_subscripts",[ScalarType "anyarray",ScalarType "integer",ScalarType "boolean"],ScalarType "SETOF integer"),
    ("get_bit",[ScalarType "bytea",ScalarType "integer"],ScalarType "integer"),
    ("get_byte",[ScalarType "bytea",ScalarType "integer"],ScalarType "integer"),
    ("get_current_ts_config",[],ScalarType "regconfig"),
    ("getdatabaseencoding",[],ScalarType "name"),
    ("getpgusername",[],ScalarType "name"),
    ("gin_cmp_prefix",[ScalarType "text",ScalarType "text",ScalarType "smallint",ScalarType "internal"],ScalarType "integer"),
    ("gin_cmp_tslexeme",[ScalarType "text",ScalarType "text"],ScalarType "integer"),
    ("gin_extract_tsquery",[ScalarType "tsquery",ScalarType "internal",ScalarType "smallint",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("gin_extract_tsvector",[ScalarType "tsvector",ScalarType "internal"],ScalarType "internal"),
    ("gin_tsquery_consistent",[ScalarType "internal",ScalarType "smallint",ScalarType "tsquery",ScalarType "integer",ScalarType "internal",ScalarType "internal"],ScalarType "boolean"),
    ("ginarrayconsistent",[ScalarType "internal",ScalarType "smallint",ScalarType "anyarray",ScalarType "integer",ScalarType "internal",ScalarType "internal"],ScalarType "boolean"),
    ("ginarrayextract",[ScalarType "anyarray",ScalarType "internal"],ScalarType "internal"),
    ("ginbeginscan",[ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("ginbuild",[ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("ginbulkdelete",[ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("gincostestimate",[ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "void"),
    ("ginendscan",[ScalarType "internal"],ScalarType "void"),
    ("gingetbitmap",[ScalarType "internal",ScalarType "internal"],ScalarType "bigint"),
    ("gininsert",[ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "boolean"),
    ("ginmarkpos",[ScalarType "internal"],ScalarType "void"),
    ("ginoptions",[ScalarType "text[]",ScalarType "boolean"],ScalarType "bytea"),
    ("ginqueryarrayextract",[ScalarType "anyarray",ScalarType "internal",ScalarType "smallint",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("ginrescan",[ScalarType "internal",ScalarType "internal"],ScalarType "void"),
    ("ginrestrpos",[ScalarType "internal"],ScalarType "void"),
    ("ginvacuumcleanup",[ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("gist_box_compress",[ScalarType "internal"],ScalarType "internal"),
    ("gist_box_consistent",[ScalarType "internal",ScalarType "box",ScalarType "integer",ScalarType "oid",ScalarType "internal"],ScalarType "boolean"),
    ("gist_box_decompress",[ScalarType "internal"],ScalarType "internal"),
    ("gist_box_penalty",[ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("gist_box_picksplit",[ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("gist_box_same",[ScalarType "box",ScalarType "box",ScalarType "internal"],ScalarType "internal"),
    ("gist_box_union",[ScalarType "internal",ScalarType "internal"],ScalarType "box"),
    ("gist_circle_compress",[ScalarType "internal"],ScalarType "internal"),
    ("gist_circle_consistent",[ScalarType "internal",ScalarType "circle",ScalarType "integer",ScalarType "oid",ScalarType "internal"],ScalarType "boolean"),
    ("gist_poly_compress",[ScalarType "internal"],ScalarType "internal"),
    ("gist_poly_consistent",[ScalarType "internal",ScalarType "polygon",ScalarType "integer",ScalarType "oid",ScalarType "internal"],ScalarType "boolean"),
    ("gistbeginscan",[ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("gistbuild",[ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("gistbulkdelete",[ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("gistcostestimate",[ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "void"),
    ("gistendscan",[ScalarType "internal"],ScalarType "void"),
    ("gistgetbitmap",[ScalarType "internal",ScalarType "internal"],ScalarType "bigint"),
    ("gistgettuple",[ScalarType "internal",ScalarType "internal"],ScalarType "boolean"),
    ("gistinsert",[ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "boolean"),
    ("gistmarkpos",[ScalarType "internal"],ScalarType "void"),
    ("gistoptions",[ScalarType "text[]",ScalarType "boolean"],ScalarType "bytea"),
    ("gistrescan",[ScalarType "internal",ScalarType "internal"],ScalarType "void"),
    ("gistrestrpos",[ScalarType "internal"],ScalarType "void"),
    ("gistvacuumcleanup",[ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("gtsquery_compress",[ScalarType "internal"],ScalarType "internal"),
    ("gtsquery_consistent",[ScalarType "internal",ScalarType "internal",ScalarType "integer",ScalarType "oid",ScalarType "internal"],ScalarType "boolean"),
    ("gtsquery_decompress",[ScalarType "internal"],ScalarType "internal"),
    ("gtsquery_penalty",[ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("gtsquery_picksplit",[ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("gtsquery_same",[ScalarType "bigint",ScalarType "bigint",ScalarType "internal"],ScalarType "internal"),
    ("gtsquery_union",[ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("gtsvector_compress",[ScalarType "internal"],ScalarType "internal"),
    ("gtsvector_consistent",[ScalarType "internal",ScalarType "gtsvector",ScalarType "integer",ScalarType "oid",ScalarType "internal"],ScalarType "boolean"),
    ("gtsvector_decompress",[ScalarType "internal"],ScalarType "internal"),
    ("gtsvector_penalty",[ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("gtsvector_picksplit",[ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("gtsvector_same",[ScalarType "gtsvector",ScalarType "gtsvector",ScalarType "internal"],ScalarType "internal"),
    ("gtsvector_union",[ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("gtsvectorin",[ScalarType "cstring"],ScalarType "gtsvector"),
    ("gtsvectorout",[ScalarType "gtsvector"],ScalarType "cstring"),
    ("has_any_column_privilege",[ScalarType "name",ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_any_column_privilege",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_any_column_privilege",[ScalarType "name",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_any_column_privilege",[ScalarType "oid",ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_any_column_privilege",[ScalarType "oid",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_any_column_privilege",[ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_column_privilege",[ScalarType "oid",ScalarType "oid",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_column_privilege",[ScalarType "oid",ScalarType "oid",ScalarType "smallint",ScalarType "text"],ScalarType "boolean"),
    ("has_column_privilege",[ScalarType "text",ScalarType "smallint",ScalarType "text"],ScalarType "boolean"),
    ("has_column_privilege",[ScalarType "text",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_column_privilege",[ScalarType "oid",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_column_privilege",[ScalarType "oid",ScalarType "smallint",ScalarType "text"],ScalarType "boolean"),
    ("has_column_privilege",[ScalarType "name",ScalarType "text",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_column_privilege",[ScalarType "name",ScalarType "text",ScalarType "smallint",ScalarType "text"],ScalarType "boolean"),
    ("has_column_privilege",[ScalarType "name",ScalarType "oid",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_column_privilege",[ScalarType "name",ScalarType "oid",ScalarType "smallint",ScalarType "text"],ScalarType "boolean"),
    ("has_column_privilege",[ScalarType "oid",ScalarType "text",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_column_privilege",[ScalarType "oid",ScalarType "text",ScalarType "smallint",ScalarType "text"],ScalarType "boolean"),
    ("has_database_privilege",[ScalarType "name",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_database_privilege",[ScalarType "oid",ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_database_privilege",[ScalarType "oid",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_database_privilege",[ScalarType "name",ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_database_privilege",[ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_database_privilege",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_foreign_data_wrapper_privilege",[ScalarType "oid",ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_foreign_data_wrapper_privilege",[ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_foreign_data_wrapper_privilege",[ScalarType "name",ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_foreign_data_wrapper_privilege",[ScalarType "name",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_foreign_data_wrapper_privilege",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_foreign_data_wrapper_privilege",[ScalarType "oid",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_function_privilege",[ScalarType "oid",ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_function_privilege",[ScalarType "name",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_function_privilege",[ScalarType "name",ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_function_privilege",[ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_function_privilege",[ScalarType "oid",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_function_privilege",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_language_privilege",[ScalarType "oid",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_language_privilege",[ScalarType "name",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_language_privilege",[ScalarType "name",ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_language_privilege",[ScalarType "oid",ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_language_privilege",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_language_privilege",[ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_schema_privilege",[ScalarType "name",ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_schema_privilege",[ScalarType "oid",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_schema_privilege",[ScalarType "oid",ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_schema_privilege",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_schema_privilege",[ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_schema_privilege",[ScalarType "name",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_server_privilege",[ScalarType "name",ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_server_privilege",[ScalarType "name",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_server_privilege",[ScalarType "oid",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_server_privilege",[ScalarType "oid",ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_server_privilege",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_server_privilege",[ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_table_privilege",[ScalarType "oid",ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_table_privilege",[ScalarType "oid",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_table_privilege",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_table_privilege",[ScalarType "name",ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_table_privilege",[ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_table_privilege",[ScalarType "name",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_tablespace_privilege",[ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_tablespace_privilege",[ScalarType "name",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_tablespace_privilege",[ScalarType "name",ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_tablespace_privilege",[ScalarType "oid",ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("has_tablespace_privilege",[ScalarType "oid",ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("has_tablespace_privilege",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("hash_aclitem",[ScalarType "aclitem"],ScalarType "integer"),
    ("hash_numeric",[ScalarType "numeric"],ScalarType "integer"),
    ("hashbeginscan",[ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("hashbpchar",[ScalarType "character"],ScalarType "integer"),
    ("hashbuild",[ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("hashbulkdelete",[ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("hashchar",[ScalarType "\"char\""],ScalarType "integer"),
    ("hashcostestimate",[ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "void"),
    ("hashendscan",[ScalarType "internal"],ScalarType "void"),
    ("hashenum",[ScalarType "anyenum"],ScalarType "integer"),
    ("hashfloat4",[ScalarType "real"],ScalarType "integer"),
    ("hashfloat8",[ScalarType "double precision"],ScalarType "integer"),
    ("hashgetbitmap",[ScalarType "internal",ScalarType "internal"],ScalarType "bigint"),
    ("hashgettuple",[ScalarType "internal",ScalarType "internal"],ScalarType "boolean"),
    ("hashinet",[ScalarType "inet"],ScalarType "integer"),
    ("hashinsert",[ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "boolean"),
    ("hashint2",[ScalarType "smallint"],ScalarType "integer"),
    ("hashint2vector",[ScalarType "int2vector"],ScalarType "integer"),
    ("hashint4",[ScalarType "integer"],ScalarType "integer"),
    ("hashint8",[ScalarType "bigint"],ScalarType "integer"),
    ("hashmacaddr",[ScalarType "macaddr"],ScalarType "integer"),
    ("hashmarkpos",[ScalarType "internal"],ScalarType "void"),
    ("hashname",[ScalarType "name"],ScalarType "integer"),
    ("hashoid",[ScalarType "oid"],ScalarType "integer"),
    ("hashoidvector",[ScalarType "oidvector"],ScalarType "integer"),
    ("hashoptions",[ScalarType "text[]",ScalarType "boolean"],ScalarType "bytea"),
    ("hashrescan",[ScalarType "internal",ScalarType "internal"],ScalarType "void"),
    ("hashrestrpos",[ScalarType "internal"],ScalarType "void"),
    ("hashtext",[ScalarType "text"],ScalarType "integer"),
    ("hashvacuumcleanup",[ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("hashvarlena",[ScalarType "internal"],ScalarType "integer"),
    ("height",[ScalarType "box"],ScalarType "double precision"),
    ("host",[ScalarType "inet"],ScalarType "text"),
    ("hostmask",[ScalarType "inet"],ScalarType "inet"),
    ("iclikejoinsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "smallint",ScalarType "internal"],ScalarType "double precision"),
    ("iclikesel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "integer"],ScalarType "double precision"),
    ("icnlikejoinsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "smallint",ScalarType "internal"],ScalarType "double precision"),
    ("icnlikesel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "integer"],ScalarType "double precision"),
    ("icregexeqjoinsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "smallint",ScalarType "internal"],ScalarType "double precision"),
    ("icregexeqsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "integer"],ScalarType "double precision"),
    ("icregexnejoinsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "smallint",ScalarType "internal"],ScalarType "double precision"),
    ("icregexnesel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "integer"],ScalarType "double precision"),
    ("inet_client_addr",[],ScalarType "inet"),
    ("inet_client_port",[],ScalarType "integer"),
    ("inet_in",[ScalarType "cstring"],ScalarType "inet"),
    ("inet_out",[ScalarType "inet"],ScalarType "cstring"),
    ("inet_recv",[ScalarType "internal"],ScalarType "inet"),
    ("inet_send",[ScalarType "inet"],ScalarType "bytea"),
    ("inet_server_addr",[],ScalarType "inet"),
    ("inet_server_port",[],ScalarType "integer"),
    ("inetand",[ScalarType "inet",ScalarType "inet"],ScalarType "inet"),
    ("inetmi",[ScalarType "inet",ScalarType "inet"],ScalarType "bigint"),
    ("inetmi_int8",[ScalarType "inet",ScalarType "bigint"],ScalarType "inet"),
    ("inetnot",[ScalarType "inet"],ScalarType "inet"),
    ("inetor",[ScalarType "inet",ScalarType "inet"],ScalarType "inet"),
    ("inetpl",[ScalarType "inet",ScalarType "bigint"],ScalarType "inet"),
    ("initcap",[ScalarType "text"],ScalarType "text"),
    ("int2",[ScalarType "bigint"],ScalarType "smallint"),
    ("int2",[ScalarType "real"],ScalarType "smallint"),
    ("int2",[ScalarType "double precision"],ScalarType "smallint"),
    ("int2",[ScalarType "integer"],ScalarType "smallint"),
    ("int2",[ScalarType "numeric"],ScalarType "smallint"),
    ("int24div",[ScalarType "smallint",ScalarType "integer"],ScalarType "integer"),
    ("int24eq",[ScalarType "smallint",ScalarType "integer"],ScalarType "boolean"),
    ("int24ge",[ScalarType "smallint",ScalarType "integer"],ScalarType "boolean"),
    ("int24gt",[ScalarType "smallint",ScalarType "integer"],ScalarType "boolean"),
    ("int24le",[ScalarType "smallint",ScalarType "integer"],ScalarType "boolean"),
    ("int24lt",[ScalarType "smallint",ScalarType "integer"],ScalarType "boolean"),
    ("int24mi",[ScalarType "smallint",ScalarType "integer"],ScalarType "integer"),
    ("int24mul",[ScalarType "smallint",ScalarType "integer"],ScalarType "integer"),
    ("int24ne",[ScalarType "smallint",ScalarType "integer"],ScalarType "boolean"),
    ("int24pl",[ScalarType "smallint",ScalarType "integer"],ScalarType "integer"),
    ("int28div",[ScalarType "smallint",ScalarType "bigint"],ScalarType "bigint"),
    ("int28eq",[ScalarType "smallint",ScalarType "bigint"],ScalarType "boolean"),
    ("int28ge",[ScalarType "smallint",ScalarType "bigint"],ScalarType "boolean"),
    ("int28gt",[ScalarType "smallint",ScalarType "bigint"],ScalarType "boolean"),
    ("int28le",[ScalarType "smallint",ScalarType "bigint"],ScalarType "boolean"),
    ("int28lt",[ScalarType "smallint",ScalarType "bigint"],ScalarType "boolean"),
    ("int28mi",[ScalarType "smallint",ScalarType "bigint"],ScalarType "bigint"),
    ("int28mul",[ScalarType "smallint",ScalarType "bigint"],ScalarType "bigint"),
    ("int28ne",[ScalarType "smallint",ScalarType "bigint"],ScalarType "boolean"),
    ("int28pl",[ScalarType "smallint",ScalarType "bigint"],ScalarType "bigint"),
    ("int2_accum",[ScalarType "numeric[]",ScalarType "smallint"],ScalarType "numeric[]"),
    ("int2_avg_accum",[ScalarType "bigint[]",ScalarType "smallint"],ScalarType "bigint[]"),
    ("int2_mul_cash",[ScalarType "smallint",ScalarType "money"],ScalarType "money"),
    ("int2_sum",[ScalarType "bigint",ScalarType "smallint"],ScalarType "bigint"),
    ("int2abs",[ScalarType "smallint"],ScalarType "smallint"),
    ("int2and",[ScalarType "smallint",ScalarType "smallint"],ScalarType "smallint"),
    ("int2div",[ScalarType "smallint",ScalarType "smallint"],ScalarType "smallint"),
    ("int2eq",[ScalarType "smallint",ScalarType "smallint"],ScalarType "boolean"),
    ("int2ge",[ScalarType "smallint",ScalarType "smallint"],ScalarType "boolean"),
    ("int2gt",[ScalarType "smallint",ScalarType "smallint"],ScalarType "boolean"),
    ("int2in",[ScalarType "cstring"],ScalarType "smallint"),
    ("int2larger",[ScalarType "smallint",ScalarType "smallint"],ScalarType "smallint"),
    ("int2le",[ScalarType "smallint",ScalarType "smallint"],ScalarType "boolean"),
    ("int2lt",[ScalarType "smallint",ScalarType "smallint"],ScalarType "boolean"),
    ("int2mi",[ScalarType "smallint",ScalarType "smallint"],ScalarType "smallint"),
    ("int2mod",[ScalarType "smallint",ScalarType "smallint"],ScalarType "smallint"),
    ("int2mul",[ScalarType "smallint",ScalarType "smallint"],ScalarType "smallint"),
    ("int2ne",[ScalarType "smallint",ScalarType "smallint"],ScalarType "boolean"),
    ("int2not",[ScalarType "smallint"],ScalarType "smallint"),
    ("int2or",[ScalarType "smallint",ScalarType "smallint"],ScalarType "smallint"),
    ("int2out",[ScalarType "smallint"],ScalarType "cstring"),
    ("int2pl",[ScalarType "smallint",ScalarType "smallint"],ScalarType "smallint"),
    ("int2recv",[ScalarType "internal"],ScalarType "smallint"),
    ("int2send",[ScalarType "smallint"],ScalarType "bytea"),
    ("int2shl",[ScalarType "smallint",ScalarType "integer"],ScalarType "smallint"),
    ("int2shr",[ScalarType "smallint",ScalarType "integer"],ScalarType "smallint"),
    ("int2smaller",[ScalarType "smallint",ScalarType "smallint"],ScalarType "smallint"),
    ("int2um",[ScalarType "smallint"],ScalarType "smallint"),
    ("int2up",[ScalarType "smallint"],ScalarType "smallint"),
    ("int2vectoreq",[ScalarType "int2vector",ScalarType "int2vector"],ScalarType "boolean"),
    ("int2vectorin",[ScalarType "cstring"],ScalarType "int2vector"),
    ("int2vectorout",[ScalarType "int2vector"],ScalarType "cstring"),
    ("int2vectorrecv",[ScalarType "internal"],ScalarType "int2vector"),
    ("int2vectorsend",[ScalarType "int2vector"],ScalarType "bytea"),
    ("int2xor",[ScalarType "smallint",ScalarType "smallint"],ScalarType "smallint"),
    ("int4",[ScalarType "\"char\""],ScalarType "integer"),
    ("int4",[ScalarType "boolean"],ScalarType "integer"),
    ("int4",[ScalarType "bigint"],ScalarType "integer"),
    ("int4",[ScalarType "real"],ScalarType "integer"),
    ("int4",[ScalarType "double precision"],ScalarType "integer"),
    ("int4",[ScalarType "smallint"],ScalarType "integer"),
    ("int4",[ScalarType "bit"],ScalarType "integer"),
    ("int4",[ScalarType "numeric"],ScalarType "integer"),
    ("int42div",[ScalarType "integer",ScalarType "smallint"],ScalarType "integer"),
    ("int42eq",[ScalarType "integer",ScalarType "smallint"],ScalarType "boolean"),
    ("int42ge",[ScalarType "integer",ScalarType "smallint"],ScalarType "boolean"),
    ("int42gt",[ScalarType "integer",ScalarType "smallint"],ScalarType "boolean"),
    ("int42le",[ScalarType "integer",ScalarType "smallint"],ScalarType "boolean"),
    ("int42lt",[ScalarType "integer",ScalarType "smallint"],ScalarType "boolean"),
    ("int42mi",[ScalarType "integer",ScalarType "smallint"],ScalarType "integer"),
    ("int42mul",[ScalarType "integer",ScalarType "smallint"],ScalarType "integer"),
    ("int42ne",[ScalarType "integer",ScalarType "smallint"],ScalarType "boolean"),
    ("int42pl",[ScalarType "integer",ScalarType "smallint"],ScalarType "integer"),
    ("int48div",[ScalarType "integer",ScalarType "bigint"],ScalarType "bigint"),
    ("int48eq",[ScalarType "integer",ScalarType "bigint"],ScalarType "boolean"),
    ("int48ge",[ScalarType "integer",ScalarType "bigint"],ScalarType "boolean"),
    ("int48gt",[ScalarType "integer",ScalarType "bigint"],ScalarType "boolean"),
    ("int48le",[ScalarType "integer",ScalarType "bigint"],ScalarType "boolean"),
    ("int48lt",[ScalarType "integer",ScalarType "bigint"],ScalarType "boolean"),
    ("int48mi",[ScalarType "integer",ScalarType "bigint"],ScalarType "bigint"),
    ("int48mul",[ScalarType "integer",ScalarType "bigint"],ScalarType "bigint"),
    ("int48ne",[ScalarType "integer",ScalarType "bigint"],ScalarType "boolean"),
    ("int48pl",[ScalarType "integer",ScalarType "bigint"],ScalarType "bigint"),
    ("int4_accum",[ScalarType "numeric[]",ScalarType "integer"],ScalarType "numeric[]"),
    ("int4_avg_accum",[ScalarType "bigint[]",ScalarType "integer"],ScalarType "bigint[]"),
    ("int4_mul_cash",[ScalarType "integer",ScalarType "money"],ScalarType "money"),
    ("int4_sum",[ScalarType "bigint",ScalarType "integer"],ScalarType "bigint"),
    ("int4abs",[ScalarType "integer"],ScalarType "integer"),
    ("int4and",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("int4div",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("int4eq",[ScalarType "integer",ScalarType "integer"],ScalarType "boolean"),
    ("int4ge",[ScalarType "integer",ScalarType "integer"],ScalarType "boolean"),
    ("int4gt",[ScalarType "integer",ScalarType "integer"],ScalarType "boolean"),
    ("int4in",[ScalarType "cstring"],ScalarType "integer"),
    ("int4inc",[ScalarType "integer"],ScalarType "integer"),
    ("int4larger",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("int4le",[ScalarType "integer",ScalarType "integer"],ScalarType "boolean"),
    ("int4lt",[ScalarType "integer",ScalarType "integer"],ScalarType "boolean"),
    ("int4mi",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("int4mod",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("int4mul",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("int4ne",[ScalarType "integer",ScalarType "integer"],ScalarType "boolean"),
    ("int4not",[ScalarType "integer"],ScalarType "integer"),
    ("int4or",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("int4out",[ScalarType "integer"],ScalarType "cstring"),
    ("int4pl",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("int4recv",[ScalarType "internal"],ScalarType "integer"),
    ("int4send",[ScalarType "integer"],ScalarType "bytea"),
    ("int4shl",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("int4shr",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("int4smaller",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("int4um",[ScalarType "integer"],ScalarType "integer"),
    ("int4up",[ScalarType "integer"],ScalarType "integer"),
    ("int4xor",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("int8",[ScalarType "integer"],ScalarType "bigint"),
    ("int8",[ScalarType "oid"],ScalarType "bigint"),
    ("int8",[ScalarType "bit"],ScalarType "bigint"),
    ("int8",[ScalarType "numeric"],ScalarType "bigint"),
    ("int8",[ScalarType "double precision"],ScalarType "bigint"),
    ("int8",[ScalarType "smallint"],ScalarType "bigint"),
    ("int8",[ScalarType "real"],ScalarType "bigint"),
    ("int82div",[ScalarType "bigint",ScalarType "smallint"],ScalarType "bigint"),
    ("int82eq",[ScalarType "bigint",ScalarType "smallint"],ScalarType "boolean"),
    ("int82ge",[ScalarType "bigint",ScalarType "smallint"],ScalarType "boolean"),
    ("int82gt",[ScalarType "bigint",ScalarType "smallint"],ScalarType "boolean"),
    ("int82le",[ScalarType "bigint",ScalarType "smallint"],ScalarType "boolean"),
    ("int82lt",[ScalarType "bigint",ScalarType "smallint"],ScalarType "boolean"),
    ("int82mi",[ScalarType "bigint",ScalarType "smallint"],ScalarType "bigint"),
    ("int82mul",[ScalarType "bigint",ScalarType "smallint"],ScalarType "bigint"),
    ("int82ne",[ScalarType "bigint",ScalarType "smallint"],ScalarType "boolean"),
    ("int82pl",[ScalarType "bigint",ScalarType "smallint"],ScalarType "bigint"),
    ("int84div",[ScalarType "bigint",ScalarType "integer"],ScalarType "bigint"),
    ("int84eq",[ScalarType "bigint",ScalarType "integer"],ScalarType "boolean"),
    ("int84ge",[ScalarType "bigint",ScalarType "integer"],ScalarType "boolean"),
    ("int84gt",[ScalarType "bigint",ScalarType "integer"],ScalarType "boolean"),
    ("int84le",[ScalarType "bigint",ScalarType "integer"],ScalarType "boolean"),
    ("int84lt",[ScalarType "bigint",ScalarType "integer"],ScalarType "boolean"),
    ("int84mi",[ScalarType "bigint",ScalarType "integer"],ScalarType "bigint"),
    ("int84mul",[ScalarType "bigint",ScalarType "integer"],ScalarType "bigint"),
    ("int84ne",[ScalarType "bigint",ScalarType "integer"],ScalarType "boolean"),
    ("int84pl",[ScalarType "bigint",ScalarType "integer"],ScalarType "bigint"),
    ("int8_accum",[ScalarType "numeric[]",ScalarType "bigint"],ScalarType "numeric[]"),
    ("int8_avg",[ScalarType "bigint[]"],ScalarType "numeric"),
    ("int8_avg_accum",[ScalarType "numeric[]",ScalarType "bigint"],ScalarType "numeric[]"),
    ("int8_sum",[ScalarType "numeric",ScalarType "bigint"],ScalarType "numeric"),
    ("int8abs",[ScalarType "bigint"],ScalarType "bigint"),
    ("int8and",[ScalarType "bigint",ScalarType "bigint"],ScalarType "bigint"),
    ("int8div",[ScalarType "bigint",ScalarType "bigint"],ScalarType "bigint"),
    ("int8eq",[ScalarType "bigint",ScalarType "bigint"],ScalarType "boolean"),
    ("int8ge",[ScalarType "bigint",ScalarType "bigint"],ScalarType "boolean"),
    ("int8gt",[ScalarType "bigint",ScalarType "bigint"],ScalarType "boolean"),
    ("int8in",[ScalarType "cstring"],ScalarType "bigint"),
    ("int8inc",[ScalarType "bigint"],ScalarType "bigint"),
    ("int8inc_any",[ScalarType "bigint",ScalarType "\"any\""],ScalarType "bigint"),
    ("int8inc_float8_float8",[ScalarType "bigint",ScalarType "double precision",ScalarType "double precision"],ScalarType "bigint"),
    ("int8larger",[ScalarType "bigint",ScalarType "bigint"],ScalarType "bigint"),
    ("int8le",[ScalarType "bigint",ScalarType "bigint"],ScalarType "boolean"),
    ("int8lt",[ScalarType "bigint",ScalarType "bigint"],ScalarType "boolean"),
    ("int8mi",[ScalarType "bigint",ScalarType "bigint"],ScalarType "bigint"),
    ("int8mod",[ScalarType "bigint",ScalarType "bigint"],ScalarType "bigint"),
    ("int8mul",[ScalarType "bigint",ScalarType "bigint"],ScalarType "bigint"),
    ("int8ne",[ScalarType "bigint",ScalarType "bigint"],ScalarType "boolean"),
    ("int8not",[ScalarType "bigint"],ScalarType "bigint"),
    ("int8or",[ScalarType "bigint",ScalarType "bigint"],ScalarType "bigint"),
    ("int8out",[ScalarType "bigint"],ScalarType "cstring"),
    ("int8pl",[ScalarType "bigint",ScalarType "bigint"],ScalarType "bigint"),
    ("int8pl_inet",[ScalarType "bigint",ScalarType "inet"],ScalarType "inet"),
    ("int8recv",[ScalarType "internal"],ScalarType "bigint"),
    ("int8send",[ScalarType "bigint"],ScalarType "bytea"),
    ("int8shl",[ScalarType "bigint",ScalarType "integer"],ScalarType "bigint"),
    ("int8shr",[ScalarType "bigint",ScalarType "integer"],ScalarType "bigint"),
    ("int8smaller",[ScalarType "bigint",ScalarType "bigint"],ScalarType "bigint"),
    ("int8um",[ScalarType "bigint"],ScalarType "bigint"),
    ("int8up",[ScalarType "bigint"],ScalarType "bigint"),
    ("int8xor",[ScalarType "bigint",ScalarType "bigint"],ScalarType "bigint"),
    ("integer_pl_date",[ScalarType "integer",ScalarType "date"],ScalarType "date"),
    ("inter_lb",[ScalarType "line",ScalarType "box"],ScalarType "boolean"),
    ("inter_sb",[ScalarType "lseg",ScalarType "box"],ScalarType "boolean"),
    ("inter_sl",[ScalarType "lseg",ScalarType "line"],ScalarType "boolean"),
    ("internal_in",[ScalarType "cstring"],ScalarType "internal"),
    ("internal_out",[ScalarType "internal"],ScalarType "cstring"),
    ("interval",[ScalarType "reltime"],ScalarType "interval"),
    ("interval",[ScalarType "time without time zone"],ScalarType "interval"),
    ("interval",[ScalarType "interval",ScalarType "integer"],ScalarType "interval"),
    ("interval_accum",[ScalarType "interval[]",ScalarType "interval"],ScalarType "interval[]"),
    ("interval_avg",[ScalarType "interval[]"],ScalarType "interval"),
    ("interval_cmp",[ScalarType "interval",ScalarType "interval"],ScalarType "integer"),
    ("interval_div",[ScalarType "interval",ScalarType "double precision"],ScalarType "interval"),
    ("interval_eq",[ScalarType "interval",ScalarType "interval"],ScalarType "boolean"),
    ("interval_ge",[ScalarType "interval",ScalarType "interval"],ScalarType "boolean"),
    ("interval_gt",[ScalarType "interval",ScalarType "interval"],ScalarType "boolean"),
    ("interval_hash",[ScalarType "interval"],ScalarType "integer"),
    ("interval_in",[ScalarType "cstring",ScalarType "oid",ScalarType "integer"],ScalarType "interval"),
    ("interval_larger",[ScalarType "interval",ScalarType "interval"],ScalarType "interval"),
    ("interval_le",[ScalarType "interval",ScalarType "interval"],ScalarType "boolean"),
    ("interval_lt",[ScalarType "interval",ScalarType "interval"],ScalarType "boolean"),
    ("interval_mi",[ScalarType "interval",ScalarType "interval"],ScalarType "interval"),
    ("interval_mul",[ScalarType "interval",ScalarType "double precision"],ScalarType "interval"),
    ("interval_ne",[ScalarType "interval",ScalarType "interval"],ScalarType "boolean"),
    ("interval_out",[ScalarType "interval"],ScalarType "cstring"),
    ("interval_pl",[ScalarType "interval",ScalarType "interval"],ScalarType "interval"),
    ("interval_pl_date",[ScalarType "interval",ScalarType "date"],ScalarType "timestamp without time zone"),
    ("interval_pl_time",[ScalarType "interval",ScalarType "time without time zone"],ScalarType "time without time zone"),
    ("interval_pl_timestamp",[ScalarType "interval",ScalarType "timestamp without time zone"],ScalarType "timestamp without time zone"),
    ("interval_pl_timestamptz",[ScalarType "interval",ScalarType "timestamp with time zone"],ScalarType "timestamp with time zone"),
    ("interval_pl_timetz",[ScalarType "interval",ScalarType "time with time zone"],ScalarType "time with time zone"),
    ("interval_recv",[ScalarType "internal",ScalarType "oid",ScalarType "integer"],ScalarType "interval"),
    ("interval_send",[ScalarType "interval"],ScalarType "bytea"),
    ("interval_smaller",[ScalarType "interval",ScalarType "interval"],ScalarType "interval"),
    ("interval_um",[ScalarType "interval"],ScalarType "interval"),
    ("intervaltypmodin",[ScalarType "cstring[]"],ScalarType "integer"),
    ("intervaltypmodout",[ScalarType "integer"],ScalarType "cstring"),
    ("intinterval",[ScalarType "abstime",ScalarType "tinterval"],ScalarType "boolean"),
    ("isclosed",[ScalarType "path"],ScalarType "boolean"),
    ("isfinite",[ScalarType "abstime"],ScalarType "boolean"),
    ("isfinite",[ScalarType "interval"],ScalarType "boolean"),
    ("isfinite",[ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("isfinite",[ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("isfinite",[ScalarType "date"],ScalarType "boolean"),
    ("ishorizontal",[ScalarType "lseg"],ScalarType "boolean"),
    ("ishorizontal",[ScalarType "point",ScalarType "point"],ScalarType "boolean"),
    ("ishorizontal",[ScalarType "line"],ScalarType "boolean"),
    ("iso8859_1_to_utf8",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("iso8859_to_utf8",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("iso_to_koi8r",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("iso_to_mic",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("iso_to_win1251",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("iso_to_win866",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("isopen",[ScalarType "path"],ScalarType "boolean"),
    ("isparallel",[ScalarType "line",ScalarType "line"],ScalarType "boolean"),
    ("isparallel",[ScalarType "lseg",ScalarType "lseg"],ScalarType "boolean"),
    ("isperp",[ScalarType "line",ScalarType "line"],ScalarType "boolean"),
    ("isperp",[ScalarType "lseg",ScalarType "lseg"],ScalarType "boolean"),
    ("isvertical",[ScalarType "lseg"],ScalarType "boolean"),
    ("isvertical",[ScalarType "line"],ScalarType "boolean"),
    ("isvertical",[ScalarType "point",ScalarType "point"],ScalarType "boolean"),
    ("johab_to_utf8",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("justify_days",[ScalarType "interval"],ScalarType "interval"),
    ("justify_hours",[ScalarType "interval"],ScalarType "interval"),
    ("justify_interval",[ScalarType "interval"],ScalarType "interval"),
    ("koi8r_to_iso",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("koi8r_to_mic",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("koi8r_to_utf8",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("koi8r_to_win1251",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("koi8r_to_win866",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("koi8u_to_utf8",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("language_handler_in",[ScalarType "cstring"],ScalarType "language_handler"),
    ("language_handler_out",[ScalarType "language_handler"],ScalarType "cstring"),
    ("lastval",[],ScalarType "bigint"),
    ("latin1_to_mic",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("latin2_to_mic",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("latin2_to_win1250",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("latin3_to_mic",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("latin4_to_mic",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("length",[ScalarType "tsvector"],ScalarType "integer"),
    ("length",[ScalarType "text"],ScalarType "integer"),
    ("length",[ScalarType "lseg"],ScalarType "double precision"),
    ("length",[ScalarType "character"],ScalarType "integer"),
    ("length",[ScalarType "path"],ScalarType "double precision"),
    ("length",[ScalarType "bytea",ScalarType "name"],ScalarType "integer"),
    ("length",[ScalarType "bit"],ScalarType "integer"),
    ("length",[ScalarType "bytea"],ScalarType "integer"),
    ("like",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("like",[ScalarType "bytea",ScalarType "bytea"],ScalarType "boolean"),
    ("like",[ScalarType "name",ScalarType "text"],ScalarType "boolean"),
    ("like_escape",[ScalarType "bytea",ScalarType "bytea"],ScalarType "bytea"),
    ("like_escape",[ScalarType "text",ScalarType "text"],ScalarType "text"),
    ("likejoinsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "smallint",ScalarType "internal"],ScalarType "double precision"),
    ("likesel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "integer"],ScalarType "double precision"),
    ("line",[ScalarType "point",ScalarType "point"],ScalarType "line"),
    ("line_distance",[ScalarType "line",ScalarType "line"],ScalarType "double precision"),
    ("line_eq",[ScalarType "line",ScalarType "line"],ScalarType "boolean"),
    ("line_horizontal",[ScalarType "line"],ScalarType "boolean"),
    ("line_in",[ScalarType "cstring"],ScalarType "line"),
    ("line_interpt",[ScalarType "line",ScalarType "line"],ScalarType "point"),
    ("line_intersect",[ScalarType "line",ScalarType "line"],ScalarType "boolean"),
    ("line_out",[ScalarType "line"],ScalarType "cstring"),
    ("line_parallel",[ScalarType "line",ScalarType "line"],ScalarType "boolean"),
    ("line_perp",[ScalarType "line",ScalarType "line"],ScalarType "boolean"),
    ("line_recv",[ScalarType "internal"],ScalarType "line"),
    ("line_send",[ScalarType "line"],ScalarType "bytea"),
    ("line_vertical",[ScalarType "line"],ScalarType "boolean"),
    ("ln",[ScalarType "numeric"],ScalarType "numeric"),
    ("ln",[ScalarType "double precision"],ScalarType "double precision"),
    ("lo_close",[ScalarType "integer"],ScalarType "integer"),
    ("lo_creat",[ScalarType "integer"],ScalarType "oid"),
    ("lo_create",[ScalarType "oid"],ScalarType "oid"),
    ("lo_export",[ScalarType "oid",ScalarType "text"],ScalarType "integer"),
    ("lo_import",[ScalarType "text"],ScalarType "oid"),
    ("lo_import",[ScalarType "text",ScalarType "oid"],ScalarType "oid"),
    ("lo_lseek",[ScalarType "integer",ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("lo_open",[ScalarType "oid",ScalarType "integer"],ScalarType "integer"),
    ("lo_tell",[ScalarType "integer"],ScalarType "integer"),
    ("lo_truncate",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("lo_unlink",[ScalarType "oid"],ScalarType "integer"),
    ("log",[ScalarType "double precision"],ScalarType "double precision"),
    ("log",[ScalarType "numeric"],ScalarType "numeric"),
    ("log",[ScalarType "numeric",ScalarType "numeric"],ScalarType "numeric"),
    ("loread",[ScalarType "integer",ScalarType "integer"],ScalarType "bytea"),
    ("lower",[ScalarType "text"],ScalarType "text"),
    ("lowrite",[ScalarType "integer",ScalarType "bytea"],ScalarType "integer"),
    ("lpad",[ScalarType "text",ScalarType "integer",ScalarType "text"],ScalarType "text"),
    ("lpad",[ScalarType "text",ScalarType "integer"],ScalarType "text"),
    ("lseg",[ScalarType "box"],ScalarType "lseg"),
    ("lseg",[ScalarType "point",ScalarType "point"],ScalarType "lseg"),
    ("lseg_center",[ScalarType "lseg"],ScalarType "point"),
    ("lseg_distance",[ScalarType "lseg",ScalarType "lseg"],ScalarType "double precision"),
    ("lseg_eq",[ScalarType "lseg",ScalarType "lseg"],ScalarType "boolean"),
    ("lseg_ge",[ScalarType "lseg",ScalarType "lseg"],ScalarType "boolean"),
    ("lseg_gt",[ScalarType "lseg",ScalarType "lseg"],ScalarType "boolean"),
    ("lseg_horizontal",[ScalarType "lseg"],ScalarType "boolean"),
    ("lseg_in",[ScalarType "cstring"],ScalarType "lseg"),
    ("lseg_interpt",[ScalarType "lseg",ScalarType "lseg"],ScalarType "point"),
    ("lseg_intersect",[ScalarType "lseg",ScalarType "lseg"],ScalarType "boolean"),
    ("lseg_le",[ScalarType "lseg",ScalarType "lseg"],ScalarType "boolean"),
    ("lseg_length",[ScalarType "lseg"],ScalarType "double precision"),
    ("lseg_lt",[ScalarType "lseg",ScalarType "lseg"],ScalarType "boolean"),
    ("lseg_ne",[ScalarType "lseg",ScalarType "lseg"],ScalarType "boolean"),
    ("lseg_out",[ScalarType "lseg"],ScalarType "cstring"),
    ("lseg_parallel",[ScalarType "lseg",ScalarType "lseg"],ScalarType "boolean"),
    ("lseg_perp",[ScalarType "lseg",ScalarType "lseg"],ScalarType "boolean"),
    ("lseg_recv",[ScalarType "internal"],ScalarType "lseg"),
    ("lseg_send",[ScalarType "lseg"],ScalarType "bytea"),
    ("lseg_vertical",[ScalarType "lseg"],ScalarType "boolean"),
    ("ltrim",[ScalarType "text",ScalarType "text"],ScalarType "text"),
    ("ltrim",[ScalarType "text"],ScalarType "text"),
    ("macaddr_cmp",[ScalarType "macaddr",ScalarType "macaddr"],ScalarType "integer"),
    ("macaddr_eq",[ScalarType "macaddr",ScalarType "macaddr"],ScalarType "boolean"),
    ("macaddr_ge",[ScalarType "macaddr",ScalarType "macaddr"],ScalarType "boolean"),
    ("macaddr_gt",[ScalarType "macaddr",ScalarType "macaddr"],ScalarType "boolean"),
    ("macaddr_in",[ScalarType "cstring"],ScalarType "macaddr"),
    ("macaddr_le",[ScalarType "macaddr",ScalarType "macaddr"],ScalarType "boolean"),
    ("macaddr_lt",[ScalarType "macaddr",ScalarType "macaddr"],ScalarType "boolean"),
    ("macaddr_ne",[ScalarType "macaddr",ScalarType "macaddr"],ScalarType "boolean"),
    ("macaddr_out",[ScalarType "macaddr"],ScalarType "cstring"),
    ("macaddr_recv",[ScalarType "internal"],ScalarType "macaddr"),
    ("macaddr_send",[ScalarType "macaddr"],ScalarType "bytea"),
    ("makeaclitem",[ScalarType "oid",ScalarType "oid",ScalarType "text",ScalarType "boolean"],ScalarType "aclitem"),
    ("masklen",[ScalarType "inet"],ScalarType "integer"),
    ("md5",[ScalarType "bytea"],ScalarType "text"),
    ("md5",[ScalarType "text"],ScalarType "text"),
    ("mic_to_ascii",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("mic_to_big5",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("mic_to_euc_cn",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("mic_to_euc_jp",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("mic_to_euc_kr",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("mic_to_euc_tw",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("mic_to_iso",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("mic_to_koi8r",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("mic_to_latin1",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("mic_to_latin2",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("mic_to_latin3",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("mic_to_latin4",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("mic_to_sjis",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("mic_to_win1250",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("mic_to_win1251",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("mic_to_win866",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("mktinterval",[ScalarType "abstime",ScalarType "abstime"],ScalarType "tinterval"),
    ("mod",[ScalarType "bigint",ScalarType "bigint"],ScalarType "bigint"),
    ("mod",[ScalarType "numeric",ScalarType "numeric"],ScalarType "numeric"),
    ("mod",[ScalarType "integer",ScalarType "integer"],ScalarType "integer"),
    ("mod",[ScalarType "smallint",ScalarType "smallint"],ScalarType "smallint"),
    ("mul_d_interval",[ScalarType "double precision",ScalarType "interval"],ScalarType "interval"),
    ("name",[ScalarType "character"],ScalarType "name"),
    ("name",[ScalarType "text"],ScalarType "name"),
    ("name",[ScalarType "character varying"],ScalarType "name"),
    ("nameeq",[ScalarType "name",ScalarType "name"],ScalarType "boolean"),
    ("namege",[ScalarType "name",ScalarType "name"],ScalarType "boolean"),
    ("namegt",[ScalarType "name",ScalarType "name"],ScalarType "boolean"),
    ("nameiclike",[ScalarType "name",ScalarType "text"],ScalarType "boolean"),
    ("nameicnlike",[ScalarType "name",ScalarType "text"],ScalarType "boolean"),
    ("nameicregexeq",[ScalarType "name",ScalarType "text"],ScalarType "boolean"),
    ("nameicregexne",[ScalarType "name",ScalarType "text"],ScalarType "boolean"),
    ("namein",[ScalarType "cstring"],ScalarType "name"),
    ("namele",[ScalarType "name",ScalarType "name"],ScalarType "boolean"),
    ("namelike",[ScalarType "name",ScalarType "text"],ScalarType "boolean"),
    ("namelt",[ScalarType "name",ScalarType "name"],ScalarType "boolean"),
    ("namene",[ScalarType "name",ScalarType "name"],ScalarType "boolean"),
    ("namenlike",[ScalarType "name",ScalarType "text"],ScalarType "boolean"),
    ("nameout",[ScalarType "name"],ScalarType "cstring"),
    ("namerecv",[ScalarType "internal"],ScalarType "name"),
    ("nameregexeq",[ScalarType "name",ScalarType "text"],ScalarType "boolean"),
    ("nameregexne",[ScalarType "name",ScalarType "text"],ScalarType "boolean"),
    ("namesend",[ScalarType "name"],ScalarType "bytea"),
    ("neqjoinsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "smallint",ScalarType "internal"],ScalarType "double precision"),
    ("neqsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "integer"],ScalarType "double precision"),
    ("netmask",[ScalarType "inet"],ScalarType "inet"),
    ("network",[ScalarType "inet"],ScalarType "cidr"),
    ("network_cmp",[ScalarType "inet",ScalarType "inet"],ScalarType "integer"),
    ("network_eq",[ScalarType "inet",ScalarType "inet"],ScalarType "boolean"),
    ("network_ge",[ScalarType "inet",ScalarType "inet"],ScalarType "boolean"),
    ("network_gt",[ScalarType "inet",ScalarType "inet"],ScalarType "boolean"),
    ("network_le",[ScalarType "inet",ScalarType "inet"],ScalarType "boolean"),
    ("network_lt",[ScalarType "inet",ScalarType "inet"],ScalarType "boolean"),
    ("network_ne",[ScalarType "inet",ScalarType "inet"],ScalarType "boolean"),
    ("network_sub",[ScalarType "inet",ScalarType "inet"],ScalarType "boolean"),
    ("network_subeq",[ScalarType "inet",ScalarType "inet"],ScalarType "boolean"),
    ("network_sup",[ScalarType "inet",ScalarType "inet"],ScalarType "boolean"),
    ("network_supeq",[ScalarType "inet",ScalarType "inet"],ScalarType "boolean"),
    ("nextval",[ScalarType "regclass"],ScalarType "bigint"),
    ("nlikejoinsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "smallint",ScalarType "internal"],ScalarType "double precision"),
    ("nlikesel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "integer"],ScalarType "double precision"),
    ("notlike",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("notlike",[ScalarType "name",ScalarType "text"],ScalarType "boolean"),
    ("notlike",[ScalarType "bytea",ScalarType "bytea"],ScalarType "boolean"),
    ("now",[],ScalarType "timestamp with time zone"),
    ("npoints",[ScalarType "path"],ScalarType "integer"),
    ("npoints",[ScalarType "polygon"],ScalarType "integer"),
    ("numeric",[ScalarType "integer"],ScalarType "numeric"),
    ("numeric",[ScalarType "bigint"],ScalarType "numeric"),
    ("numeric",[ScalarType "numeric",ScalarType "integer"],ScalarType "numeric"),
    ("numeric",[ScalarType "double precision"],ScalarType "numeric"),
    ("numeric",[ScalarType "smallint"],ScalarType "numeric"),
    ("numeric",[ScalarType "real"],ScalarType "numeric"),
    ("numeric_abs",[ScalarType "numeric"],ScalarType "numeric"),
    ("numeric_accum",[ScalarType "numeric[]",ScalarType "numeric"],ScalarType "numeric[]"),
    ("numeric_add",[ScalarType "numeric",ScalarType "numeric"],ScalarType "numeric"),
    ("numeric_avg",[ScalarType "numeric[]"],ScalarType "numeric"),
    ("numeric_avg_accum",[ScalarType "numeric[]",ScalarType "numeric"],ScalarType "numeric[]"),
    ("numeric_cmp",[ScalarType "numeric",ScalarType "numeric"],ScalarType "integer"),
    ("numeric_div",[ScalarType "numeric",ScalarType "numeric"],ScalarType "numeric"),
    ("numeric_div_trunc",[ScalarType "numeric",ScalarType "numeric"],ScalarType "numeric"),
    ("numeric_eq",[ScalarType "numeric",ScalarType "numeric"],ScalarType "boolean"),
    ("numeric_exp",[ScalarType "numeric"],ScalarType "numeric"),
    ("numeric_fac",[ScalarType "bigint"],ScalarType "numeric"),
    ("numeric_ge",[ScalarType "numeric",ScalarType "numeric"],ScalarType "boolean"),
    ("numeric_gt",[ScalarType "numeric",ScalarType "numeric"],ScalarType "boolean"),
    ("numeric_in",[ScalarType "cstring",ScalarType "oid",ScalarType "integer"],ScalarType "numeric"),
    ("numeric_inc",[ScalarType "numeric"],ScalarType "numeric"),
    ("numeric_larger",[ScalarType "numeric",ScalarType "numeric"],ScalarType "numeric"),
    ("numeric_le",[ScalarType "numeric",ScalarType "numeric"],ScalarType "boolean"),
    ("numeric_ln",[ScalarType "numeric"],ScalarType "numeric"),
    ("numeric_log",[ScalarType "numeric",ScalarType "numeric"],ScalarType "numeric"),
    ("numeric_lt",[ScalarType "numeric",ScalarType "numeric"],ScalarType "boolean"),
    ("numeric_mod",[ScalarType "numeric",ScalarType "numeric"],ScalarType "numeric"),
    ("numeric_mul",[ScalarType "numeric",ScalarType "numeric"],ScalarType "numeric"),
    ("numeric_ne",[ScalarType "numeric",ScalarType "numeric"],ScalarType "boolean"),
    ("numeric_out",[ScalarType "numeric"],ScalarType "cstring"),
    ("numeric_power",[ScalarType "numeric",ScalarType "numeric"],ScalarType "numeric"),
    ("numeric_recv",[ScalarType "internal",ScalarType "oid",ScalarType "integer"],ScalarType "numeric"),
    ("numeric_send",[ScalarType "numeric"],ScalarType "bytea"),
    ("numeric_smaller",[ScalarType "numeric",ScalarType "numeric"],ScalarType "numeric"),
    ("numeric_sqrt",[ScalarType "numeric"],ScalarType "numeric"),
    ("numeric_stddev_pop",[ScalarType "numeric[]"],ScalarType "numeric"),
    ("numeric_stddev_samp",[ScalarType "numeric[]"],ScalarType "numeric"),
    ("numeric_sub",[ScalarType "numeric",ScalarType "numeric"],ScalarType "numeric"),
    ("numeric_uminus",[ScalarType "numeric"],ScalarType "numeric"),
    ("numeric_uplus",[ScalarType "numeric"],ScalarType "numeric"),
    ("numeric_var_pop",[ScalarType "numeric[]"],ScalarType "numeric"),
    ("numeric_var_samp",[ScalarType "numeric[]"],ScalarType "numeric"),
    ("numerictypmodin",[ScalarType "cstring[]"],ScalarType "integer"),
    ("numerictypmodout",[ScalarType "integer"],ScalarType "cstring"),
    ("numnode",[ScalarType "tsquery"],ScalarType "integer"),
    ("obj_description",[ScalarType "oid"],ScalarType "text"),
    ("obj_description",[ScalarType "oid",ScalarType "name"],ScalarType "text"),
    ("octet_length",[ScalarType "bytea"],ScalarType "integer"),
    ("octet_length",[ScalarType "text"],ScalarType "integer"),
    ("octet_length",[ScalarType "character"],ScalarType "integer"),
    ("octet_length",[ScalarType "bit"],ScalarType "integer"),
    ("oid",[ScalarType "bigint"],ScalarType "oid"),
    ("oideq",[ScalarType "oid",ScalarType "oid"],ScalarType "boolean"),
    ("oidge",[ScalarType "oid",ScalarType "oid"],ScalarType "boolean"),
    ("oidgt",[ScalarType "oid",ScalarType "oid"],ScalarType "boolean"),
    ("oidin",[ScalarType "cstring"],ScalarType "oid"),
    ("oidlarger",[ScalarType "oid",ScalarType "oid"],ScalarType "oid"),
    ("oidle",[ScalarType "oid",ScalarType "oid"],ScalarType "boolean"),
    ("oidlt",[ScalarType "oid",ScalarType "oid"],ScalarType "boolean"),
    ("oidne",[ScalarType "oid",ScalarType "oid"],ScalarType "boolean"),
    ("oidout",[ScalarType "oid"],ScalarType "cstring"),
    ("oidrecv",[ScalarType "internal"],ScalarType "oid"),
    ("oidsend",[ScalarType "oid"],ScalarType "bytea"),
    ("oidsmaller",[ScalarType "oid",ScalarType "oid"],ScalarType "oid"),
    ("oidvectoreq",[ScalarType "oidvector",ScalarType "oidvector"],ScalarType "boolean"),
    ("oidvectorge",[ScalarType "oidvector",ScalarType "oidvector"],ScalarType "boolean"),
    ("oidvectorgt",[ScalarType "oidvector",ScalarType "oidvector"],ScalarType "boolean"),
    ("oidvectorin",[ScalarType "cstring"],ScalarType "oidvector"),
    ("oidvectorle",[ScalarType "oidvector",ScalarType "oidvector"],ScalarType "boolean"),
    ("oidvectorlt",[ScalarType "oidvector",ScalarType "oidvector"],ScalarType "boolean"),
    ("oidvectorne",[ScalarType "oidvector",ScalarType "oidvector"],ScalarType "boolean"),
    ("oidvectorout",[ScalarType "oidvector"],ScalarType "cstring"),
    ("oidvectorrecv",[ScalarType "internal"],ScalarType "oidvector"),
    ("oidvectorsend",[ScalarType "oidvector"],ScalarType "bytea"),
    ("oidvectortypes",[ScalarType "oidvector"],ScalarType "text"),
    ("on_pb",[ScalarType "point",ScalarType "box"],ScalarType "boolean"),
    ("on_pl",[ScalarType "point",ScalarType "line"],ScalarType "boolean"),
    ("on_ppath",[ScalarType "point",ScalarType "path"],ScalarType "boolean"),
    ("on_ps",[ScalarType "point",ScalarType "lseg"],ScalarType "boolean"),
    ("on_sb",[ScalarType "lseg",ScalarType "box"],ScalarType "boolean"),
    ("on_sl",[ScalarType "lseg",ScalarType "line"],ScalarType "boolean"),
    ("opaque_in",[ScalarType "cstring"],ScalarType "opaque"),
    ("opaque_out",[ScalarType "opaque"],ScalarType "cstring"),
    ("overlaps",[ScalarType "time without time zone",ScalarType "interval",ScalarType "time without time zone",ScalarType "interval"],ScalarType "boolean"),
    ("overlaps",[ScalarType "timestamp without time zone",ScalarType "timestamp without time zone",ScalarType "timestamp without time zone",ScalarType "interval"],ScalarType "boolean"),
    ("overlaps",[ScalarType "timestamp without time zone",ScalarType "interval",ScalarType "timestamp without time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("overlaps",[ScalarType "time without time zone",ScalarType "interval",ScalarType "time without time zone",ScalarType "time without time zone"],ScalarType "boolean"),
    ("overlaps",[ScalarType "time with time zone",ScalarType "time with time zone",ScalarType "time with time zone",ScalarType "time with time zone"],ScalarType "boolean"),
    ("overlaps",[ScalarType "time without time zone",ScalarType "time without time zone",ScalarType "time without time zone",ScalarType "interval"],ScalarType "boolean"),
    ("overlaps",[ScalarType "timestamp with time zone",ScalarType "interval",ScalarType "timestamp with time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("overlaps",[ScalarType "timestamp without time zone",ScalarType "timestamp without time zone",ScalarType "timestamp without time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("overlaps",[ScalarType "timestamp with time zone",ScalarType "timestamp with time zone",ScalarType "timestamp with time zone",ScalarType "interval"],ScalarType "boolean"),
    ("overlaps",[ScalarType "timestamp with time zone",ScalarType "interval",ScalarType "timestamp with time zone",ScalarType "interval"],ScalarType "boolean"),
    ("overlaps",[ScalarType "timestamp with time zone",ScalarType "timestamp with time zone",ScalarType "timestamp with time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("overlaps",[ScalarType "timestamp without time zone",ScalarType "interval",ScalarType "timestamp without time zone",ScalarType "interval"],ScalarType "boolean"),
    ("overlaps",[ScalarType "time without time zone",ScalarType "time without time zone",ScalarType "time without time zone",ScalarType "time without time zone"],ScalarType "boolean"),
    ("overlay",[ScalarType "text",ScalarType "text",ScalarType "integer"],ScalarType "text"),
    ("overlay",[ScalarType "text",ScalarType "text",ScalarType "integer",ScalarType "integer"],ScalarType "text"),
    ("path",[ScalarType "polygon"],ScalarType "path"),
    ("path_add",[ScalarType "path",ScalarType "path"],ScalarType "path"),
    ("path_add_pt",[ScalarType "path",ScalarType "point"],ScalarType "path"),
    ("path_center",[ScalarType "path"],ScalarType "point"),
    ("path_contain_pt",[ScalarType "path",ScalarType "point"],ScalarType "boolean"),
    ("path_distance",[ScalarType "path",ScalarType "path"],ScalarType "double precision"),
    ("path_div_pt",[ScalarType "path",ScalarType "point"],ScalarType "path"),
    ("path_in",[ScalarType "cstring"],ScalarType "path"),
    ("path_inter",[ScalarType "path",ScalarType "path"],ScalarType "boolean"),
    ("path_length",[ScalarType "path"],ScalarType "double precision"),
    ("path_mul_pt",[ScalarType "path",ScalarType "point"],ScalarType "path"),
    ("path_n_eq",[ScalarType "path",ScalarType "path"],ScalarType "boolean"),
    ("path_n_ge",[ScalarType "path",ScalarType "path"],ScalarType "boolean"),
    ("path_n_gt",[ScalarType "path",ScalarType "path"],ScalarType "boolean"),
    ("path_n_le",[ScalarType "path",ScalarType "path"],ScalarType "boolean"),
    ("path_n_lt",[ScalarType "path",ScalarType "path"],ScalarType "boolean"),
    ("path_npoints",[ScalarType "path"],ScalarType "integer"),
    ("path_out",[ScalarType "path"],ScalarType "cstring"),
    ("path_recv",[ScalarType "internal"],ScalarType "path"),
    ("path_send",[ScalarType "path"],ScalarType "bytea"),
    ("path_sub_pt",[ScalarType "path",ScalarType "point"],ScalarType "path"),
    ("pclose",[ScalarType "path"],ScalarType "path"),
    ("pg_advisory_lock",[ScalarType "bigint"],ScalarType "void"),
    ("pg_advisory_lock",[ScalarType "integer",ScalarType "integer"],ScalarType "void"),
    ("pg_advisory_lock_shared",[ScalarType "integer",ScalarType "integer"],ScalarType "void"),
    ("pg_advisory_lock_shared",[ScalarType "bigint"],ScalarType "void"),
    ("pg_advisory_unlock",[ScalarType "integer",ScalarType "integer"],ScalarType "boolean"),
    ("pg_advisory_unlock",[ScalarType "bigint"],ScalarType "boolean"),
    ("pg_advisory_unlock_all",[],ScalarType "void"),
    ("pg_advisory_unlock_shared",[ScalarType "bigint"],ScalarType "boolean"),
    ("pg_advisory_unlock_shared",[ScalarType "integer",ScalarType "integer"],ScalarType "boolean"),
    ("pg_backend_pid",[],ScalarType "integer"),
    ("pg_cancel_backend",[ScalarType "integer"],ScalarType "boolean"),
    ("pg_char_to_encoding",[ScalarType "name"],ScalarType "integer"),
    ("pg_client_encoding",[],ScalarType "name"),
    ("pg_column_size",[ScalarType "\"any\""],ScalarType "integer"),
    ("pg_conf_load_time",[],ScalarType "timestamp with time zone"),
    ("pg_conversion_is_visible",[ScalarType "oid"],ScalarType "boolean"),
    ("pg_current_xlog_insert_location",[],ScalarType "text"),
    ("pg_current_xlog_location",[],ScalarType "text"),
    ("pg_cursor",[ScalarType "OUT name text",ScalarType "OUT statement text",ScalarType "OUT is_holdable boolean",ScalarType "OUT is_binary boolean",ScalarType "OUT is_scrollable boolean",ScalarType "OUT creation_time timestamp with time zone"],ScalarType "SETOF record"),
    ("pg_database_size",[ScalarType "name"],ScalarType "bigint"),
    ("pg_database_size",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_encoding_to_char",[ScalarType "integer"],ScalarType "name"),
    ("pg_function_is_visible",[ScalarType "oid"],ScalarType "boolean"),
    ("pg_get_constraintdef",[ScalarType "oid",ScalarType "boolean"],ScalarType "text"),
    ("pg_get_constraintdef",[ScalarType "oid"],ScalarType "text"),
    ("pg_get_expr",[ScalarType "text",ScalarType "oid",ScalarType "boolean"],ScalarType "text"),
    ("pg_get_expr",[ScalarType "text",ScalarType "oid"],ScalarType "text"),
    ("pg_get_function_arguments",[ScalarType "oid"],ScalarType "text"),
    ("pg_get_function_identity_arguments",[ScalarType "oid"],ScalarType "text"),
    ("pg_get_function_result",[ScalarType "oid"],ScalarType "text"),
    ("pg_get_functiondef",[ScalarType "oid"],ScalarType "text"),
    ("pg_get_indexdef",[ScalarType "oid"],ScalarType "text"),
    ("pg_get_indexdef",[ScalarType "oid",ScalarType "integer",ScalarType "boolean"],ScalarType "text"),
    ("pg_get_keywords",[ScalarType "OUT word text",ScalarType "OUT catcode \"char\"",ScalarType "OUT catdesc text"],ScalarType "SETOF record"),
    ("pg_get_ruledef",[ScalarType "oid",ScalarType "boolean"],ScalarType "text"),
    ("pg_get_ruledef",[ScalarType "oid"],ScalarType "text"),
    ("pg_get_serial_sequence",[ScalarType "text",ScalarType "text"],ScalarType "text"),
    ("pg_get_triggerdef",[ScalarType "oid"],ScalarType "text"),
    ("pg_get_userbyid",[ScalarType "oid"],ScalarType "name"),
    ("pg_get_viewdef",[ScalarType "oid"],ScalarType "text"),
    ("pg_get_viewdef",[ScalarType "oid",ScalarType "boolean"],ScalarType "text"),
    ("pg_get_viewdef",[ScalarType "text",ScalarType "boolean"],ScalarType "text"),
    ("pg_get_viewdef",[ScalarType "text"],ScalarType "text"),
    ("pg_has_role",[ScalarType "oid",ScalarType "name",ScalarType "text"],ScalarType "boolean"),
    ("pg_has_role",[ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("pg_has_role",[ScalarType "oid",ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("pg_has_role",[ScalarType "name",ScalarType "oid",ScalarType "text"],ScalarType "boolean"),
    ("pg_has_role",[ScalarType "name",ScalarType "name",ScalarType "text"],ScalarType "boolean"),
    ("pg_has_role",[ScalarType "name",ScalarType "text"],ScalarType "boolean"),
    ("pg_is_other_temp_schema",[ScalarType "oid"],ScalarType "boolean"),
    ("pg_lock_status",[ScalarType "OUT locktype text",ScalarType "OUT database oid",ScalarType "OUT relation oid",ScalarType "OUT page integer",ScalarType "OUT tuple smallint",ScalarType "OUT virtualxid text",ScalarType "OUT transactionid xid",ScalarType "OUT classid oid",ScalarType "OUT objid oid",ScalarType "OUT objsubid smallint",ScalarType "OUT virtualtransaction text",ScalarType "OUT pid integer",ScalarType "OUT mode text",ScalarType "OUT granted boolean"],ScalarType "SETOF record"),
    ("pg_ls_dir",[ScalarType "text"],ScalarType "SETOF text"),
    ("pg_my_temp_schema",[],ScalarType "oid"),
    ("pg_opclass_is_visible",[ScalarType "oid"],ScalarType "boolean"),
    ("pg_operator_is_visible",[ScalarType "oid"],ScalarType "boolean"),
    ("pg_options_to_table",[ScalarType "options_array text[]",ScalarType "OUT option_name text",ScalarType "OUT option_value text"],ScalarType "SETOF record"),
    ("pg_postmaster_start_time",[],ScalarType "timestamp with time zone"),
    ("pg_prepared_statement",[ScalarType "OUT name text",ScalarType "OUT statement text",ScalarType "OUT prepare_time timestamp with time zone",ScalarType "OUT parameter_types regtype[]",ScalarType "OUT from_sql boolean"],ScalarType "SETOF record"),
    ("pg_prepared_xact",[ScalarType "OUT transaction xid",ScalarType "OUT gid text",ScalarType "OUT prepared timestamp with time zone",ScalarType "OUT ownerid oid",ScalarType "OUT dbid oid"],ScalarType "SETOF record"),
    ("pg_read_file",[ScalarType "text",ScalarType "bigint",ScalarType "bigint"],ScalarType "text"),
    ("pg_relation_size",[ScalarType "regclass"],ScalarType "bigint"),
    ("pg_relation_size",[ScalarType "regclass",ScalarType "text"],ScalarType "bigint"),
    ("pg_reload_conf",[],ScalarType "boolean"),
    ("pg_rotate_logfile",[],ScalarType "boolean"),
    ("pg_show_all_settings",[ScalarType "OUT name text",ScalarType "OUT setting text",ScalarType "OUT unit text",ScalarType "OUT category text",ScalarType "OUT short_desc text",ScalarType "OUT extra_desc text",ScalarType "OUT context text",ScalarType "OUT vartype text",ScalarType "OUT source text",ScalarType "OUT min_val text",ScalarType "OUT max_val text",ScalarType "OUT enumvals text[]",ScalarType "OUT boot_val text",ScalarType "OUT reset_val text",ScalarType "OUT sourcefile text",ScalarType "OUT sourceline integer"],ScalarType "SETOF record"),
    ("pg_size_pretty",[ScalarType "bigint"],ScalarType "text"),
    ("pg_sleep",[ScalarType "double precision"],ScalarType "void"),
    ("pg_start_backup",[ScalarType "label text",ScalarType "fast boolean DEFAULT false"],ScalarType "text"),
    ("pg_stat_clear_snapshot",[],ScalarType "void"),
    ("pg_stat_file",[ScalarType "filename text",ScalarType "OUT size bigint",ScalarType "OUT access timestamp with time zone",ScalarType "OUT modification timestamp with time zone",ScalarType "OUT change timestamp with time zone",ScalarType "OUT creation timestamp with time zone",ScalarType "OUT isdir boolean"],ScalarType "record"),
    ("pg_stat_get_activity",[ScalarType "pid integer",ScalarType "OUT datid oid",ScalarType "OUT procpid integer",ScalarType "OUT usesysid oid",ScalarType "OUT current_query text",ScalarType "OUT waiting boolean",ScalarType "OUT xact_start timestamp with time zone",ScalarType "OUT query_start timestamp with time zone",ScalarType "OUT backend_start timestamp with time zone",ScalarType "OUT client_addr inet",ScalarType "OUT client_port integer"],ScalarType "SETOF record"),
    ("pg_stat_get_backend_activity",[ScalarType "integer"],ScalarType "text"),
    ("pg_stat_get_backend_activity_start",[ScalarType "integer"],ScalarType "timestamp with time zone"),
    ("pg_stat_get_backend_client_addr",[ScalarType "integer"],ScalarType "inet"),
    ("pg_stat_get_backend_client_port",[ScalarType "integer"],ScalarType "integer"),
    ("pg_stat_get_backend_dbid",[ScalarType "integer"],ScalarType "oid"),
    ("pg_stat_get_backend_idset",[],ScalarType "SETOF integer"),
    ("pg_stat_get_backend_pid",[ScalarType "integer"],ScalarType "integer"),
    ("pg_stat_get_backend_start",[ScalarType "integer"],ScalarType "timestamp with time zone"),
    ("pg_stat_get_backend_userid",[ScalarType "integer"],ScalarType "oid"),
    ("pg_stat_get_backend_waiting",[ScalarType "integer"],ScalarType "boolean"),
    ("pg_stat_get_backend_xact_start",[ScalarType "integer"],ScalarType "timestamp with time zone"),
    ("pg_stat_get_bgwriter_buf_written_checkpoints",[],ScalarType "bigint"),
    ("pg_stat_get_bgwriter_buf_written_clean",[],ScalarType "bigint"),
    ("pg_stat_get_bgwriter_maxwritten_clean",[],ScalarType "bigint"),
    ("pg_stat_get_bgwriter_requested_checkpoints",[],ScalarType "bigint"),
    ("pg_stat_get_bgwriter_timed_checkpoints",[],ScalarType "bigint"),
    ("pg_stat_get_blocks_fetched",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_get_blocks_hit",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_get_buf_alloc",[],ScalarType "bigint"),
    ("pg_stat_get_buf_written_backend",[],ScalarType "bigint"),
    ("pg_stat_get_db_blocks_fetched",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_get_db_blocks_hit",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_get_db_numbackends",[ScalarType "oid"],ScalarType "integer"),
    ("pg_stat_get_db_tuples_deleted",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_get_db_tuples_fetched",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_get_db_tuples_inserted",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_get_db_tuples_returned",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_get_db_tuples_updated",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_get_db_xact_commit",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_get_db_xact_rollback",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_get_dead_tuples",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_get_function_calls",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_get_function_self_time",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_get_function_time",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_get_last_analyze_time",[ScalarType "oid"],ScalarType "timestamp with time zone"),
    ("pg_stat_get_last_autoanalyze_time",[ScalarType "oid"],ScalarType "timestamp with time zone"),
    ("pg_stat_get_last_autovacuum_time",[ScalarType "oid"],ScalarType "timestamp with time zone"),
    ("pg_stat_get_last_vacuum_time",[ScalarType "oid"],ScalarType "timestamp with time zone"),
    ("pg_stat_get_live_tuples",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_get_numscans",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_get_tuples_deleted",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_get_tuples_fetched",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_get_tuples_hot_updated",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_get_tuples_inserted",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_get_tuples_returned",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_get_tuples_updated",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_stat_reset",[],ScalarType "void"),
    ("pg_stop_backup",[],ScalarType "text"),
    ("pg_switch_xlog",[],ScalarType "text"),
    ("pg_table_is_visible",[ScalarType "oid"],ScalarType "boolean"),
    ("pg_tablespace_databases",[ScalarType "oid"],ScalarType "SETOF oid"),
    ("pg_tablespace_size",[ScalarType "name"],ScalarType "bigint"),
    ("pg_tablespace_size",[ScalarType "oid"],ScalarType "bigint"),
    ("pg_terminate_backend",[ScalarType "integer"],ScalarType "boolean"),
    ("pg_timezone_abbrevs",[ScalarType "OUT abbrev text",ScalarType "OUT utc_offset interval",ScalarType "OUT is_dst boolean"],ScalarType "SETOF record"),
    ("pg_timezone_names",[ScalarType "OUT name text",ScalarType "OUT abbrev text",ScalarType "OUT utc_offset interval",ScalarType "OUT is_dst boolean"],ScalarType "SETOF record"),
    ("pg_total_relation_size",[ScalarType "regclass"],ScalarType "bigint"),
    ("pg_try_advisory_lock",[ScalarType "bigint"],ScalarType "boolean"),
    ("pg_try_advisory_lock",[ScalarType "integer",ScalarType "integer"],ScalarType "boolean"),
    ("pg_try_advisory_lock_shared",[ScalarType "integer",ScalarType "integer"],ScalarType "boolean"),
    ("pg_try_advisory_lock_shared",[ScalarType "bigint"],ScalarType "boolean"),
    ("pg_ts_config_is_visible",[ScalarType "oid"],ScalarType "boolean"),
    ("pg_ts_dict_is_visible",[ScalarType "oid"],ScalarType "boolean"),
    ("pg_ts_parser_is_visible",[ScalarType "oid"],ScalarType "boolean"),
    ("pg_ts_template_is_visible",[ScalarType "oid"],ScalarType "boolean"),
    ("pg_type_is_visible",[ScalarType "oid"],ScalarType "boolean"),
    ("pg_typeof",[ScalarType "\"any\""],ScalarType "regtype"),
    ("pg_xlogfile_name",[ScalarType "text"],ScalarType "text"),
    ("pg_xlogfile_name_offset",[ScalarType "wal_location text",ScalarType "OUT file_name text",ScalarType "OUT file_offset integer"],ScalarType "record"),
    ("pi",[],ScalarType "double precision"),
    ("plainto_tsquery",[ScalarType "regconfig",ScalarType "text"],ScalarType "tsquery"),
    ("plainto_tsquery",[ScalarType "text"],ScalarType "tsquery"),
    ("point",[ScalarType "circle"],ScalarType "point"),
    ("point",[ScalarType "double precision",ScalarType "double precision"],ScalarType "point"),
    ("point",[ScalarType "lseg"],ScalarType "point"),
    ("point",[ScalarType "path"],ScalarType "point"),
    ("point",[ScalarType "box"],ScalarType "point"),
    ("point",[ScalarType "polygon"],ScalarType "point"),
    ("point_above",[ScalarType "point",ScalarType "point"],ScalarType "boolean"),
    ("point_add",[ScalarType "point",ScalarType "point"],ScalarType "point"),
    ("point_below",[ScalarType "point",ScalarType "point"],ScalarType "boolean"),
    ("point_distance",[ScalarType "point",ScalarType "point"],ScalarType "double precision"),
    ("point_div",[ScalarType "point",ScalarType "point"],ScalarType "point"),
    ("point_eq",[ScalarType "point",ScalarType "point"],ScalarType "boolean"),
    ("point_horiz",[ScalarType "point",ScalarType "point"],ScalarType "boolean"),
    ("point_in",[ScalarType "cstring"],ScalarType "point"),
    ("point_left",[ScalarType "point",ScalarType "point"],ScalarType "boolean"),
    ("point_mul",[ScalarType "point",ScalarType "point"],ScalarType "point"),
    ("point_ne",[ScalarType "point",ScalarType "point"],ScalarType "boolean"),
    ("point_out",[ScalarType "point"],ScalarType "cstring"),
    ("point_recv",[ScalarType "internal"],ScalarType "point"),
    ("point_right",[ScalarType "point",ScalarType "point"],ScalarType "boolean"),
    ("point_send",[ScalarType "point"],ScalarType "bytea"),
    ("point_sub",[ScalarType "point",ScalarType "point"],ScalarType "point"),
    ("point_vert",[ScalarType "point",ScalarType "point"],ScalarType "boolean"),
    ("poly_above",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("poly_below",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("poly_center",[ScalarType "polygon"],ScalarType "point"),
    ("poly_contain",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("poly_contain_pt",[ScalarType "polygon",ScalarType "point"],ScalarType "boolean"),
    ("poly_contained",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("poly_distance",[ScalarType "polygon",ScalarType "polygon"],ScalarType "double precision"),
    ("poly_in",[ScalarType "cstring"],ScalarType "polygon"),
    ("poly_left",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("poly_npoints",[ScalarType "polygon"],ScalarType "integer"),
    ("poly_out",[ScalarType "polygon"],ScalarType "cstring"),
    ("poly_overabove",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("poly_overbelow",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("poly_overlap",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("poly_overleft",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("poly_overright",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("poly_recv",[ScalarType "internal"],ScalarType "polygon"),
    ("poly_right",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("poly_same",[ScalarType "polygon",ScalarType "polygon"],ScalarType "boolean"),
    ("poly_send",[ScalarType "polygon"],ScalarType "bytea"),
    ("polygon",[ScalarType "integer",ScalarType "circle"],ScalarType "polygon"),
    ("polygon",[ScalarType "circle"],ScalarType "polygon"),
    ("polygon",[ScalarType "box"],ScalarType "polygon"),
    ("polygon",[ScalarType "path"],ScalarType "polygon"),
    ("popen",[ScalarType "path"],ScalarType "path"),
    ("position",[ScalarType "bit",ScalarType "bit"],ScalarType "integer"),
    ("position",[ScalarType "text",ScalarType "text"],ScalarType "integer"),
    ("position",[ScalarType "bytea",ScalarType "bytea"],ScalarType "integer"),
    ("positionjoinsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "smallint",ScalarType "internal"],ScalarType "double precision"),
    ("positionsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "integer"],ScalarType "double precision"),
    ("postgresql_fdw_validator",[ScalarType "text[]",ScalarType "oid"],ScalarType "boolean"),
    ("pow",[ScalarType "numeric",ScalarType "numeric"],ScalarType "numeric"),
    ("pow",[ScalarType "double precision",ScalarType "double precision"],ScalarType "double precision"),
    ("power",[ScalarType "double precision",ScalarType "double precision"],ScalarType "double precision"),
    ("power",[ScalarType "numeric",ScalarType "numeric"],ScalarType "numeric"),
    ("prsd_end",[ScalarType "internal"],ScalarType "void"),
    ("prsd_headline",[ScalarType "internal",ScalarType "internal",ScalarType "tsquery"],ScalarType "internal"),
    ("prsd_lextype",[ScalarType "internal"],ScalarType "internal"),
    ("prsd_nexttoken",[ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("prsd_start",[ScalarType "internal",ScalarType "integer"],ScalarType "internal"),
    ("pt_contained_circle",[ScalarType "point",ScalarType "circle"],ScalarType "boolean"),
    ("pt_contained_poly",[ScalarType "point",ScalarType "polygon"],ScalarType "boolean"),
    ("query_to_xml",[ScalarType "query text",ScalarType "nulls boolean",ScalarType "tableforest boolean",ScalarType "targetns text"],ScalarType "xml"),
    ("query_to_xml_and_xmlschema",[ScalarType "query text",ScalarType "nulls boolean",ScalarType "tableforest boolean",ScalarType "targetns text"],ScalarType "xml"),
    ("query_to_xmlschema",[ScalarType "query text",ScalarType "nulls boolean",ScalarType "tableforest boolean",ScalarType "targetns text"],ScalarType "xml"),
    ("querytree",[ScalarType "tsquery"],ScalarType "text"),
    ("quote_ident",[ScalarType "text"],ScalarType "text"),
    ("quote_literal",[ScalarType "anyelement"],ScalarType "text"),
    ("quote_literal",[ScalarType "text"],ScalarType "text"),
    ("quote_nullable",[ScalarType "anyelement"],ScalarType "text"),
    ("quote_nullable",[ScalarType "text"],ScalarType "text"),
    ("radians",[ScalarType "double precision"],ScalarType "double precision"),
    ("radius",[ScalarType "circle"],ScalarType "double precision"),
    ("random",[],ScalarType "double precision"),
    ("record_eq",[ScalarType "record",ScalarType "record"],ScalarType "boolean"),
    ("record_ge",[ScalarType "record",ScalarType "record"],ScalarType "boolean"),
    ("record_gt",[ScalarType "record",ScalarType "record"],ScalarType "boolean"),
    ("record_in",[ScalarType "cstring",ScalarType "oid",ScalarType "integer"],ScalarType "record"),
    ("record_le",[ScalarType "record",ScalarType "record"],ScalarType "boolean"),
    ("record_lt",[ScalarType "record",ScalarType "record"],ScalarType "boolean"),
    ("record_ne",[ScalarType "record",ScalarType "record"],ScalarType "boolean"),
    ("record_out",[ScalarType "record"],ScalarType "cstring"),
    ("record_recv",[ScalarType "internal",ScalarType "oid",ScalarType "integer"],ScalarType "record"),
    ("record_send",[ScalarType "record"],ScalarType "bytea"),
    ("regclass",[ScalarType "text"],ScalarType "regclass"),
    ("regclassin",[ScalarType "cstring"],ScalarType "regclass"),
    ("regclassout",[ScalarType "regclass"],ScalarType "cstring"),
    ("regclassrecv",[ScalarType "internal"],ScalarType "regclass"),
    ("regclasssend",[ScalarType "regclass"],ScalarType "bytea"),
    ("regconfigin",[ScalarType "cstring"],ScalarType "regconfig"),
    ("regconfigout",[ScalarType "regconfig"],ScalarType "cstring"),
    ("regconfigrecv",[ScalarType "internal"],ScalarType "regconfig"),
    ("regconfigsend",[ScalarType "regconfig"],ScalarType "bytea"),
    ("regdictionaryin",[ScalarType "cstring"],ScalarType "regdictionary"),
    ("regdictionaryout",[ScalarType "regdictionary"],ScalarType "cstring"),
    ("regdictionaryrecv",[ScalarType "internal"],ScalarType "regdictionary"),
    ("regdictionarysend",[ScalarType "regdictionary"],ScalarType "bytea"),
    ("regexeqjoinsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "smallint",ScalarType "internal"],ScalarType "double precision"),
    ("regexeqsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "integer"],ScalarType "double precision"),
    ("regexnejoinsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "smallint",ScalarType "internal"],ScalarType "double precision"),
    ("regexnesel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "integer"],ScalarType "double precision"),
    ("regexp_matches",[ScalarType "text",ScalarType "text",ScalarType "text"],ScalarType "SETOF text[]"),
    ("regexp_matches",[ScalarType "text",ScalarType "text"],ScalarType "SETOF text[]"),
    ("regexp_replace",[ScalarType "text",ScalarType "text",ScalarType "text"],ScalarType "text"),
    ("regexp_replace",[ScalarType "text",ScalarType "text",ScalarType "text",ScalarType "text"],ScalarType "text"),
    ("regexp_split_to_array",[ScalarType "text",ScalarType "text"],ScalarType "text[]"),
    ("regexp_split_to_array",[ScalarType "text",ScalarType "text",ScalarType "text"],ScalarType "text[]"),
    ("regexp_split_to_table",[ScalarType "text",ScalarType "text"],ScalarType "SETOF text"),
    ("regexp_split_to_table",[ScalarType "text",ScalarType "text",ScalarType "text"],ScalarType "SETOF text"),
    ("regoperatorin",[ScalarType "cstring"],ScalarType "regoperator"),
    ("regoperatorout",[ScalarType "regoperator"],ScalarType "cstring"),
    ("regoperatorrecv",[ScalarType "internal"],ScalarType "regoperator"),
    ("regoperatorsend",[ScalarType "regoperator"],ScalarType "bytea"),
    ("regoperin",[ScalarType "cstring"],ScalarType "regoper"),
    ("regoperout",[ScalarType "regoper"],ScalarType "cstring"),
    ("regoperrecv",[ScalarType "internal"],ScalarType "regoper"),
    ("regopersend",[ScalarType "regoper"],ScalarType "bytea"),
    ("regprocedurein",[ScalarType "cstring"],ScalarType "regprocedure"),
    ("regprocedureout",[ScalarType "regprocedure"],ScalarType "cstring"),
    ("regprocedurerecv",[ScalarType "internal"],ScalarType "regprocedure"),
    ("regproceduresend",[ScalarType "regprocedure"],ScalarType "bytea"),
    ("regprocin",[ScalarType "cstring"],ScalarType "regproc"),
    ("regprocout",[ScalarType "regproc"],ScalarType "cstring"),
    ("regprocrecv",[ScalarType "internal"],ScalarType "regproc"),
    ("regprocsend",[ScalarType "regproc"],ScalarType "bytea"),
    ("regtypein",[ScalarType "cstring"],ScalarType "regtype"),
    ("regtypeout",[ScalarType "regtype"],ScalarType "cstring"),
    ("regtyperecv",[ScalarType "internal"],ScalarType "regtype"),
    ("regtypesend",[ScalarType "regtype"],ScalarType "bytea"),
    ("reltime",[ScalarType "interval"],ScalarType "reltime"),
    ("reltimeeq",[ScalarType "reltime",ScalarType "reltime"],ScalarType "boolean"),
    ("reltimege",[ScalarType "reltime",ScalarType "reltime"],ScalarType "boolean"),
    ("reltimegt",[ScalarType "reltime",ScalarType "reltime"],ScalarType "boolean"),
    ("reltimein",[ScalarType "cstring"],ScalarType "reltime"),
    ("reltimele",[ScalarType "reltime",ScalarType "reltime"],ScalarType "boolean"),
    ("reltimelt",[ScalarType "reltime",ScalarType "reltime"],ScalarType "boolean"),
    ("reltimene",[ScalarType "reltime",ScalarType "reltime"],ScalarType "boolean"),
    ("reltimeout",[ScalarType "reltime"],ScalarType "cstring"),
    ("reltimerecv",[ScalarType "internal"],ScalarType "reltime"),
    ("reltimesend",[ScalarType "reltime"],ScalarType "bytea"),
    ("repeat",[ScalarType "text",ScalarType "integer"],ScalarType "text"),
    ("replace",[ScalarType "text",ScalarType "text",ScalarType "text"],ScalarType "text"),
    ("round",[ScalarType "numeric",ScalarType "integer"],ScalarType "numeric"),
    ("round",[ScalarType "numeric"],ScalarType "numeric"),
    ("round",[ScalarType "double precision"],ScalarType "double precision"),
    ("rpad",[ScalarType "text",ScalarType "integer",ScalarType "text"],ScalarType "text"),
    ("rpad",[ScalarType "text",ScalarType "integer"],ScalarType "text"),
    ("rtrim",[ScalarType "text",ScalarType "text"],ScalarType "text"),
    ("rtrim",[ScalarType "text"],ScalarType "text"),
    ("scalargtjoinsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "smallint",ScalarType "internal"],ScalarType "double precision"),
    ("scalargtsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "integer"],ScalarType "double precision"),
    ("scalarltjoinsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "smallint",ScalarType "internal"],ScalarType "double precision"),
    ("scalarltsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "integer"],ScalarType "double precision"),
    ("schema_to_xml",[ScalarType "schema name",ScalarType "nulls boolean",ScalarType "tableforest boolean",ScalarType "targetns text"],ScalarType "xml"),
    ("schema_to_xml_and_xmlschema",[ScalarType "schema name",ScalarType "nulls boolean",ScalarType "tableforest boolean",ScalarType "targetns text"],ScalarType "xml"),
    ("schema_to_xmlschema",[ScalarType "schema name",ScalarType "nulls boolean",ScalarType "tableforest boolean",ScalarType "targetns text"],ScalarType "xml"),
    ("session_user",[],ScalarType "name"),
    ("set_bit",[ScalarType "bytea",ScalarType "integer",ScalarType "integer"],ScalarType "bytea"),
    ("set_byte",[ScalarType "bytea",ScalarType "integer",ScalarType "integer"],ScalarType "bytea"),
    ("set_config",[ScalarType "text",ScalarType "text",ScalarType "boolean"],ScalarType "text"),
    ("set_masklen",[ScalarType "inet",ScalarType "integer"],ScalarType "inet"),
    ("set_masklen",[ScalarType "cidr",ScalarType "integer"],ScalarType "cidr"),
    ("setseed",[ScalarType "double precision"],ScalarType "void"),
    ("setval",[ScalarType "regclass",ScalarType "bigint",ScalarType "boolean"],ScalarType "bigint"),
    ("setval",[ScalarType "regclass",ScalarType "bigint"],ScalarType "bigint"),
    ("setweight",[ScalarType "tsvector",ScalarType "\"char\""],ScalarType "tsvector"),
    ("shell_in",[ScalarType "cstring"],ScalarType "opaque"),
    ("shell_out",[ScalarType "opaque"],ScalarType "cstring"),
    ("shift_jis_2004_to_euc_jis_2004",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("shift_jis_2004_to_utf8",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("shobj_description",[ScalarType "oid",ScalarType "name"],ScalarType "text"),
    ("sign",[ScalarType "double precision"],ScalarType "double precision"),
    ("sign",[ScalarType "numeric"],ScalarType "numeric"),
    ("similar_escape",[ScalarType "text",ScalarType "text"],ScalarType "text"),
    ("sin",[ScalarType "double precision"],ScalarType "double precision"),
    ("sjis_to_euc_jp",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("sjis_to_mic",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("sjis_to_utf8",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("slope",[ScalarType "point",ScalarType "point"],ScalarType "double precision"),
    ("smgreq",[ScalarType "smgr",ScalarType "smgr"],ScalarType "boolean"),
    ("smgrin",[ScalarType "cstring"],ScalarType "smgr"),
    ("smgrne",[ScalarType "smgr",ScalarType "smgr"],ScalarType "boolean"),
    ("smgrout",[ScalarType "smgr"],ScalarType "cstring"),
    ("split_part",[ScalarType "text",ScalarType "text",ScalarType "integer"],ScalarType "text"),
    ("sqrt",[ScalarType "double precision"],ScalarType "double precision"),
    ("sqrt",[ScalarType "numeric"],ScalarType "numeric"),
    ("statement_timestamp",[],ScalarType "timestamp with time zone"),
    ("string_to_array",[ScalarType "text",ScalarType "text"],ScalarType "text[]"),
    ("strip",[ScalarType "tsvector"],ScalarType "tsvector"),
    ("strpos",[ScalarType "text",ScalarType "text"],ScalarType "integer"),
    ("substr",[ScalarType "text",ScalarType "integer",ScalarType "integer"],ScalarType "text"),
    ("substr",[ScalarType "bytea",ScalarType "integer",ScalarType "integer"],ScalarType "bytea"),
    ("substr",[ScalarType "bytea",ScalarType "integer"],ScalarType "bytea"),
    ("substr",[ScalarType "text",ScalarType "integer"],ScalarType "text"),
    ("substring",[ScalarType "bytea",ScalarType "integer"],ScalarType "bytea"),
    ("substring",[ScalarType "bytea",ScalarType "integer",ScalarType "integer"],ScalarType "bytea"),
    ("substring",[ScalarType "text",ScalarType "integer"],ScalarType "text"),
    ("substring",[ScalarType "text",ScalarType "text",ScalarType "text"],ScalarType "text"),
    ("substring",[ScalarType "text",ScalarType "text"],ScalarType "text"),
    ("substring",[ScalarType "text",ScalarType "integer",ScalarType "integer"],ScalarType "text"),
    ("substring",[ScalarType "bit",ScalarType "integer",ScalarType "integer"],ScalarType "bit"),
    ("substring",[ScalarType "bit",ScalarType "integer"],ScalarType "bit"),
    ("table_to_xml",[ScalarType "tbl regclass",ScalarType "nulls boolean",ScalarType "tableforest boolean",ScalarType "targetns text"],ScalarType "xml"),
    ("table_to_xml_and_xmlschema",[ScalarType "tbl regclass",ScalarType "nulls boolean",ScalarType "tableforest boolean",ScalarType "targetns text"],ScalarType "xml"),
    ("table_to_xmlschema",[ScalarType "tbl regclass",ScalarType "nulls boolean",ScalarType "tableforest boolean",ScalarType "targetns text"],ScalarType "xml"),
    ("tan",[ScalarType "double precision"],ScalarType "double precision"),
    ("text",[ScalarType "\"char\""],ScalarType "text"),
    ("text",[ScalarType "xml"],ScalarType "text"),
    ("text",[ScalarType "inet"],ScalarType "text"),
    ("text",[ScalarType "name"],ScalarType "text"),
    ("text",[ScalarType "character"],ScalarType "text"),
    ("text",[ScalarType "boolean"],ScalarType "text"),
    ("text_ge",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("text_gt",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("text_larger",[ScalarType "text",ScalarType "text"],ScalarType "text"),
    ("text_le",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("text_lt",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("text_pattern_ge",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("text_pattern_gt",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("text_pattern_le",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("text_pattern_lt",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("text_smaller",[ScalarType "text",ScalarType "text"],ScalarType "text"),
    ("textanycat",[ScalarType "text",ScalarType "anynonarray"],ScalarType "text"),
    ("textcat",[ScalarType "text",ScalarType "text"],ScalarType "text"),
    ("texteq",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("texticlike",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("texticnlike",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("texticregexeq",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("texticregexne",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("textin",[ScalarType "cstring"],ScalarType "text"),
    ("textlen",[ScalarType "text"],ScalarType "integer"),
    ("textlike",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("textne",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("textnlike",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("textout",[ScalarType "text"],ScalarType "cstring"),
    ("textrecv",[ScalarType "internal"],ScalarType "text"),
    ("textregexeq",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("textregexne",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("textsend",[ScalarType "text"],ScalarType "bytea"),
    ("thesaurus_init",[ScalarType "internal"],ScalarType "internal"),
    ("thesaurus_lexize",[ScalarType "internal",ScalarType "internal",ScalarType "internal",ScalarType "internal"],ScalarType "internal"),
    ("tideq",[ScalarType "tid",ScalarType "tid"],ScalarType "boolean"),
    ("tidge",[ScalarType "tid",ScalarType "tid"],ScalarType "boolean"),
    ("tidgt",[ScalarType "tid",ScalarType "tid"],ScalarType "boolean"),
    ("tidin",[ScalarType "cstring"],ScalarType "tid"),
    ("tidlarger",[ScalarType "tid",ScalarType "tid"],ScalarType "tid"),
    ("tidle",[ScalarType "tid",ScalarType "tid"],ScalarType "boolean"),
    ("tidlt",[ScalarType "tid",ScalarType "tid"],ScalarType "boolean"),
    ("tidne",[ScalarType "tid",ScalarType "tid"],ScalarType "boolean"),
    ("tidout",[ScalarType "tid"],ScalarType "cstring"),
    ("tidrecv",[ScalarType "internal"],ScalarType "tid"),
    ("tidsend",[ScalarType "tid"],ScalarType "bytea"),
    ("tidsmaller",[ScalarType "tid",ScalarType "tid"],ScalarType "tid"),
    ("time",[ScalarType "time without time zone",ScalarType "integer"],ScalarType "time without time zone"),
    ("time",[ScalarType "time with time zone"],ScalarType "time without time zone"),
    ("time",[ScalarType "abstime"],ScalarType "time without time zone"),
    ("time",[ScalarType "interval"],ScalarType "time without time zone"),
    ("time",[ScalarType "timestamp without time zone"],ScalarType "time without time zone"),
    ("time",[ScalarType "timestamp with time zone"],ScalarType "time without time zone"),
    ("time_cmp",[ScalarType "time without time zone",ScalarType "time without time zone"],ScalarType "integer"),
    ("time_eq",[ScalarType "time without time zone",ScalarType "time without time zone"],ScalarType "boolean"),
    ("time_ge",[ScalarType "time without time zone",ScalarType "time without time zone"],ScalarType "boolean"),
    ("time_gt",[ScalarType "time without time zone",ScalarType "time without time zone"],ScalarType "boolean"),
    ("time_hash",[ScalarType "time without time zone"],ScalarType "integer"),
    ("time_in",[ScalarType "cstring",ScalarType "oid",ScalarType "integer"],ScalarType "time without time zone"),
    ("time_larger",[ScalarType "time without time zone",ScalarType "time without time zone"],ScalarType "time without time zone"),
    ("time_le",[ScalarType "time without time zone",ScalarType "time without time zone"],ScalarType "boolean"),
    ("time_lt",[ScalarType "time without time zone",ScalarType "time without time zone"],ScalarType "boolean"),
    ("time_mi_interval",[ScalarType "time without time zone",ScalarType "interval"],ScalarType "time without time zone"),
    ("time_mi_time",[ScalarType "time without time zone",ScalarType "time without time zone"],ScalarType "interval"),
    ("time_ne",[ScalarType "time without time zone",ScalarType "time without time zone"],ScalarType "boolean"),
    ("time_out",[ScalarType "time without time zone"],ScalarType "cstring"),
    ("time_pl_interval",[ScalarType "time without time zone",ScalarType "interval"],ScalarType "time without time zone"),
    ("time_recv",[ScalarType "internal",ScalarType "oid",ScalarType "integer"],ScalarType "time without time zone"),
    ("time_send",[ScalarType "time without time zone"],ScalarType "bytea"),
    ("time_smaller",[ScalarType "time without time zone",ScalarType "time without time zone"],ScalarType "time without time zone"),
    ("timedate_pl",[ScalarType "time without time zone",ScalarType "date"],ScalarType "timestamp without time zone"),
    ("timemi",[ScalarType "abstime",ScalarType "reltime"],ScalarType "abstime"),
    ("timenow",[],ScalarType "abstime"),
    ("timeofday",[],ScalarType "text"),
    ("timepl",[ScalarType "abstime",ScalarType "reltime"],ScalarType "abstime"),
    ("timestamp",[ScalarType "date",ScalarType "time without time zone"],ScalarType "timestamp without time zone"),
    ("timestamp",[ScalarType "timestamp with time zone"],ScalarType "timestamp without time zone"),
    ("timestamp",[ScalarType "date"],ScalarType "timestamp without time zone"),
    ("timestamp",[ScalarType "abstime"],ScalarType "timestamp without time zone"),
    ("timestamp",[ScalarType "timestamp without time zone",ScalarType "integer"],ScalarType "timestamp without time zone"),
    ("timestamp_cmp",[ScalarType "timestamp without time zone",ScalarType "timestamp without time zone"],ScalarType "integer"),
    ("timestamp_cmp_date",[ScalarType "timestamp without time zone",ScalarType "date"],ScalarType "integer"),
    ("timestamp_cmp_timestamptz",[ScalarType "timestamp without time zone",ScalarType "timestamp with time zone"],ScalarType "integer"),
    ("timestamp_eq",[ScalarType "timestamp without time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("timestamp_eq_date",[ScalarType "timestamp without time zone",ScalarType "date"],ScalarType "boolean"),
    ("timestamp_eq_timestamptz",[ScalarType "timestamp without time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("timestamp_ge",[ScalarType "timestamp without time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("timestamp_ge_date",[ScalarType "timestamp without time zone",ScalarType "date"],ScalarType "boolean"),
    ("timestamp_ge_timestamptz",[ScalarType "timestamp without time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("timestamp_gt",[ScalarType "timestamp without time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("timestamp_gt_date",[ScalarType "timestamp without time zone",ScalarType "date"],ScalarType "boolean"),
    ("timestamp_gt_timestamptz",[ScalarType "timestamp without time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("timestamp_hash",[ScalarType "timestamp without time zone"],ScalarType "integer"),
    ("timestamp_in",[ScalarType "cstring",ScalarType "oid",ScalarType "integer"],ScalarType "timestamp without time zone"),
    ("timestamp_larger",[ScalarType "timestamp without time zone",ScalarType "timestamp without time zone"],ScalarType "timestamp without time zone"),
    ("timestamp_le",[ScalarType "timestamp without time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("timestamp_le_date",[ScalarType "timestamp without time zone",ScalarType "date"],ScalarType "boolean"),
    ("timestamp_le_timestamptz",[ScalarType "timestamp without time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("timestamp_lt",[ScalarType "timestamp without time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("timestamp_lt_date",[ScalarType "timestamp without time zone",ScalarType "date"],ScalarType "boolean"),
    ("timestamp_lt_timestamptz",[ScalarType "timestamp without time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("timestamp_mi",[ScalarType "timestamp without time zone",ScalarType "timestamp without time zone"],ScalarType "interval"),
    ("timestamp_mi_interval",[ScalarType "timestamp without time zone",ScalarType "interval"],ScalarType "timestamp without time zone"),
    ("timestamp_ne",[ScalarType "timestamp without time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("timestamp_ne_date",[ScalarType "timestamp without time zone",ScalarType "date"],ScalarType "boolean"),
    ("timestamp_ne_timestamptz",[ScalarType "timestamp without time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("timestamp_out",[ScalarType "timestamp without time zone"],ScalarType "cstring"),
    ("timestamp_pl_interval",[ScalarType "timestamp without time zone",ScalarType "interval"],ScalarType "timestamp without time zone"),
    ("timestamp_recv",[ScalarType "internal",ScalarType "oid",ScalarType "integer"],ScalarType "timestamp without time zone"),
    ("timestamp_send",[ScalarType "timestamp without time zone"],ScalarType "bytea"),
    ("timestamp_smaller",[ScalarType "timestamp without time zone",ScalarType "timestamp without time zone"],ScalarType "timestamp without time zone"),
    ("timestamptypmodin",[ScalarType "cstring[]"],ScalarType "integer"),
    ("timestamptypmodout",[ScalarType "integer"],ScalarType "cstring"),
    ("timestamptz",[ScalarType "abstime"],ScalarType "timestamp with time zone"),
    ("timestamptz",[ScalarType "timestamp without time zone"],ScalarType "timestamp with time zone"),
    ("timestamptz",[ScalarType "date",ScalarType "time with time zone"],ScalarType "timestamp with time zone"),
    ("timestamptz",[ScalarType "date",ScalarType "time without time zone"],ScalarType "timestamp with time zone"),
    ("timestamptz",[ScalarType "date"],ScalarType "timestamp with time zone"),
    ("timestamptz",[ScalarType "timestamp with time zone",ScalarType "integer"],ScalarType "timestamp with time zone"),
    ("timestamptz_cmp",[ScalarType "timestamp with time zone",ScalarType "timestamp with time zone"],ScalarType "integer"),
    ("timestamptz_cmp_date",[ScalarType "timestamp with time zone",ScalarType "date"],ScalarType "integer"),
    ("timestamptz_cmp_timestamp",[ScalarType "timestamp with time zone",ScalarType "timestamp without time zone"],ScalarType "integer"),
    ("timestamptz_eq",[ScalarType "timestamp with time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("timestamptz_eq_date",[ScalarType "timestamp with time zone",ScalarType "date"],ScalarType "boolean"),
    ("timestamptz_eq_timestamp",[ScalarType "timestamp with time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("timestamptz_ge",[ScalarType "timestamp with time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("timestamptz_ge_date",[ScalarType "timestamp with time zone",ScalarType "date"],ScalarType "boolean"),
    ("timestamptz_ge_timestamp",[ScalarType "timestamp with time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("timestamptz_gt",[ScalarType "timestamp with time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("timestamptz_gt_date",[ScalarType "timestamp with time zone",ScalarType "date"],ScalarType "boolean"),
    ("timestamptz_gt_timestamp",[ScalarType "timestamp with time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("timestamptz_in",[ScalarType "cstring",ScalarType "oid",ScalarType "integer"],ScalarType "timestamp with time zone"),
    ("timestamptz_larger",[ScalarType "timestamp with time zone",ScalarType "timestamp with time zone"],ScalarType "timestamp with time zone"),
    ("timestamptz_le",[ScalarType "timestamp with time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("timestamptz_le_date",[ScalarType "timestamp with time zone",ScalarType "date"],ScalarType "boolean"),
    ("timestamptz_le_timestamp",[ScalarType "timestamp with time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("timestamptz_lt",[ScalarType "timestamp with time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("timestamptz_lt_date",[ScalarType "timestamp with time zone",ScalarType "date"],ScalarType "boolean"),
    ("timestamptz_lt_timestamp",[ScalarType "timestamp with time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("timestamptz_mi",[ScalarType "timestamp with time zone",ScalarType "timestamp with time zone"],ScalarType "interval"),
    ("timestamptz_mi_interval",[ScalarType "timestamp with time zone",ScalarType "interval"],ScalarType "timestamp with time zone"),
    ("timestamptz_ne",[ScalarType "timestamp with time zone",ScalarType "timestamp with time zone"],ScalarType "boolean"),
    ("timestamptz_ne_date",[ScalarType "timestamp with time zone",ScalarType "date"],ScalarType "boolean"),
    ("timestamptz_ne_timestamp",[ScalarType "timestamp with time zone",ScalarType "timestamp without time zone"],ScalarType "boolean"),
    ("timestamptz_out",[ScalarType "timestamp with time zone"],ScalarType "cstring"),
    ("timestamptz_pl_interval",[ScalarType "timestamp with time zone",ScalarType "interval"],ScalarType "timestamp with time zone"),
    ("timestamptz_recv",[ScalarType "internal",ScalarType "oid",ScalarType "integer"],ScalarType "timestamp with time zone"),
    ("timestamptz_send",[ScalarType "timestamp with time zone"],ScalarType "bytea"),
    ("timestamptz_smaller",[ScalarType "timestamp with time zone",ScalarType "timestamp with time zone"],ScalarType "timestamp with time zone"),
    ("timestamptztypmodin",[ScalarType "cstring[]"],ScalarType "integer"),
    ("timestamptztypmodout",[ScalarType "integer"],ScalarType "cstring"),
    ("timetypmodin",[ScalarType "cstring[]"],ScalarType "integer"),
    ("timetypmodout",[ScalarType "integer"],ScalarType "cstring"),
    ("timetz",[ScalarType "time with time zone",ScalarType "integer"],ScalarType "time with time zone"),
    ("timetz",[ScalarType "timestamp with time zone"],ScalarType "time with time zone"),
    ("timetz",[ScalarType "time without time zone"],ScalarType "time with time zone"),
    ("timetz_cmp",[ScalarType "time with time zone",ScalarType "time with time zone"],ScalarType "integer"),
    ("timetz_eq",[ScalarType "time with time zone",ScalarType "time with time zone"],ScalarType "boolean"),
    ("timetz_ge",[ScalarType "time with time zone",ScalarType "time with time zone"],ScalarType "boolean"),
    ("timetz_gt",[ScalarType "time with time zone",ScalarType "time with time zone"],ScalarType "boolean"),
    ("timetz_hash",[ScalarType "time with time zone"],ScalarType "integer"),
    ("timetz_in",[ScalarType "cstring",ScalarType "oid",ScalarType "integer"],ScalarType "time with time zone"),
    ("timetz_larger",[ScalarType "time with time zone",ScalarType "time with time zone"],ScalarType "time with time zone"),
    ("timetz_le",[ScalarType "time with time zone",ScalarType "time with time zone"],ScalarType "boolean"),
    ("timetz_lt",[ScalarType "time with time zone",ScalarType "time with time zone"],ScalarType "boolean"),
    ("timetz_mi_interval",[ScalarType "time with time zone",ScalarType "interval"],ScalarType "time with time zone"),
    ("timetz_ne",[ScalarType "time with time zone",ScalarType "time with time zone"],ScalarType "boolean"),
    ("timetz_out",[ScalarType "time with time zone"],ScalarType "cstring"),
    ("timetz_pl_interval",[ScalarType "time with time zone",ScalarType "interval"],ScalarType "time with time zone"),
    ("timetz_recv",[ScalarType "internal",ScalarType "oid",ScalarType "integer"],ScalarType "time with time zone"),
    ("timetz_send",[ScalarType "time with time zone"],ScalarType "bytea"),
    ("timetz_smaller",[ScalarType "time with time zone",ScalarType "time with time zone"],ScalarType "time with time zone"),
    ("timetzdate_pl",[ScalarType "time with time zone",ScalarType "date"],ScalarType "timestamp with time zone"),
    ("timetztypmodin",[ScalarType "cstring[]"],ScalarType "integer"),
    ("timetztypmodout",[ScalarType "integer"],ScalarType "cstring"),
    ("timezone",[ScalarType "interval",ScalarType "timestamp without time zone"],ScalarType "timestamp with time zone"),
    ("timezone",[ScalarType "text",ScalarType "timestamp without time zone"],ScalarType "timestamp with time zone"),
    ("timezone",[ScalarType "interval",ScalarType "timestamp with time zone"],ScalarType "timestamp without time zone"),
    ("timezone",[ScalarType "text",ScalarType "timestamp with time zone"],ScalarType "timestamp without time zone"),
    ("timezone",[ScalarType "interval",ScalarType "time with time zone"],ScalarType "time with time zone"),
    ("timezone",[ScalarType "text",ScalarType "time with time zone"],ScalarType "time with time zone"),
    ("tinterval",[ScalarType "abstime",ScalarType "abstime"],ScalarType "tinterval"),
    ("tintervalct",[ScalarType "tinterval",ScalarType "tinterval"],ScalarType "boolean"),
    ("tintervalend",[ScalarType "tinterval"],ScalarType "abstime"),
    ("tintervaleq",[ScalarType "tinterval",ScalarType "tinterval"],ScalarType "boolean"),
    ("tintervalge",[ScalarType "tinterval",ScalarType "tinterval"],ScalarType "boolean"),
    ("tintervalgt",[ScalarType "tinterval",ScalarType "tinterval"],ScalarType "boolean"),
    ("tintervalin",[ScalarType "cstring"],ScalarType "tinterval"),
    ("tintervalle",[ScalarType "tinterval",ScalarType "tinterval"],ScalarType "boolean"),
    ("tintervalleneq",[ScalarType "tinterval",ScalarType "reltime"],ScalarType "boolean"),
    ("tintervallenge",[ScalarType "tinterval",ScalarType "reltime"],ScalarType "boolean"),
    ("tintervallengt",[ScalarType "tinterval",ScalarType "reltime"],ScalarType "boolean"),
    ("tintervallenle",[ScalarType "tinterval",ScalarType "reltime"],ScalarType "boolean"),
    ("tintervallenlt",[ScalarType "tinterval",ScalarType "reltime"],ScalarType "boolean"),
    ("tintervallenne",[ScalarType "tinterval",ScalarType "reltime"],ScalarType "boolean"),
    ("tintervallt",[ScalarType "tinterval",ScalarType "tinterval"],ScalarType "boolean"),
    ("tintervalne",[ScalarType "tinterval",ScalarType "tinterval"],ScalarType "boolean"),
    ("tintervalout",[ScalarType "tinterval"],ScalarType "cstring"),
    ("tintervalov",[ScalarType "tinterval",ScalarType "tinterval"],ScalarType "boolean"),
    ("tintervalrecv",[ScalarType "internal"],ScalarType "tinterval"),
    ("tintervalrel",[ScalarType "tinterval"],ScalarType "reltime"),
    ("tintervalsame",[ScalarType "tinterval",ScalarType "tinterval"],ScalarType "boolean"),
    ("tintervalsend",[ScalarType "tinterval"],ScalarType "bytea"),
    ("tintervalstart",[ScalarType "tinterval"],ScalarType "abstime"),
    ("to_ascii",[ScalarType "text",ScalarType "integer"],ScalarType "text"),
    ("to_ascii",[ScalarType "text",ScalarType "name"],ScalarType "text"),
    ("to_ascii",[ScalarType "text"],ScalarType "text"),
    ("to_char",[ScalarType "timestamp with time zone",ScalarType "text"],ScalarType "text"),
    ("to_char",[ScalarType "timestamp without time zone",ScalarType "text"],ScalarType "text"),
    ("to_char",[ScalarType "numeric",ScalarType "text"],ScalarType "text"),
    ("to_char",[ScalarType "integer",ScalarType "text"],ScalarType "text"),
    ("to_char",[ScalarType "bigint",ScalarType "text"],ScalarType "text"),
    ("to_char",[ScalarType "real",ScalarType "text"],ScalarType "text"),
    ("to_char",[ScalarType "double precision",ScalarType "text"],ScalarType "text"),
    ("to_char",[ScalarType "interval",ScalarType "text"],ScalarType "text"),
    ("to_date",[ScalarType "text",ScalarType "text"],ScalarType "date"),
    ("to_hex",[ScalarType "bigint"],ScalarType "text"),
    ("to_hex",[ScalarType "integer"],ScalarType "text"),
    ("to_number",[ScalarType "text",ScalarType "text"],ScalarType "numeric"),
    ("to_timestamp",[ScalarType "text",ScalarType "text"],ScalarType "timestamp with time zone"),
    ("to_timestamp",[ScalarType "double precision"],ScalarType "timestamp with time zone"),
    ("to_tsquery",[ScalarType "text"],ScalarType "tsquery"),
    ("to_tsquery",[ScalarType "regconfig",ScalarType "text"],ScalarType "tsquery"),
    ("to_tsvector",[ScalarType "regconfig",ScalarType "text"],ScalarType "tsvector"),
    ("to_tsvector",[ScalarType "text"],ScalarType "tsvector"),
    ("transaction_timestamp",[],ScalarType "timestamp with time zone"),
    ("translate",[ScalarType "text",ScalarType "text",ScalarType "text"],ScalarType "text"),
    ("trigger_out",[ScalarType "trigger"],ScalarType "cstring"),
    ("trunc",[ScalarType "numeric"],ScalarType "numeric"),
    ("trunc",[ScalarType "numeric",ScalarType "integer"],ScalarType "numeric"),
    ("trunc",[ScalarType "macaddr"],ScalarType "macaddr"),
    ("trunc",[ScalarType "double precision"],ScalarType "double precision"),
    ("ts_debug",[ScalarType "config regconfig",ScalarType "document text",ScalarType "OUT alias text",ScalarType "OUT description text",ScalarType "OUT token text",ScalarType "OUT dictionaries regdictionary[]",ScalarType "OUT dictionary regdictionary",ScalarType "OUT lexemes text[]"],ScalarType "SETOF record"),
    ("ts_debug",[ScalarType "document text",ScalarType "OUT alias text",ScalarType "OUT description text",ScalarType "OUT token text",ScalarType "OUT dictionaries regdictionary[]",ScalarType "OUT dictionary regdictionary",ScalarType "OUT lexemes text[]"],ScalarType "SETOF record"),
    ("ts_headline",[ScalarType "regconfig",ScalarType "text",ScalarType "tsquery"],ScalarType "text"),
    ("ts_headline",[ScalarType "regconfig",ScalarType "text",ScalarType "tsquery",ScalarType "text"],ScalarType "text"),
    ("ts_headline",[ScalarType "text",ScalarType "tsquery"],ScalarType "text"),
    ("ts_headline",[ScalarType "text",ScalarType "tsquery",ScalarType "text"],ScalarType "text"),
    ("ts_lexize",[ScalarType "regdictionary",ScalarType "text"],ScalarType "text[]"),
    ("ts_match_qv",[ScalarType "tsquery",ScalarType "tsvector"],ScalarType "boolean"),
    ("ts_match_tq",[ScalarType "text",ScalarType "tsquery"],ScalarType "boolean"),
    ("ts_match_tt",[ScalarType "text",ScalarType "text"],ScalarType "boolean"),
    ("ts_match_vq",[ScalarType "tsvector",ScalarType "tsquery"],ScalarType "boolean"),
    ("ts_parse",[ScalarType "parser_name text",ScalarType "txt text",ScalarType "OUT tokid integer",ScalarType "OUT token text"],ScalarType "SETOF record"),
    ("ts_parse",[ScalarType "parser_oid oid",ScalarType "txt text",ScalarType "OUT tokid integer",ScalarType "OUT token text"],ScalarType "SETOF record"),
    ("ts_rank",[ScalarType "tsvector",ScalarType "tsquery"],ScalarType "real"),
    ("ts_rank",[ScalarType "real[]",ScalarType "tsvector",ScalarType "tsquery",ScalarType "integer"],ScalarType "real"),
    ("ts_rank",[ScalarType "real[]",ScalarType "tsvector",ScalarType "tsquery"],ScalarType "real"),
    ("ts_rank",[ScalarType "tsvector",ScalarType "tsquery",ScalarType "integer"],ScalarType "real"),
    ("ts_rank_cd",[ScalarType "real[]",ScalarType "tsvector",ScalarType "tsquery"],ScalarType "real"),
    ("ts_rank_cd",[ScalarType "real[]",ScalarType "tsvector",ScalarType "tsquery",ScalarType "integer"],ScalarType "real"),
    ("ts_rank_cd",[ScalarType "tsvector",ScalarType "tsquery"],ScalarType "real"),
    ("ts_rank_cd",[ScalarType "tsvector",ScalarType "tsquery",ScalarType "integer"],ScalarType "real"),
    ("ts_rewrite",[ScalarType "tsquery",ScalarType "text"],ScalarType "tsquery"),
    ("ts_rewrite",[ScalarType "tsquery",ScalarType "tsquery",ScalarType "tsquery"],ScalarType "tsquery"),
    ("ts_stat",[ScalarType "query text",ScalarType "weights text",ScalarType "OUT word text",ScalarType "OUT ndoc integer",ScalarType "OUT nentry integer"],ScalarType "SETOF record"),
    ("ts_stat",[ScalarType "query text",ScalarType "OUT word text",ScalarType "OUT ndoc integer",ScalarType "OUT nentry integer"],ScalarType "SETOF record"),
    ("ts_token_type",[ScalarType "parser_name text",ScalarType "OUT tokid integer",ScalarType "OUT alias text",ScalarType "OUT description text"],ScalarType "SETOF record"),
    ("ts_token_type",[ScalarType "parser_oid oid",ScalarType "OUT tokid integer",ScalarType "OUT alias text",ScalarType "OUT description text"],ScalarType "SETOF record"),
    ("ts_typanalyze",[ScalarType "internal"],ScalarType "boolean"),
    ("tsmatchjoinsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "smallint",ScalarType "internal"],ScalarType "double precision"),
    ("tsmatchsel",[ScalarType "internal",ScalarType "oid",ScalarType "internal",ScalarType "integer"],ScalarType "double precision"),
    ("tsq_mcontained",[ScalarType "tsquery",ScalarType "tsquery"],ScalarType "boolean"),
    ("tsq_mcontains",[ScalarType "tsquery",ScalarType "tsquery"],ScalarType "boolean"),
    ("tsquery_and",[ScalarType "tsquery",ScalarType "tsquery"],ScalarType "tsquery"),
    ("tsquery_cmp",[ScalarType "tsquery",ScalarType "tsquery"],ScalarType "integer"),
    ("tsquery_eq",[ScalarType "tsquery",ScalarType "tsquery"],ScalarType "boolean"),
    ("tsquery_ge",[ScalarType "tsquery",ScalarType "tsquery"],ScalarType "boolean"),
    ("tsquery_gt",[ScalarType "tsquery",ScalarType "tsquery"],ScalarType "boolean"),
    ("tsquery_le",[ScalarType "tsquery",ScalarType "tsquery"],ScalarType "boolean"),
    ("tsquery_lt",[ScalarType "tsquery",ScalarType "tsquery"],ScalarType "boolean"),
    ("tsquery_ne",[ScalarType "tsquery",ScalarType "tsquery"],ScalarType "boolean"),
    ("tsquery_not",[ScalarType "tsquery"],ScalarType "tsquery"),
    ("tsquery_or",[ScalarType "tsquery",ScalarType "tsquery"],ScalarType "tsquery"),
    ("tsqueryin",[ScalarType "cstring"],ScalarType "tsquery"),
    ("tsqueryout",[ScalarType "tsquery"],ScalarType "cstring"),
    ("tsqueryrecv",[ScalarType "internal"],ScalarType "tsquery"),
    ("tsquerysend",[ScalarType "tsquery"],ScalarType "bytea"),
    ("tsvector_cmp",[ScalarType "tsvector",ScalarType "tsvector"],ScalarType "integer"),
    ("tsvector_concat",[ScalarType "tsvector",ScalarType "tsvector"],ScalarType "tsvector"),
    ("tsvector_eq",[ScalarType "tsvector",ScalarType "tsvector"],ScalarType "boolean"),
    ("tsvector_ge",[ScalarType "tsvector",ScalarType "tsvector"],ScalarType "boolean"),
    ("tsvector_gt",[ScalarType "tsvector",ScalarType "tsvector"],ScalarType "boolean"),
    ("tsvector_le",[ScalarType "tsvector",ScalarType "tsvector"],ScalarType "boolean"),
    ("tsvector_lt",[ScalarType "tsvector",ScalarType "tsvector"],ScalarType "boolean"),
    ("tsvector_ne",[ScalarType "tsvector",ScalarType "tsvector"],ScalarType "boolean"),
    ("tsvectorin",[ScalarType "cstring"],ScalarType "tsvector"),
    ("tsvectorout",[ScalarType "tsvector"],ScalarType "cstring"),
    ("tsvectorrecv",[ScalarType "internal"],ScalarType "tsvector"),
    ("tsvectorsend",[ScalarType "tsvector"],ScalarType "bytea"),
    ("txid_current",[],ScalarType "bigint"),
    ("txid_current_snapshot",[],ScalarType "txid_snapshot"),
    ("txid_snapshot_in",[ScalarType "cstring"],ScalarType "txid_snapshot"),
    ("txid_snapshot_out",[ScalarType "txid_snapshot"],ScalarType "cstring"),
    ("txid_snapshot_recv",[ScalarType "internal"],ScalarType "txid_snapshot"),
    ("txid_snapshot_send",[ScalarType "txid_snapshot"],ScalarType "bytea"),
    ("txid_snapshot_xip",[ScalarType "txid_snapshot"],ScalarType "SETOF bigint"),
    ("txid_snapshot_xmax",[ScalarType "txid_snapshot"],ScalarType "bigint"),
    ("txid_snapshot_xmin",[ScalarType "txid_snapshot"],ScalarType "bigint"),
    ("txid_visible_in_snapshot",[ScalarType "bigint",ScalarType "txid_snapshot"],ScalarType "boolean"),
    ("uhc_to_utf8",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("unknownin",[ScalarType "cstring"],ScalarType "unknown"),
    ("unknownout",[ScalarType "unknown"],ScalarType "cstring"),
    ("unknownrecv",[ScalarType "internal"],ScalarType "unknown"),
    ("unknownsend",[ScalarType "unknown"],ScalarType "bytea"),
    ("unnest",[ScalarType "anyarray"],ScalarType "SETOF anyelement"),
    ("upper",[ScalarType "text"],ScalarType "text"),
    ("utf8_to_ascii",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("utf8_to_big5",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("utf8_to_euc_cn",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("utf8_to_euc_jis_2004",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("utf8_to_euc_jp",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("utf8_to_euc_kr",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("utf8_to_euc_tw",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("utf8_to_gb18030",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("utf8_to_gbk",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("utf8_to_iso8859",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("utf8_to_iso8859_1",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("utf8_to_johab",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("utf8_to_koi8r",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("utf8_to_koi8u",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("utf8_to_shift_jis_2004",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("utf8_to_sjis",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("utf8_to_uhc",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("utf8_to_win",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("uuid_cmp",[ScalarType "uuid",ScalarType "uuid"],ScalarType "integer"),
    ("uuid_eq",[ScalarType "uuid",ScalarType "uuid"],ScalarType "boolean"),
    ("uuid_ge",[ScalarType "uuid",ScalarType "uuid"],ScalarType "boolean"),
    ("uuid_gt",[ScalarType "uuid",ScalarType "uuid"],ScalarType "boolean"),
    ("uuid_hash",[ScalarType "uuid"],ScalarType "integer"),
    ("uuid_in",[ScalarType "cstring"],ScalarType "uuid"),
    ("uuid_le",[ScalarType "uuid",ScalarType "uuid"],ScalarType "boolean"),
    ("uuid_lt",[ScalarType "uuid",ScalarType "uuid"],ScalarType "boolean"),
    ("uuid_ne",[ScalarType "uuid",ScalarType "uuid"],ScalarType "boolean"),
    ("uuid_out",[ScalarType "uuid"],ScalarType "cstring"),
    ("uuid_recv",[ScalarType "internal"],ScalarType "uuid"),
    ("uuid_send",[ScalarType "uuid"],ScalarType "bytea"),
    ("varbit",[ScalarType "bit varying",ScalarType "integer",ScalarType "boolean"],ScalarType "bit varying"),
    ("varbit_in",[ScalarType "cstring",ScalarType "oid",ScalarType "integer"],ScalarType "bit varying"),
    ("varbit_out",[ScalarType "bit varying"],ScalarType "cstring"),
    ("varbit_recv",[ScalarType "internal",ScalarType "oid",ScalarType "integer"],ScalarType "bit varying"),
    ("varbit_send",[ScalarType "bit varying"],ScalarType "bytea"),
    ("varbitcmp",[ScalarType "bit varying",ScalarType "bit varying"],ScalarType "integer"),
    ("varbiteq",[ScalarType "bit varying",ScalarType "bit varying"],ScalarType "boolean"),
    ("varbitge",[ScalarType "bit varying",ScalarType "bit varying"],ScalarType "boolean"),
    ("varbitgt",[ScalarType "bit varying",ScalarType "bit varying"],ScalarType "boolean"),
    ("varbitle",[ScalarType "bit varying",ScalarType "bit varying"],ScalarType "boolean"),
    ("varbitlt",[ScalarType "bit varying",ScalarType "bit varying"],ScalarType "boolean"),
    ("varbitne",[ScalarType "bit varying",ScalarType "bit varying"],ScalarType "boolean"),
    ("varbittypmodin",[ScalarType "cstring[]"],ScalarType "integer"),
    ("varbittypmodout",[ScalarType "integer"],ScalarType "cstring"),
    ("varchar",[ScalarType "character varying",ScalarType "integer",ScalarType "boolean"],ScalarType "character varying"),
    ("varchar",[ScalarType "name"],ScalarType "character varying"),
    ("varcharin",[ScalarType "cstring",ScalarType "oid",ScalarType "integer"],ScalarType "character varying"),
    ("varcharout",[ScalarType "character varying"],ScalarType "cstring"),
    ("varcharrecv",[ScalarType "internal",ScalarType "oid",ScalarType "integer"],ScalarType "character varying"),
    ("varcharsend",[ScalarType "character varying"],ScalarType "bytea"),
    ("varchartypmodin",[ScalarType "cstring[]"],ScalarType "integer"),
    ("varchartypmodout",[ScalarType "integer"],ScalarType "cstring"),
    ("version",[],ScalarType "text"),
    ("void_in",[ScalarType "cstring"],ScalarType "void"),
    ("void_out",[ScalarType "void"],ScalarType "cstring"),
    ("width",[ScalarType "box"],ScalarType "double precision"),
    ("width_bucket",[ScalarType "double precision",ScalarType "double precision",ScalarType "double precision",ScalarType "integer"],ScalarType "integer"),
    ("width_bucket",[ScalarType "numeric",ScalarType "numeric",ScalarType "numeric",ScalarType "integer"],ScalarType "integer"),
    ("win1250_to_latin2",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("win1250_to_mic",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("win1251_to_iso",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("win1251_to_koi8r",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("win1251_to_mic",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("win1251_to_win866",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("win866_to_iso",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("win866_to_koi8r",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("win866_to_mic",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("win866_to_win1251",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("win_to_utf8",[ScalarType "integer",ScalarType "integer",ScalarType "cstring",ScalarType "internal",ScalarType "integer"],ScalarType "void"),
    ("xideq",[ScalarType "xid",ScalarType "xid"],ScalarType "boolean"),
    ("xideqint4",[ScalarType "xid",ScalarType "integer"],ScalarType "boolean"),
    ("xidin",[ScalarType "cstring"],ScalarType "xid"),
    ("xidout",[ScalarType "xid"],ScalarType "cstring"),
    ("xidrecv",[ScalarType "internal"],ScalarType "xid"),
    ("xidsend",[ScalarType "xid"],ScalarType "bytea"),
    ("xml",[ScalarType "text"],ScalarType "xml"),
    ("xml_in",[ScalarType "cstring"],ScalarType "xml"),
    ("xml_out",[ScalarType "xml"],ScalarType "cstring"),
    ("xml_recv",[ScalarType "internal"],ScalarType "xml"),
    ("xml_send",[ScalarType "xml"],ScalarType "bytea"),
    ("xmlcomment",[ScalarType "text"],ScalarType "xml"),
    ("xmlconcat2",[ScalarType "xml",ScalarType "xml"],ScalarType "xml"),
    ("xmlvalidate",[ScalarType "xml",ScalarType "text"],ScalarType "boolean"),
    ("xpath",[ScalarType "text",ScalarType "xml",ScalarType "text[]"],ScalarType "xml[]"),
    ("xpath",[ScalarType "text",ScalarType "xml"],ScalarType "xml[]")
    ]
}
