Examples
========

All this code is currently available in the cabal source package, to get use

~~~~~{.Bash}
cabal update
cabal unpack hssqlppp
~~~~~

Code fragments
--------------

Here are some extracts from the test files which show what sql can be
parsed, what can be type checked, and what kind of antiquotation the
quasiquotation supports.

* [Parsing examples](ParserTests.html)
* [Type-checking examples](TypeCheckTests.html)
* [Quasiquotation examples](QuasiQuoteTests.html)

HsSqlSystem
-----------

[HsSqlSystem](pandoc_source/examples/HsSqlSystem.lhs.html) - an executable that
has a bunch of functions, source contains documentation and examples
for the commands. E.g.:

* [Parse command](pandoc_source/examples/HsSqlSystem.lhs.html#parse) -
  parse some SQL, display AST.
* [TypeCheck command](pandoc_source/examples/HsSqlSystem.lhs.html#typecheck) -
  parse some SQL, type check, and display type errors in Emacs format.
* [PPCatalog command](pandoc_source/examples/HsSqlSystem.lhs.html#ppcatalog) -
  parse some SQL, type check, display catalog.

Two of the libraries used by HsSqlSystem:

* [DatabaseLoader](pandoc_source/examples/Database/HsSqlPpp/Examples/DatabaseLoader.lhs.html),
  code to parse some SQL, optionally run a transform function on the
  AST, then load the result into the database.
* [AnnotateSource](pandoc_source/examples/Database/HsSqlPpp/Examples/AnnotateSource.lhs.html),
  load some SQL, type check, and interpolate some type information in
  comments back into the source code.

Typesafe database access
------------------------

Four different approaches to type safe database access, just rough
sketches. Two generate new Haskell source files, and two work using
template Haskell.

The two source code generators can be run from HsSqlSystem.

A example of using each approach is given. You must set up the sample
database to compile or run the examples. You can then run the samples
using
[examples/RunWrappers.lhs](pandoc_source/examples/RunWrappers.lhs). The
source of the samples contains a copy of the output so you can see
this without setting up the database.

Sample database setup:

Unpack the cabal source, then load testfiles/suppliers_and_parts.sql
into a new database. Edit
[examples/Database/HsSqlPpp/Examples/Wrappers/ConnectionString.hs](examples/Database/HsSqlPpp/Examples/Wrappers/ConnectionString.hs)
to set the database connection information to this database.

* [generate haskell, use tuples](pandoc_source/examples/Database/HsSqlPpp/Examples/Wrappers/)
* [example source](pandoc_source/examples/Database/HsSqlPpp/Examples/Wrappers/)
* [generated example](pandoc_source/examples/Database/HsSqlPpp/Examples/Wrappers/)

* [generate haskell, use hlists](pandoc_source/examples/Database/HsSqlPpp/Examples/Wrappers/)
* [example source](pandoc_source/examples/Database/HsSqlPpp/Examples/Wrappers/)
* [generated example](pandoc_source/examples/Database/HsSqlPpp/Examples/Wrappers/)

* [template haskell, use tuples](pandoc_source/examples/Database/HsSqlPpp/Examples/Wrappers/)
* [example source](pandoc_source/examples/Database/HsSqlPpp/Examples/Wrappers/)

* [template haskell, use hlists](pandoc_source/examples/Database/HsSqlPpp/Examples/Wrappers/)
* [example source](pandoc_source/examples/Database/HsSqlPpp/Examples/Wrappers/)

SQL Extensions
--------------

Some examples to write extensions to plpgsql using ast
transforms. (Being able to do this was the original motivation for
writing HsSqlPpp.)

[CreateVarSimple](pandoc_source/examples/Database/HsSqlPpp/Examples/Extensions/CreateVarSimple.lhs.html).
Demonstration extension.

[ExtendedConstraints](pandoc_source/examples/Database/HsSqlPpp/Examples/Extensions/ExtendedConstraints.lhs.html).

[Modules](pandoc_source/examples/Database/HsSqlPpp/Examples/Extensions/Module.lhs.html).

[ReadOnlyTables](pandoc_source/examples/Database/HsSqlPpp/Examples/Extensions/ReadOnlyTables.lhs.html).

[SimplifiedCatalog](pandoc_source/examples/Database/HsSqlPpp/Examples/Extensions/SimplifiedCatalog.lhs.html).

[TransitionConstraints](pandoc_source/examples/Database/HsSqlPpp/Examples/Extensions/TransitionConstraints.lhs.html).

[CreateVar](pandoc_source/examples/Database/HsSqlPpp/Examples/Extensions/CreateVar.lhs.html)

ddl triggers

notify system

default not null

cardinality constraint shorthands

multiple update hack

out of order definitions
