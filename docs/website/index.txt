HsSqlPpp
========

A parser, quasiquoter, pretty printer, and type checker for SQL
written in Haskell. Supports PostgreSQL SQL and PL/pgSQL syntax. BSD
licensed.

*This documentation is currently for the unreleased development
version, to be 0.3.0, which isn't on HackageDB. You can download it
using:*

~~~~~{.sh}
bzr branch lp:~jakewheat/hssqlppp/trunk
~~~~~

Possible uses include:

* lint checking sql code
* type-checker can help with development: e.g. change the name of a
  view, type-check, and you can see which functions you need to update
  with the new name
* generating sql code from scratch
* transforming sql code using quasiquoting
* viewing the catalog produced by some sql code
* helping with typesafe database access from haskell
* generating documentation for sql

Status
======

Pre-alpha. Support for parsing SQL is patchy, but not too bad. Here is
an extract from the parsing tests which gives load of examples of what
kind of SQL can currently be parsed:

* [Parsing examples](ParserTests.html)

Support for type-checking is also patchy. Most of the effort so far
has been put into producing catalog information out, and type checking
parameterised crud statements. These two aspects work quite well,
although there is a fair bit missing from the catalog information
currently. The type checker skips over type check failures and as yet
unsupported sql quite well.

I find it pretty useful when I change or remove a function, table or
view, the type checker will recheck the function bodies much better
than loading into postgres does.

Extract from the type checking tests:

* [Type-checking examples](TypeCheckTests.html)

Currently limited support for quasiquoting, here are the examples:

* [Quasiquotation examples](QuasiQuoteTests.html)

The [example database for a game, Chaos
2010](testfiles/chaos2010sql/Overview.txt.html) is an example of a
smallish database which is parsed, transformed, then loaded into the
database successfully. The extensions which it uses to transform the
tree use quite a lot of quasiquoting.

Some other limitations are that the design of the AST node types is
pretty basic, not much work has been done on correctly rejecting
invalid SQL (although it does pretty well despite this), and not much
thought has been put into the error messages/ error reporting yet
(although you can definitely use it to catch lots of type checking
issues, it mostly gives you something you can understand with accurate
source positions).

Installation
============

This project is currently developed on GHC 6.12, but the latest
release still works on 6.10.

A bit of adventure for non Haskell programmers: if you don't already
have Haskell installed, you can get it here:
[http://hackage.haskell.org/platform/](http://hackage.haskell.org/platform/)

You will also need PostgreSQL installed. HBDC-postgresql (which is
installed by cabal below) depends on the development libraries/headers
for PostgreSQL.

Then use

~~~~~{.sh}
cabal update
cabal install hssqlppp
~~~~~

to install the library.

Also comes with a optional executable which can run the automated
tests, run some commands such as parsing or type checking, and is also
used to generate some of the source files and the documentation. (See
[HsSqlSystem](pandoc_source/examples/HsSqlSystem.lhs.html) for what
commands it supports.)

You can use

~~~~~{.sh}
cabal install hssqlppp -fexecutable
HsSqlSystem -?
~~~~~

to install the exe along with the library, or

~~~~~{.sh}
cabal unpack hssqlppp
cd hssqlppp-x.x.x
ghc --make -threaded -XDeriveDataTypeable -iexamples:src examples/HsSqlSystem.lhs
examples/HsSqlSystem -?
~~~~~

to compile and run without installing it.

Documentation
=============

[Haddock](haddock/index.html)

[Example code](examples.html)

The [htmlized source for the library and
examples](pandoc_source/index.html) has lots of comments, but is very
unpolished.

Useful links
============

Homepage: [http://community.haskell.org/%7EJakeWheat/hssqlppp/index.html](http://community.haskell.org/%7EJakeWheat/hssqlppp/index.html)

Hackage: [http://hackage.haskell.org/package/hssqlppp](http://hackage.haskell.org/package/hssqlppp)

Repository: [http://launchpad.net/hssqlppp](http://launchpad.net/hssqlppp)

Contact
=======

Let me know if you're using/ interested in using the library, if you
have any problems, bug reports, or suggestions, etc.. All
contributions, comments and criticism welcome:

jakewheatmail@gmail.com
