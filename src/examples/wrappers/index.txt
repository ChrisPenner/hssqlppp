Example code to show creation of typesafe wrappers for crud statements
in haskell.

Typesafe database access
------------------------

Simple sketch for doing type safe access, not great yet. Uses template
haskell to get the type of statements and make this available at
compile time, relations are represented by lists of tuples, so the
columns have the right types but no names. Lack of nullability
inference means all the types are currently Maybes.

[template haskell, use tuples](pandoc_source/examples/Database/HsSqlPpp/Examples/Wrappers/ThTupleWrapper.lhs.html)

There is example code which uses this wrapper to read and update a
database - you must set up the sample database to compile or run it,
then use
[examples/RunWrappers.lhs](pandoc_source/examples/RunWrappers.lhs.html). The
source contains a copy of the output so you can see this without
setting up the database.

Sample database setup:

Unpack the cabal source, then load testfiles/suppliers_and_parts.sql
into a new database. Edit
[examples/Database/HsSqlPpp/Examples/Wrappers/ConnectionString.hs](pandoc_source/examples/Database/HsSqlPpp/Examples/Wrappers/ConnectionString.hs.html)
to set the database connection information to this database.

[example source](pandoc_source/examples/Database/HsSqlPpp/Examples/Wrappers/ThTupleExample.lhs.html)

There is also some code to use hlists instead of tuples but it isn't
currently working.


* [ConnectionString.hs](ConnectionString.hs.html)
* [GenerateHListSourceExample.lhs](GenerateHListSourceExample.lhs.html)
* [GenerateHListWrapper.lhs](GenerateHListWrapper.lhs.html)
* [GenerateTupleSourceExample.lhs](GenerateTupleSourceExample.lhs.html)
* [GenerateTupleWrapper.lhs](GenerateTupleWrapper.lhs.html)
* [MakeLabels.hs](MakeLabels.hs.html)
* [RunWrappers.lhs](RunWrappers.lhs.html)
* [SelectRelation.lhs](SelectRelation.lhs.html)
* [ThHListExample.lhs](ThHListExample.lhs.html)
* [ThHListWrapper.lhs](ThHListWrapper.lhs.html)
* [ThTupleExample.lhs](ThTupleExample.lhs.html)
* [ThTupleWrapper.lhs](ThTupleWrapper.lhs.html)
* [WrapLib.lhs](WrapLib.lhs.html)
* [suppliers_and_parts.sql](suppliers_and_parts.sql.html)
