
attr SelectList
  inh downEnv :: Environment
  syn upType :: {Maybe [(String,Type)]}

attr SelectItemList
  inh downEnv :: Environment
  syn cols :: {[Maybe (String,Type)]}
  syn upType :: {Maybe [(String,Type)]}

attr SelectItem
  inh downEnv :: Environment
  syn col :: {Maybe (String,Type)}

sem SelectList
  | SelectList
      lhs.upType = @items.upType
      ann.tpe = Left []

sem SelectItemList
  | Nil lhs.cols = []
        lhs.upType = Nothing
  | Cons
      loc.cols = @hd.col : @tl.cols
      lhs.cols = @loc.cols
      lhs.upType = sequence @loc.cols

sem SelectItem
  | SelExp SelectItem
      ann.tpe = Left []

sem SelectItem
  | SelectItem
      lhs.col = fmap (nm @name,) @ex.upType

sem SelectItem
  | SelExp
      lhs.col = fmap (columnName @ex.originalTree,) @ex.upType

{

-- | thet name to choose for a column in a select list which doesn't
-- have an explicit name
columnName :: ScalarExpr -> String
columnName (Identifier _ i) = nm i
columnName (QIdentifier _ is) = nm $ last is
columnName (App _ f@(Name _ ncs) _) = nm $ last ncs
columnName (Cast _ _ (SimpleTypeName _ (Name _ ncs))) = nm $ last ncs
columnName (WindowApp _ (App _ f@(Name _ ncs) _) _ _ _) = nm $ last ncs
columnName (AggregateApp _ _ (App _ f@(Name _ ncs) _) _) = nm $ last ncs
columnName _ = "?column?"

nm :: NameComponent -> String
nm (Nmc n) = map toLower n
nm (QNmc n) = n
}

-------------------------------

-- star expansion handling

sem SelectItemList
  | Nil lhs.slExpandedStars = []
  | Cons lhs.slExpandedStars = @hd.slExpandedStars ++ @tl.slExpandedStars

sem SelectList
  | SelectList
      lhs.expandedStars = SelectList @ann.originalTree @items.slExpandedStars

attr SelectItem SelectItemList
  syn slExpandedStars :: {[SelectItem]}

sem SelectItem
  | SelectItem
      -- star with alias -> wrong so do nothing
      lhs.slExpandedStars = [@expandedStars]

  | SelExp
      -- the error gets lost
      lhs.slExpandedStars =
         case @ex.originalTree of
           Star _ | Right is <- envExpandStar Nothing @lhs.downEnv ->
              let a = @ann.originalTree
              in map (\(n,_) -> SelExp a (Identifier a (QNmc n))) is
           x -> [@originalTree]