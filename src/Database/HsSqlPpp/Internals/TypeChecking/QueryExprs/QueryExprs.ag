
{-
basic query expression type checking:

take the environment produced by the tref
feed it into the selectlist

take the type produced in the select list and pass it up

-}



include "TypeChecking/QueryExprs/TableRefs.ag"
include "TypeChecking/QueryExprs/SelectLists.ag"

attr QueryExpr
  syn upType :: {Maybe [(String,Type)]}

--support for correlated subqueries
attr QueryExpr
  inh outerDownEnv :: {Maybe Environment}
sem Statement
  | QueryStatement ex.outerDownEnv = Nothing
sem TableRef
  | SubTref sel.outerDownEnv = Nothing
sem WithQuery
  | WithQuery ex.outerDownEnv = Nothing
sem InList
  | InQueryExpr sel.outerDownEnv = Nothing

sem QueryExpr
    | Select
        selSelectList.downEnv = @selTref.upEnv
        selGroupBy.downEnv = @selTref.upEnv
        selHaving.downEnv = @selTref.upEnv
        selOrderBy.downEnv = @selSelectList.upEnv
        -- wrap the names and types in a composite which
        -- fits with the annotation type
        loc.tpe = maybe (Left []) (Right . CompositeType) @selSelectList.upType
        -- pass the fieldnames and types up in the uptype attribute without
        -- wrapping since everything that wants to use it will have to
        -- unwrap it straight after, so the tpe and the uptype aren't the same
        -- but are equivalent
        lhs.upType = @selSelectList.upType
        -- correlated subquery support - combine the identifiers
        -- coming from outside the query expr
        selWhere.downEnv = maybe @selTref.upEnv
                            (\e -> createCorrelatedSubqueryEnvironment e @selTref.upEnv)
                            @lhs.outerDownEnv

sem QueryExpr
    | Select CombineQueryExpr Values WithQueryExpr
        loc.tpe :: {Either [TypeError] Type}

-- temp

sem QueryExpr
    | CombineQueryExpr Values WithQueryExpr
        loc.tpe = Left []

attr MaybeBoolExpr ScalarExprDirectionPairList ScalarExprDirectionPair
     JoinExpr InList
  inh downEnv :: Environment

sem InList
    | InList InQueryExpr
        loc.tpe = Left []

sem JoinExpr
    | JoinOn JoinUsing
        loc.tpe = Left []
