Overview of the library source:

the files in the folder
src/Database/HsSqlPpp/
are all the public api files. Some of these contain the implementation
code, and some are just forwarding modules.

The main interesting files are:

code for the pretty printer
src/Database/HsSqlPpp/PrettyPrinter.lhs

code for the sql types
src/Database/HsSqlPpp/SqlTypes.lhs

code for the quasiquoting:
src/Database/HsSqlPpp/SqlQuote.lhs

main sql parsing
src/Database/HsSqlPpp/Parsing/ParserInternal.lhs

sql lexing
src/Database/HsSqlPpp/Parsing/Lexer.lhs

sql ast types:
src/Database/HsSqlPpp/AstInternals/AstInternal.ag

a generated and slighly mangled copy of these ast types to support
antiquotation:
src/Database/HsSqlPpp/AstInternals/AstAnti.hs

the code to create and query catalogs:
src/Database/HsSqlPpp/AstInternals/Catalog/CatalogInternal.lhs

code to create and query local bindings - used for parameters and
variables in plpgsql functions, as well as for passing the types of
identifiers around inside statements (e.g. getting the names and types
from a table ref to pass to a select list inside a select statement)
Most of the logic for type checking joins is in here
src/Database/HsSqlPpp/AstInternals/TypeChecking/LocalBindings.lhs

the type checking code is split up into multiple ag files in the
following folder:
src/Database/HsSqlPpp/AstInternals/TypeChecking/

the main hairy bit of type checking (apart from joins),
includes the complicated overloaded function matching and implicit
cast and conversion logic:
src/Database/HsSqlPpp/AstInternals/TypeChecking/TypeConversion.lhs

